
lcd.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008078  080001e8  080001e8  000011e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002fdc  08008260  08008260  00009260  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800b23c  0800b23c  0000d010  2**0
                  CONTENTS
  4 .ARM          00000000  0800b23c  0800b23c  0000d010  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800b23c  0800b23c  0000d010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800b23c  0800b23c  0000c23c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800b240  0800b240  0000c240  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000010  20000000  0800b244  0000d000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000010  0800b254  0000d010  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000040  0800b254  0000d040  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000d010  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000527d  00000000  00000000  0000d039  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000012da  00000000  00000000  000122b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000004e8  00000000  00000000  00013590  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000399  00000000  00000000  00013a78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018ae7  00000000  00000000  00013e11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000075c5  00000000  00000000  0002c8f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008dac0  00000000  00000000  00033ebd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000c197d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000012dc  00000000  00000000  000c19c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000095  00000000  00000000  000c2c9c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e8 <__do_global_dtors_aux>:
 80001e8:	b510      	push	{r4, lr}
 80001ea:	4c05      	ldr	r4, [pc, #20]	@ (8000200 <__do_global_dtors_aux+0x18>)
 80001ec:	7823      	ldrb	r3, [r4, #0]
 80001ee:	b933      	cbnz	r3, 80001fe <__do_global_dtors_aux+0x16>
 80001f0:	4b04      	ldr	r3, [pc, #16]	@ (8000204 <__do_global_dtors_aux+0x1c>)
 80001f2:	b113      	cbz	r3, 80001fa <__do_global_dtors_aux+0x12>
 80001f4:	4804      	ldr	r0, [pc, #16]	@ (8000208 <__do_global_dtors_aux+0x20>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	2301      	movs	r3, #1
 80001fc:	7023      	strb	r3, [r4, #0]
 80001fe:	bd10      	pop	{r4, pc}
 8000200:	20000010 	.word	0x20000010
 8000204:	00000000 	.word	0x00000000
 8000208:	08008248 	.word	0x08008248

0800020c <frame_dummy>:
 800020c:	b508      	push	{r3, lr}
 800020e:	4b03      	ldr	r3, [pc, #12]	@ (800021c <frame_dummy+0x10>)
 8000210:	b11b      	cbz	r3, 800021a <frame_dummy+0xe>
 8000212:	4903      	ldr	r1, [pc, #12]	@ (8000220 <frame_dummy+0x14>)
 8000214:	4803      	ldr	r0, [pc, #12]	@ (8000224 <frame_dummy+0x18>)
 8000216:	f3af 8000 	nop.w
 800021a:	bd08      	pop	{r3, pc}
 800021c:	00000000 	.word	0x00000000
 8000220:	20000014 	.word	0x20000014
 8000224:	08008248 	.word	0x08008248

08000228 <__aeabi_dmul>:
 8000228:	b570      	push	{r4, r5, r6, lr}
 800022a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800022e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000232:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000236:	bf1d      	ittte	ne
 8000238:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800023c:	ea94 0f0c 	teqne	r4, ip
 8000240:	ea95 0f0c 	teqne	r5, ip
 8000244:	f000 f8de 	bleq	8000404 <__aeabi_dmul+0x1dc>
 8000248:	442c      	add	r4, r5
 800024a:	ea81 0603 	eor.w	r6, r1, r3
 800024e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000252:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000256:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800025a:	bf18      	it	ne
 800025c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000260:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000264:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000268:	d038      	beq.n	80002dc <__aeabi_dmul+0xb4>
 800026a:	fba0 ce02 	umull	ip, lr, r0, r2
 800026e:	f04f 0500 	mov.w	r5, #0
 8000272:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000276:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800027a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800027e:	f04f 0600 	mov.w	r6, #0
 8000282:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000286:	f09c 0f00 	teq	ip, #0
 800028a:	bf18      	it	ne
 800028c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000290:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000294:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000298:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800029c:	d204      	bcs.n	80002a8 <__aeabi_dmul+0x80>
 800029e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80002a2:	416d      	adcs	r5, r5
 80002a4:	eb46 0606 	adc.w	r6, r6, r6
 80002a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80002ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80002b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80002b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80002b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80002bc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80002c0:	bf88      	it	hi
 80002c2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80002c6:	d81e      	bhi.n	8000306 <__aeabi_dmul+0xde>
 80002c8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80002cc:	bf08      	it	eq
 80002ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80002d2:	f150 0000 	adcs.w	r0, r0, #0
 80002d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002da:	bd70      	pop	{r4, r5, r6, pc}
 80002dc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80002e0:	ea46 0101 	orr.w	r1, r6, r1
 80002e4:	ea40 0002 	orr.w	r0, r0, r2
 80002e8:	ea81 0103 	eor.w	r1, r1, r3
 80002ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80002f0:	bfc2      	ittt	gt
 80002f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80002f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80002fa:	bd70      	popgt	{r4, r5, r6, pc}
 80002fc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000300:	f04f 0e00 	mov.w	lr, #0
 8000304:	3c01      	subs	r4, #1
 8000306:	f300 80ab 	bgt.w	8000460 <__aeabi_dmul+0x238>
 800030a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800030e:	bfde      	ittt	le
 8000310:	2000      	movle	r0, #0
 8000312:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000316:	bd70      	pople	{r4, r5, r6, pc}
 8000318:	f1c4 0400 	rsb	r4, r4, #0
 800031c:	3c20      	subs	r4, #32
 800031e:	da35      	bge.n	800038c <__aeabi_dmul+0x164>
 8000320:	340c      	adds	r4, #12
 8000322:	dc1b      	bgt.n	800035c <__aeabi_dmul+0x134>
 8000324:	f104 0414 	add.w	r4, r4, #20
 8000328:	f1c4 0520 	rsb	r5, r4, #32
 800032c:	fa00 f305 	lsl.w	r3, r0, r5
 8000330:	fa20 f004 	lsr.w	r0, r0, r4
 8000334:	fa01 f205 	lsl.w	r2, r1, r5
 8000338:	ea40 0002 	orr.w	r0, r0, r2
 800033c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000340:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000344:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000348:	fa21 f604 	lsr.w	r6, r1, r4
 800034c:	eb42 0106 	adc.w	r1, r2, r6
 8000350:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000354:	bf08      	it	eq
 8000356:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800035a:	bd70      	pop	{r4, r5, r6, pc}
 800035c:	f1c4 040c 	rsb	r4, r4, #12
 8000360:	f1c4 0520 	rsb	r5, r4, #32
 8000364:	fa00 f304 	lsl.w	r3, r0, r4
 8000368:	fa20 f005 	lsr.w	r0, r0, r5
 800036c:	fa01 f204 	lsl.w	r2, r1, r4
 8000370:	ea40 0002 	orr.w	r0, r0, r2
 8000374:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000378:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800037c:	f141 0100 	adc.w	r1, r1, #0
 8000380:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000384:	bf08      	it	eq
 8000386:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800038a:	bd70      	pop	{r4, r5, r6, pc}
 800038c:	f1c4 0520 	rsb	r5, r4, #32
 8000390:	fa00 f205 	lsl.w	r2, r0, r5
 8000394:	ea4e 0e02 	orr.w	lr, lr, r2
 8000398:	fa20 f304 	lsr.w	r3, r0, r4
 800039c:	fa01 f205 	lsl.w	r2, r1, r5
 80003a0:	ea43 0302 	orr.w	r3, r3, r2
 80003a4:	fa21 f004 	lsr.w	r0, r1, r4
 80003a8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80003ac:	fa21 f204 	lsr.w	r2, r1, r4
 80003b0:	ea20 0002 	bic.w	r0, r0, r2
 80003b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80003b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003bc:	bf08      	it	eq
 80003be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003c2:	bd70      	pop	{r4, r5, r6, pc}
 80003c4:	f094 0f00 	teq	r4, #0
 80003c8:	d10f      	bne.n	80003ea <__aeabi_dmul+0x1c2>
 80003ca:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80003ce:	0040      	lsls	r0, r0, #1
 80003d0:	eb41 0101 	adc.w	r1, r1, r1
 80003d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80003d8:	bf08      	it	eq
 80003da:	3c01      	subeq	r4, #1
 80003dc:	d0f7      	beq.n	80003ce <__aeabi_dmul+0x1a6>
 80003de:	ea41 0106 	orr.w	r1, r1, r6
 80003e2:	f095 0f00 	teq	r5, #0
 80003e6:	bf18      	it	ne
 80003e8:	4770      	bxne	lr
 80003ea:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80003ee:	0052      	lsls	r2, r2, #1
 80003f0:	eb43 0303 	adc.w	r3, r3, r3
 80003f4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80003f8:	bf08      	it	eq
 80003fa:	3d01      	subeq	r5, #1
 80003fc:	d0f7      	beq.n	80003ee <__aeabi_dmul+0x1c6>
 80003fe:	ea43 0306 	orr.w	r3, r3, r6
 8000402:	4770      	bx	lr
 8000404:	ea94 0f0c 	teq	r4, ip
 8000408:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800040c:	bf18      	it	ne
 800040e:	ea95 0f0c 	teqne	r5, ip
 8000412:	d00c      	beq.n	800042e <__aeabi_dmul+0x206>
 8000414:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000418:	bf18      	it	ne
 800041a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800041e:	d1d1      	bne.n	80003c4 <__aeabi_dmul+0x19c>
 8000420:	ea81 0103 	eor.w	r1, r1, r3
 8000424:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000428:	f04f 0000 	mov.w	r0, #0
 800042c:	bd70      	pop	{r4, r5, r6, pc}
 800042e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000432:	bf06      	itte	eq
 8000434:	4610      	moveq	r0, r2
 8000436:	4619      	moveq	r1, r3
 8000438:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800043c:	d019      	beq.n	8000472 <__aeabi_dmul+0x24a>
 800043e:	ea94 0f0c 	teq	r4, ip
 8000442:	d102      	bne.n	800044a <__aeabi_dmul+0x222>
 8000444:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000448:	d113      	bne.n	8000472 <__aeabi_dmul+0x24a>
 800044a:	ea95 0f0c 	teq	r5, ip
 800044e:	d105      	bne.n	800045c <__aeabi_dmul+0x234>
 8000450:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000454:	bf1c      	itt	ne
 8000456:	4610      	movne	r0, r2
 8000458:	4619      	movne	r1, r3
 800045a:	d10a      	bne.n	8000472 <__aeabi_dmul+0x24a>
 800045c:	ea81 0103 	eor.w	r1, r1, r3
 8000460:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000464:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000468:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800046c:	f04f 0000 	mov.w	r0, #0
 8000470:	bd70      	pop	{r4, r5, r6, pc}
 8000472:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000476:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800047a:	bd70      	pop	{r4, r5, r6, pc}

0800047c <__aeabi_drsub>:
 800047c:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000480:	e002      	b.n	8000488 <__adddf3>
 8000482:	bf00      	nop

08000484 <__aeabi_dsub>:
 8000484:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000488 <__adddf3>:
 8000488:	b530      	push	{r4, r5, lr}
 800048a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800048e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000492:	ea94 0f05 	teq	r4, r5
 8000496:	bf08      	it	eq
 8000498:	ea90 0f02 	teqeq	r0, r2
 800049c:	bf1f      	itttt	ne
 800049e:	ea54 0c00 	orrsne.w	ip, r4, r0
 80004a2:	ea55 0c02 	orrsne.w	ip, r5, r2
 80004a6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80004aa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004ae:	f000 80e2 	beq.w	8000676 <__adddf3+0x1ee>
 80004b2:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80004b6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80004ba:	bfb8      	it	lt
 80004bc:	426d      	neglt	r5, r5
 80004be:	dd0c      	ble.n	80004da <__adddf3+0x52>
 80004c0:	442c      	add	r4, r5
 80004c2:	ea80 0202 	eor.w	r2, r0, r2
 80004c6:	ea81 0303 	eor.w	r3, r1, r3
 80004ca:	ea82 0000 	eor.w	r0, r2, r0
 80004ce:	ea83 0101 	eor.w	r1, r3, r1
 80004d2:	ea80 0202 	eor.w	r2, r0, r2
 80004d6:	ea81 0303 	eor.w	r3, r1, r3
 80004da:	2d36      	cmp	r5, #54	@ 0x36
 80004dc:	bf88      	it	hi
 80004de:	bd30      	pophi	{r4, r5, pc}
 80004e0:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80004e4:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80004e8:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80004ec:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80004f0:	d002      	beq.n	80004f8 <__adddf3+0x70>
 80004f2:	4240      	negs	r0, r0
 80004f4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004f8:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80004fc:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000500:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000504:	d002      	beq.n	800050c <__adddf3+0x84>
 8000506:	4252      	negs	r2, r2
 8000508:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800050c:	ea94 0f05 	teq	r4, r5
 8000510:	f000 80a7 	beq.w	8000662 <__adddf3+0x1da>
 8000514:	f1a4 0401 	sub.w	r4, r4, #1
 8000518:	f1d5 0e20 	rsbs	lr, r5, #32
 800051c:	db0d      	blt.n	800053a <__adddf3+0xb2>
 800051e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000522:	fa22 f205 	lsr.w	r2, r2, r5
 8000526:	1880      	adds	r0, r0, r2
 8000528:	f141 0100 	adc.w	r1, r1, #0
 800052c:	fa03 f20e 	lsl.w	r2, r3, lr
 8000530:	1880      	adds	r0, r0, r2
 8000532:	fa43 f305 	asr.w	r3, r3, r5
 8000536:	4159      	adcs	r1, r3
 8000538:	e00e      	b.n	8000558 <__adddf3+0xd0>
 800053a:	f1a5 0520 	sub.w	r5, r5, #32
 800053e:	f10e 0e20 	add.w	lr, lr, #32
 8000542:	2a01      	cmp	r2, #1
 8000544:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000548:	bf28      	it	cs
 800054a:	f04c 0c02 	orrcs.w	ip, ip, #2
 800054e:	fa43 f305 	asr.w	r3, r3, r5
 8000552:	18c0      	adds	r0, r0, r3
 8000554:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000558:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800055c:	d507      	bpl.n	800056e <__adddf3+0xe6>
 800055e:	f04f 0e00 	mov.w	lr, #0
 8000562:	f1dc 0c00 	rsbs	ip, ip, #0
 8000566:	eb7e 0000 	sbcs.w	r0, lr, r0
 800056a:	eb6e 0101 	sbc.w	r1, lr, r1
 800056e:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000572:	d31b      	bcc.n	80005ac <__adddf3+0x124>
 8000574:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000578:	d30c      	bcc.n	8000594 <__adddf3+0x10c>
 800057a:	0849      	lsrs	r1, r1, #1
 800057c:	ea5f 0030 	movs.w	r0, r0, rrx
 8000580:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000584:	f104 0401 	add.w	r4, r4, #1
 8000588:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800058c:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000590:	f080 809a 	bcs.w	80006c8 <__adddf3+0x240>
 8000594:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000598:	bf08      	it	eq
 800059a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800059e:	f150 0000 	adcs.w	r0, r0, #0
 80005a2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005a6:	ea41 0105 	orr.w	r1, r1, r5
 80005aa:	bd30      	pop	{r4, r5, pc}
 80005ac:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80005b0:	4140      	adcs	r0, r0
 80005b2:	eb41 0101 	adc.w	r1, r1, r1
 80005b6:	3c01      	subs	r4, #1
 80005b8:	bf28      	it	cs
 80005ba:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80005be:	d2e9      	bcs.n	8000594 <__adddf3+0x10c>
 80005c0:	f091 0f00 	teq	r1, #0
 80005c4:	bf04      	itt	eq
 80005c6:	4601      	moveq	r1, r0
 80005c8:	2000      	moveq	r0, #0
 80005ca:	fab1 f381 	clz	r3, r1
 80005ce:	bf08      	it	eq
 80005d0:	3320      	addeq	r3, #32
 80005d2:	f1a3 030b 	sub.w	r3, r3, #11
 80005d6:	f1b3 0220 	subs.w	r2, r3, #32
 80005da:	da0c      	bge.n	80005f6 <__adddf3+0x16e>
 80005dc:	320c      	adds	r2, #12
 80005de:	dd08      	ble.n	80005f2 <__adddf3+0x16a>
 80005e0:	f102 0c14 	add.w	ip, r2, #20
 80005e4:	f1c2 020c 	rsb	r2, r2, #12
 80005e8:	fa01 f00c 	lsl.w	r0, r1, ip
 80005ec:	fa21 f102 	lsr.w	r1, r1, r2
 80005f0:	e00c      	b.n	800060c <__adddf3+0x184>
 80005f2:	f102 0214 	add.w	r2, r2, #20
 80005f6:	bfd8      	it	le
 80005f8:	f1c2 0c20 	rsble	ip, r2, #32
 80005fc:	fa01 f102 	lsl.w	r1, r1, r2
 8000600:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000604:	bfdc      	itt	le
 8000606:	ea41 010c 	orrle.w	r1, r1, ip
 800060a:	4090      	lslle	r0, r2
 800060c:	1ae4      	subs	r4, r4, r3
 800060e:	bfa2      	ittt	ge
 8000610:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000614:	4329      	orrge	r1, r5
 8000616:	bd30      	popge	{r4, r5, pc}
 8000618:	ea6f 0404 	mvn.w	r4, r4
 800061c:	3c1f      	subs	r4, #31
 800061e:	da1c      	bge.n	800065a <__adddf3+0x1d2>
 8000620:	340c      	adds	r4, #12
 8000622:	dc0e      	bgt.n	8000642 <__adddf3+0x1ba>
 8000624:	f104 0414 	add.w	r4, r4, #20
 8000628:	f1c4 0220 	rsb	r2, r4, #32
 800062c:	fa20 f004 	lsr.w	r0, r0, r4
 8000630:	fa01 f302 	lsl.w	r3, r1, r2
 8000634:	ea40 0003 	orr.w	r0, r0, r3
 8000638:	fa21 f304 	lsr.w	r3, r1, r4
 800063c:	ea45 0103 	orr.w	r1, r5, r3
 8000640:	bd30      	pop	{r4, r5, pc}
 8000642:	f1c4 040c 	rsb	r4, r4, #12
 8000646:	f1c4 0220 	rsb	r2, r4, #32
 800064a:	fa20 f002 	lsr.w	r0, r0, r2
 800064e:	fa01 f304 	lsl.w	r3, r1, r4
 8000652:	ea40 0003 	orr.w	r0, r0, r3
 8000656:	4629      	mov	r1, r5
 8000658:	bd30      	pop	{r4, r5, pc}
 800065a:	fa21 f004 	lsr.w	r0, r1, r4
 800065e:	4629      	mov	r1, r5
 8000660:	bd30      	pop	{r4, r5, pc}
 8000662:	f094 0f00 	teq	r4, #0
 8000666:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800066a:	bf06      	itte	eq
 800066c:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000670:	3401      	addeq	r4, #1
 8000672:	3d01      	subne	r5, #1
 8000674:	e74e      	b.n	8000514 <__adddf3+0x8c>
 8000676:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800067a:	bf18      	it	ne
 800067c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000680:	d029      	beq.n	80006d6 <__adddf3+0x24e>
 8000682:	ea94 0f05 	teq	r4, r5
 8000686:	bf08      	it	eq
 8000688:	ea90 0f02 	teqeq	r0, r2
 800068c:	d005      	beq.n	800069a <__adddf3+0x212>
 800068e:	ea54 0c00 	orrs.w	ip, r4, r0
 8000692:	bf04      	itt	eq
 8000694:	4619      	moveq	r1, r3
 8000696:	4610      	moveq	r0, r2
 8000698:	bd30      	pop	{r4, r5, pc}
 800069a:	ea91 0f03 	teq	r1, r3
 800069e:	bf1e      	ittt	ne
 80006a0:	2100      	movne	r1, #0
 80006a2:	2000      	movne	r0, #0
 80006a4:	bd30      	popne	{r4, r5, pc}
 80006a6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80006aa:	d105      	bne.n	80006b8 <__adddf3+0x230>
 80006ac:	0040      	lsls	r0, r0, #1
 80006ae:	4149      	adcs	r1, r1
 80006b0:	bf28      	it	cs
 80006b2:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80006b6:	bd30      	pop	{r4, r5, pc}
 80006b8:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80006bc:	bf3c      	itt	cc
 80006be:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80006c2:	bd30      	popcc	{r4, r5, pc}
 80006c4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80006c8:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80006cc:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80006d0:	f04f 0000 	mov.w	r0, #0
 80006d4:	bd30      	pop	{r4, r5, pc}
 80006d6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80006da:	bf1a      	itte	ne
 80006dc:	4619      	movne	r1, r3
 80006de:	4610      	movne	r0, r2
 80006e0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80006e4:	bf1c      	itt	ne
 80006e6:	460b      	movne	r3, r1
 80006e8:	4602      	movne	r2, r0
 80006ea:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80006ee:	bf06      	itte	eq
 80006f0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80006f4:	ea91 0f03 	teqeq	r1, r3
 80006f8:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80006fc:	bd30      	pop	{r4, r5, pc}
 80006fe:	bf00      	nop

08000700 <__aeabi_ui2d>:
 8000700:	f090 0f00 	teq	r0, #0
 8000704:	bf04      	itt	eq
 8000706:	2100      	moveq	r1, #0
 8000708:	4770      	bxeq	lr
 800070a:	b530      	push	{r4, r5, lr}
 800070c:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000710:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000714:	f04f 0500 	mov.w	r5, #0
 8000718:	f04f 0100 	mov.w	r1, #0
 800071c:	e750      	b.n	80005c0 <__adddf3+0x138>
 800071e:	bf00      	nop

08000720 <__aeabi_i2d>:
 8000720:	f090 0f00 	teq	r0, #0
 8000724:	bf04      	itt	eq
 8000726:	2100      	moveq	r1, #0
 8000728:	4770      	bxeq	lr
 800072a:	b530      	push	{r4, r5, lr}
 800072c:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000730:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000734:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 8000738:	bf48      	it	mi
 800073a:	4240      	negmi	r0, r0
 800073c:	f04f 0100 	mov.w	r1, #0
 8000740:	e73e      	b.n	80005c0 <__adddf3+0x138>
 8000742:	bf00      	nop

08000744 <__aeabi_f2d>:
 8000744:	0042      	lsls	r2, r0, #1
 8000746:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800074a:	ea4f 0131 	mov.w	r1, r1, rrx
 800074e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000752:	bf1f      	itttt	ne
 8000754:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 8000758:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 800075c:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000760:	4770      	bxne	lr
 8000762:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 8000766:	bf08      	it	eq
 8000768:	4770      	bxeq	lr
 800076a:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 800076e:	bf04      	itt	eq
 8000770:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000774:	4770      	bxeq	lr
 8000776:	b530      	push	{r4, r5, lr}
 8000778:	f44f 7460 	mov.w	r4, #896	@ 0x380
 800077c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000780:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000784:	e71c      	b.n	80005c0 <__adddf3+0x138>
 8000786:	bf00      	nop

08000788 <__aeabi_ul2d>:
 8000788:	ea50 0201 	orrs.w	r2, r0, r1
 800078c:	bf08      	it	eq
 800078e:	4770      	bxeq	lr
 8000790:	b530      	push	{r4, r5, lr}
 8000792:	f04f 0500 	mov.w	r5, #0
 8000796:	e00a      	b.n	80007ae <__aeabi_l2d+0x16>

08000798 <__aeabi_l2d>:
 8000798:	ea50 0201 	orrs.w	r2, r0, r1
 800079c:	bf08      	it	eq
 800079e:	4770      	bxeq	lr
 80007a0:	b530      	push	{r4, r5, lr}
 80007a2:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80007a6:	d502      	bpl.n	80007ae <__aeabi_l2d+0x16>
 80007a8:	4240      	negs	r0, r0
 80007aa:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80007ae:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80007b2:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80007b6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80007ba:	f43f aed8 	beq.w	800056e <__adddf3+0xe6>
 80007be:	f04f 0203 	mov.w	r2, #3
 80007c2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80007c6:	bf18      	it	ne
 80007c8:	3203      	addne	r2, #3
 80007ca:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80007ce:	bf18      	it	ne
 80007d0:	3203      	addne	r2, #3
 80007d2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80007d6:	f1c2 0320 	rsb	r3, r2, #32
 80007da:	fa00 fc03 	lsl.w	ip, r0, r3
 80007de:	fa20 f002 	lsr.w	r0, r0, r2
 80007e2:	fa01 fe03 	lsl.w	lr, r1, r3
 80007e6:	ea40 000e 	orr.w	r0, r0, lr
 80007ea:	fa21 f102 	lsr.w	r1, r1, r2
 80007ee:	4414      	add	r4, r2
 80007f0:	e6bd      	b.n	800056e <__adddf3+0xe6>
 80007f2:	bf00      	nop

080007f4 <__aeabi_d2uiz>:
 80007f4:	004a      	lsls	r2, r1, #1
 80007f6:	d211      	bcs.n	800081c <__aeabi_d2uiz+0x28>
 80007f8:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 80007fc:	d211      	bcs.n	8000822 <__aeabi_d2uiz+0x2e>
 80007fe:	d50d      	bpl.n	800081c <__aeabi_d2uiz+0x28>
 8000800:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000804:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000808:	d40e      	bmi.n	8000828 <__aeabi_d2uiz+0x34>
 800080a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 800080e:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000812:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000816:	fa23 f002 	lsr.w	r0, r3, r2
 800081a:	4770      	bx	lr
 800081c:	f04f 0000 	mov.w	r0, #0
 8000820:	4770      	bx	lr
 8000822:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000826:	d102      	bne.n	800082e <__aeabi_d2uiz+0x3a>
 8000828:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800082c:	4770      	bx	lr
 800082e:	f04f 0000 	mov.w	r0, #0
 8000832:	4770      	bx	lr

08000834 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000834:	b580      	push	{r7, lr}
 8000836:	b088      	sub	sp, #32
 8000838:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800083a:	f107 0310 	add.w	r3, r7, #16
 800083e:	2200      	movs	r2, #0
 8000840:	601a      	str	r2, [r3, #0]
 8000842:	605a      	str	r2, [r3, #4]
 8000844:	609a      	str	r2, [r3, #8]
 8000846:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000848:	4b34      	ldr	r3, [pc, #208]	@ (800091c <MX_GPIO_Init+0xe8>)
 800084a:	699b      	ldr	r3, [r3, #24]
 800084c:	4a33      	ldr	r2, [pc, #204]	@ (800091c <MX_GPIO_Init+0xe8>)
 800084e:	f043 0320 	orr.w	r3, r3, #32
 8000852:	6193      	str	r3, [r2, #24]
 8000854:	4b31      	ldr	r3, [pc, #196]	@ (800091c <MX_GPIO_Init+0xe8>)
 8000856:	699b      	ldr	r3, [r3, #24]
 8000858:	f003 0320 	and.w	r3, r3, #32
 800085c:	60fb      	str	r3, [r7, #12]
 800085e:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000860:	4b2e      	ldr	r3, [pc, #184]	@ (800091c <MX_GPIO_Init+0xe8>)
 8000862:	699b      	ldr	r3, [r3, #24]
 8000864:	4a2d      	ldr	r2, [pc, #180]	@ (800091c <MX_GPIO_Init+0xe8>)
 8000866:	f043 0310 	orr.w	r3, r3, #16
 800086a:	6193      	str	r3, [r2, #24]
 800086c:	4b2b      	ldr	r3, [pc, #172]	@ (800091c <MX_GPIO_Init+0xe8>)
 800086e:	699b      	ldr	r3, [r3, #24]
 8000870:	f003 0310 	and.w	r3, r3, #16
 8000874:	60bb      	str	r3, [r7, #8]
 8000876:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000878:	4b28      	ldr	r3, [pc, #160]	@ (800091c <MX_GPIO_Init+0xe8>)
 800087a:	699b      	ldr	r3, [r3, #24]
 800087c:	4a27      	ldr	r2, [pc, #156]	@ (800091c <MX_GPIO_Init+0xe8>)
 800087e:	f043 0304 	orr.w	r3, r3, #4
 8000882:	6193      	str	r3, [r2, #24]
 8000884:	4b25      	ldr	r3, [pc, #148]	@ (800091c <MX_GPIO_Init+0xe8>)
 8000886:	699b      	ldr	r3, [r3, #24]
 8000888:	f003 0304 	and.w	r3, r3, #4
 800088c:	607b      	str	r3, [r7, #4]
 800088e:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_SET);
 8000890:	2201      	movs	r2, #1
 8000892:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000896:	4822      	ldr	r0, [pc, #136]	@ (8000920 <MX_GPIO_Init+0xec>)
 8000898:	f007 f8aa 	bl	80079f0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);
 800089c:	2201      	movs	r2, #1
 800089e:	2104      	movs	r1, #4
 80008a0:	4820      	ldr	r0, [pc, #128]	@ (8000924 <MX_GPIO_Init+0xf0>)
 80008a2:	f007 f8a5 	bl	80079f0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = KEY0_Pin;
 80008a6:	2320      	movs	r3, #32
 80008a8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80008aa:	2300      	movs	r3, #0
 80008ac:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80008ae:	2301      	movs	r3, #1
 80008b0:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(KEY0_GPIO_Port, &GPIO_InitStruct);
 80008b2:	f107 0310 	add.w	r3, r7, #16
 80008b6:	4619      	mov	r1, r3
 80008b8:	481b      	ldr	r0, [pc, #108]	@ (8000928 <MX_GPIO_Init+0xf4>)
 80008ba:	f006 ff05 	bl	80076c8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LED0_Pin;
 80008be:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80008c2:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008c4:	2301      	movs	r3, #1
 80008c6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008c8:	2300      	movs	r3, #0
 80008ca:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008cc:	2302      	movs	r3, #2
 80008ce:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED0_GPIO_Port, &GPIO_InitStruct);
 80008d0:	f107 0310 	add.w	r3, r7, #16
 80008d4:	4619      	mov	r1, r3
 80008d6:	4812      	ldr	r0, [pc, #72]	@ (8000920 <MX_GPIO_Init+0xec>)
 80008d8:	f006 fef6 	bl	80076c8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = KEY1_Pin;
 80008dc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80008e0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80008e2:	2300      	movs	r3, #0
 80008e4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80008e6:	2301      	movs	r3, #1
 80008e8:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(KEY1_GPIO_Port, &GPIO_InitStruct);
 80008ea:	f107 0310 	add.w	r3, r7, #16
 80008ee:	4619      	mov	r1, r3
 80008f0:	480b      	ldr	r0, [pc, #44]	@ (8000920 <MX_GPIO_Init+0xec>)
 80008f2:	f006 fee9 	bl	80076c8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LED1_Pin;
 80008f6:	2304      	movs	r3, #4
 80008f8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008fa:	2301      	movs	r3, #1
 80008fc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008fe:	2300      	movs	r3, #0
 8000900:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000902:	2302      	movs	r3, #2
 8000904:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED1_GPIO_Port, &GPIO_InitStruct);
 8000906:	f107 0310 	add.w	r3, r7, #16
 800090a:	4619      	mov	r1, r3
 800090c:	4805      	ldr	r0, [pc, #20]	@ (8000924 <MX_GPIO_Init+0xf0>)
 800090e:	f006 fedb 	bl	80076c8 <HAL_GPIO_Init>

}
 8000912:	bf00      	nop
 8000914:	3720      	adds	r7, #32
 8000916:	46bd      	mov	sp, r7
 8000918:	bd80      	pop	{r7, pc}
 800091a:	bf00      	nop
 800091c:	40021000 	.word	0x40021000
 8000920:	40010800 	.word	0x40010800
 8000924:	40011400 	.word	0x40011400
 8000928:	40011000 	.word	0x40011000

0800092c <lcd_wr_xdata>:
 *              ʡ����ռ�.
 * @param       data : Ҫд�������
 * @retval      ��
 */
void lcd_wr_xdata(uint16_t data)
{
 800092c:	b480      	push	{r7}
 800092e:	b083      	sub	sp, #12
 8000930:	af00      	add	r7, sp, #0
 8000932:	4603      	mov	r3, r0
 8000934:	80fb      	strh	r3, [r7, #6]
    LCD_RS(1);
 8000936:	4b0d      	ldr	r3, [pc, #52]	@ (800096c <lcd_wr_xdata+0x40>)
 8000938:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800093c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800093e:	4b0b      	ldr	r3, [pc, #44]	@ (800096c <lcd_wr_xdata+0x40>)
 8000940:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000944:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(data);
 8000946:	4a0a      	ldr	r2, [pc, #40]	@ (8000970 <lcd_wr_xdata+0x44>)
 8000948:	88fb      	ldrh	r3, [r7, #6]
 800094a:	60d3      	str	r3, [r2, #12]
    LCD_WR(0);
 800094c:	4b07      	ldr	r3, [pc, #28]	@ (800096c <lcd_wr_xdata+0x40>)
 800094e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000952:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8000954:	4b05      	ldr	r3, [pc, #20]	@ (800096c <lcd_wr_xdata+0x40>)
 8000956:	2280      	movs	r2, #128	@ 0x80
 8000958:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800095a:	4b04      	ldr	r3, [pc, #16]	@ (800096c <lcd_wr_xdata+0x40>)
 800095c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000960:	611a      	str	r2, [r3, #16]
}
 8000962:	bf00      	nop
 8000964:	370c      	adds	r7, #12
 8000966:	46bd      	mov	sp, r7
 8000968:	bc80      	pop	{r7}
 800096a:	4770      	bx	lr
 800096c:	40011000 	.word	0x40011000
 8000970:	40010c00 	.word	0x40010c00

08000974 <lcd_write_reg>:
 * @param       regno:�Ĵ������/��ַ
 * @param       data:Ҫд�������
 * @retval      ��
 */
void lcd_write_reg(uint16_t regno, uint16_t data)
{
 8000974:	b480      	push	{r7}
 8000976:	b085      	sub	sp, #20
 8000978:	af00      	add	r7, sp, #0
 800097a:	4603      	mov	r3, r0
 800097c:	460a      	mov	r2, r1
 800097e:	80fb      	strh	r3, [r7, #6]
 8000980:	4613      	mov	r3, r2
 8000982:	80bb      	strh	r3, [r7, #4]
 8000984:	88fb      	ldrh	r3, [r7, #6]
 8000986:	81fb      	strh	r3, [r7, #14]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8000988:	4b19      	ldr	r3, [pc, #100]	@ (80009f0 <lcd_write_reg+0x7c>)
 800098a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800098e:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8000990:	4b17      	ldr	r3, [pc, #92]	@ (80009f0 <lcd_write_reg+0x7c>)
 8000992:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000996:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8000998:	89fb      	ldrh	r3, [r7, #14]
 800099a:	b29a      	uxth	r2, r3
 800099c:	4b15      	ldr	r3, [pc, #84]	@ (80009f4 <lcd_write_reg+0x80>)
 800099e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80009a0:	4b13      	ldr	r3, [pc, #76]	@ (80009f0 <lcd_write_reg+0x7c>)
 80009a2:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80009a6:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80009a8:	4b11      	ldr	r3, [pc, #68]	@ (80009f0 <lcd_write_reg+0x7c>)
 80009aa:	2280      	movs	r2, #128	@ 0x80
 80009ac:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80009ae:	4b10      	ldr	r3, [pc, #64]	@ (80009f0 <lcd_write_reg+0x7c>)
 80009b0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80009b4:	611a      	str	r2, [r3, #16]
}
 80009b6:	bf00      	nop
    lcd_wr_regno(regno);    /* д��Ҫд�ļĴ������ */
    lcd_wr_data(data);      /* д������ */
 80009b8:	4b0d      	ldr	r3, [pc, #52]	@ (80009f0 <lcd_write_reg+0x7c>)
 80009ba:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80009be:	611a      	str	r2, [r3, #16]
 80009c0:	4b0b      	ldr	r3, [pc, #44]	@ (80009f0 <lcd_write_reg+0x7c>)
 80009c2:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80009c6:	611a      	str	r2, [r3, #16]
 80009c8:	4a0a      	ldr	r2, [pc, #40]	@ (80009f4 <lcd_write_reg+0x80>)
 80009ca:	88bb      	ldrh	r3, [r7, #4]
 80009cc:	60d3      	str	r3, [r2, #12]
 80009ce:	4b08      	ldr	r3, [pc, #32]	@ (80009f0 <lcd_write_reg+0x7c>)
 80009d0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80009d4:	611a      	str	r2, [r3, #16]
 80009d6:	4b06      	ldr	r3, [pc, #24]	@ (80009f0 <lcd_write_reg+0x7c>)
 80009d8:	2280      	movs	r2, #128	@ 0x80
 80009da:	611a      	str	r2, [r3, #16]
 80009dc:	4b04      	ldr	r3, [pc, #16]	@ (80009f0 <lcd_write_reg+0x7c>)
 80009de:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80009e2:	611a      	str	r2, [r3, #16]
}
 80009e4:	bf00      	nop
 80009e6:	3714      	adds	r7, #20
 80009e8:	46bd      	mov	sp, r7
 80009ea:	bc80      	pop	{r7}
 80009ec:	4770      	bx	lr
 80009ee:	bf00      	nop
 80009f0:	40011000 	.word	0x40011000
 80009f4:	40010c00 	.word	0x40010c00

080009f8 <lcd_opt_delay>:
 * @brief       LCD��ʱ����,�����ڲ�����mdk -O1ʱ���Ż�ʱ��Ҫ���õĵط�
 * @param       t:��ʱ����ֵ
 * @retval      ��
 */
static void lcd_opt_delay(uint32_t i)
{
 80009f8:	b480      	push	{r7}
 80009fa:	b083      	sub	sp, #12
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	6078      	str	r0, [r7, #4]
    while (i--);
 8000a00:	bf00      	nop
 8000a02:	687b      	ldr	r3, [r7, #4]
 8000a04:	1e5a      	subs	r2, r3, #1
 8000a06:	607a      	str	r2, [r7, #4]
 8000a08:	2b00      	cmp	r3, #0
 8000a0a:	d1fa      	bne.n	8000a02 <lcd_opt_delay+0xa>
}
 8000a0c:	bf00      	nop
 8000a0e:	bf00      	nop
 8000a10:	370c      	adds	r7, #12
 8000a12:	46bd      	mov	sp, r7
 8000a14:	bc80      	pop	{r7}
 8000a16:	4770      	bx	lr

08000a18 <lcd_rd_data>:
 * @brief       LCD������
 * @param       ��
 * @retval      ��ȡ��������
 */
static uint16_t lcd_rd_data(void)
{
 8000a18:	b580      	push	{r7, lr}
 8000a1a:	b086      	sub	sp, #24
 8000a1c:	af00      	add	r7, sp, #0
    volatile uint16_t ram;  /* ��ֹ���Ż� */
    
    GPIO_InitTypeDef gpio_init_struct;
    /* LCD_DATA ����ģʽ����, ��������, ׼���������� */
    gpio_init_struct.Pin = LCD_DATA_GPIO_PIN;
 8000a1e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000a22:	607b      	str	r3, [r7, #4]
    gpio_init_struct.Mode = GPIO_MODE_INPUT;
 8000a24:	2300      	movs	r3, #0
 8000a26:	60bb      	str	r3, [r7, #8]
    gpio_init_struct.Pull = GPIO_PULLUP;
 8000a28:	2301      	movs	r3, #1
 8000a2a:	60fb      	str	r3, [r7, #12]
    gpio_init_struct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000a2c:	2303      	movs	r3, #3
 8000a2e:	613b      	str	r3, [r7, #16]
    HAL_GPIO_Init(LCD_DATA_GPIO_PORT, &gpio_init_struct); 
 8000a30:	1d3b      	adds	r3, r7, #4
 8000a32:	4619      	mov	r1, r3
 8000a34:	4818      	ldr	r0, [pc, #96]	@ (8000a98 <lcd_rd_data+0x80>)
 8000a36:	f006 fe47 	bl	80076c8 <HAL_GPIO_Init>

    LCD_RS(1);              /* RS=1,��ʾ�������� */
 8000a3a:	4b18      	ldr	r3, [pc, #96]	@ (8000a9c <lcd_rd_data+0x84>)
 8000a3c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000a40:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8000a42:	4b16      	ldr	r3, [pc, #88]	@ (8000a9c <lcd_rd_data+0x84>)
 8000a44:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000a48:	611a      	str	r2, [r3, #16]
    LCD_RD(0);
 8000a4a:	4b14      	ldr	r3, [pc, #80]	@ (8000a9c <lcd_rd_data+0x84>)
 8000a4c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8000a50:	611a      	str	r2, [r3, #16]
    lcd_opt_delay(2);
 8000a52:	2002      	movs	r0, #2
 8000a54:	f7ff ffd0 	bl	80009f8 <lcd_opt_delay>
    ram = LCD_DATA_IN;      /* ��ȡ���� */
 8000a58:	4b0f      	ldr	r3, [pc, #60]	@ (8000a98 <lcd_rd_data+0x80>)
 8000a5a:	689b      	ldr	r3, [r3, #8]
 8000a5c:	b29b      	uxth	r3, r3
 8000a5e:	82fb      	strh	r3, [r7, #22]
    LCD_RD(1);
 8000a60:	4b0e      	ldr	r3, [pc, #56]	@ (8000a9c <lcd_rd_data+0x84>)
 8000a62:	2240      	movs	r2, #64	@ 0x40
 8000a64:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8000a66:	4b0d      	ldr	r3, [pc, #52]	@ (8000a9c <lcd_rd_data+0x84>)
 8000a68:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000a6c:	611a      	str	r2, [r3, #16]
    
    /* LCD_DATA ����ģʽ����, �������, �ָ����״̬ */
    gpio_init_struct.Pin = LCD_DATA_GPIO_PIN;
 8000a6e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000a72:	607b      	str	r3, [r7, #4]
    gpio_init_struct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a74:	2301      	movs	r3, #1
 8000a76:	60bb      	str	r3, [r7, #8]
    gpio_init_struct.Pull = GPIO_PULLUP;
 8000a78:	2301      	movs	r3, #1
 8000a7a:	60fb      	str	r3, [r7, #12]
    gpio_init_struct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000a7c:	2303      	movs	r3, #3
 8000a7e:	613b      	str	r3, [r7, #16]
    HAL_GPIO_Init(LCD_DATA_GPIO_PORT, &gpio_init_struct);
 8000a80:	1d3b      	adds	r3, r7, #4
 8000a82:	4619      	mov	r1, r3
 8000a84:	4804      	ldr	r0, [pc, #16]	@ (8000a98 <lcd_rd_data+0x80>)
 8000a86:	f006 fe1f 	bl	80076c8 <HAL_GPIO_Init>

    return ram;
 8000a8a:	8afb      	ldrh	r3, [r7, #22]
 8000a8c:	b29b      	uxth	r3, r3
}
 8000a8e:	4618      	mov	r0, r3
 8000a90:	3718      	adds	r7, #24
 8000a92:	46bd      	mov	sp, r7
 8000a94:	bd80      	pop	{r7, pc}
 8000a96:	bf00      	nop
 8000a98:	40010c00 	.word	0x40010c00
 8000a9c:	40011000 	.word	0x40011000

08000aa0 <lcd_set_cursor>:
 * @brief       ���ù��λ��(��RGB����Ч)
 * @param       x,y: ����
 * @retval      ��
 */
void lcd_set_cursor(uint16_t x, uint16_t y)
{
 8000aa0:	b480      	push	{r7}
 8000aa2:	b089      	sub	sp, #36	@ 0x24
 8000aa4:	af00      	add	r7, sp, #0
 8000aa6:	4603      	mov	r3, r0
 8000aa8:	460a      	mov	r2, r1
 8000aaa:	80fb      	strh	r3, [r7, #6]
 8000aac:	4613      	mov	r3, r2
 8000aae:	80bb      	strh	r3, [r7, #4]
    if (lcddev.id == 0X1963)
 8000ab0:	4b44      	ldr	r3, [pc, #272]	@ (8000bc4 <lcd_set_cursor+0x124>)
 8000ab2:	889b      	ldrh	r3, [r3, #4]
 8000ab4:	f641 1263 	movw	r2, #6499	@ 0x1963
 8000ab8:	4293      	cmp	r3, r2
 8000aba:	f040 8189 	bne.w	8000dd0 <lcd_set_cursor+0x330>
    {
        if (lcddev.dir == 0)    /* ����ģʽ, x������Ҫ�任 */
 8000abe:	4b41      	ldr	r3, [pc, #260]	@ (8000bc4 <lcd_set_cursor+0x124>)
 8000ac0:	799b      	ldrb	r3, [r3, #6]
 8000ac2:	2b00      	cmp	r3, #0
 8000ac4:	f040 8084 	bne.w	8000bd0 <lcd_set_cursor+0x130>
        {
            x = lcddev.width - 1 - x;
 8000ac8:	4b3e      	ldr	r3, [pc, #248]	@ (8000bc4 <lcd_set_cursor+0x124>)
 8000aca:	881a      	ldrh	r2, [r3, #0]
 8000acc:	88fb      	ldrh	r3, [r7, #6]
 8000ace:	1ad3      	subs	r3, r2, r3
 8000ad0:	b29b      	uxth	r3, r3
 8000ad2:	3b01      	subs	r3, #1
 8000ad4:	80fb      	strh	r3, [r7, #6]
            lcd_wr_regno(lcddev.setxcmd);
 8000ad6:	4b3b      	ldr	r3, [pc, #236]	@ (8000bc4 <lcd_set_cursor+0x124>)
 8000ad8:	895b      	ldrh	r3, [r3, #10]
 8000ada:	81fb      	strh	r3, [r7, #14]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8000adc:	4b3a      	ldr	r3, [pc, #232]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000ade:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000ae2:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8000ae4:	4b38      	ldr	r3, [pc, #224]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000ae6:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000aea:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8000aec:	89fb      	ldrh	r3, [r7, #14]
 8000aee:	b29a      	uxth	r2, r3
 8000af0:	4b36      	ldr	r3, [pc, #216]	@ (8000bcc <lcd_set_cursor+0x12c>)
 8000af2:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8000af4:	4b34      	ldr	r3, [pc, #208]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000af6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000afa:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8000afc:	4b32      	ldr	r3, [pc, #200]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000afe:	2280      	movs	r2, #128	@ 0x80
 8000b00:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8000b02:	4b31      	ldr	r3, [pc, #196]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b04:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000b08:	611a      	str	r2, [r3, #16]
}
 8000b0a:	bf00      	nop
            lcd_wr_data(0);
 8000b0c:	4b2e      	ldr	r3, [pc, #184]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b0e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000b12:	611a      	str	r2, [r3, #16]
 8000b14:	4b2c      	ldr	r3, [pc, #176]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b16:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000b1a:	611a      	str	r2, [r3, #16]
 8000b1c:	4b2b      	ldr	r3, [pc, #172]	@ (8000bcc <lcd_set_cursor+0x12c>)
 8000b1e:	2200      	movs	r2, #0
 8000b20:	60da      	str	r2, [r3, #12]
 8000b22:	4b29      	ldr	r3, [pc, #164]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b24:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000b28:	611a      	str	r2, [r3, #16]
 8000b2a:	4b27      	ldr	r3, [pc, #156]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b2c:	2280      	movs	r2, #128	@ 0x80
 8000b2e:	611a      	str	r2, [r3, #16]
 8000b30:	4b25      	ldr	r3, [pc, #148]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b32:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000b36:	611a      	str	r2, [r3, #16]
            lcd_wr_data(0);
 8000b38:	4b23      	ldr	r3, [pc, #140]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b3a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000b3e:	611a      	str	r2, [r3, #16]
 8000b40:	4b21      	ldr	r3, [pc, #132]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b42:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000b46:	611a      	str	r2, [r3, #16]
 8000b48:	4b20      	ldr	r3, [pc, #128]	@ (8000bcc <lcd_set_cursor+0x12c>)
 8000b4a:	2200      	movs	r2, #0
 8000b4c:	60da      	str	r2, [r3, #12]
 8000b4e:	4b1e      	ldr	r3, [pc, #120]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b50:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000b54:	611a      	str	r2, [r3, #16]
 8000b56:	4b1c      	ldr	r3, [pc, #112]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b58:	2280      	movs	r2, #128	@ 0x80
 8000b5a:	611a      	str	r2, [r3, #16]
 8000b5c:	4b1a      	ldr	r3, [pc, #104]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b5e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000b62:	611a      	str	r2, [r3, #16]
            lcd_wr_data(x >> 8);
 8000b64:	4b18      	ldr	r3, [pc, #96]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b66:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000b6a:	611a      	str	r2, [r3, #16]
 8000b6c:	4b16      	ldr	r3, [pc, #88]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b6e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000b72:	611a      	str	r2, [r3, #16]
 8000b74:	88fb      	ldrh	r3, [r7, #6]
 8000b76:	0a1b      	lsrs	r3, r3, #8
 8000b78:	b29a      	uxth	r2, r3
 8000b7a:	4b14      	ldr	r3, [pc, #80]	@ (8000bcc <lcd_set_cursor+0x12c>)
 8000b7c:	60da      	str	r2, [r3, #12]
 8000b7e:	4b12      	ldr	r3, [pc, #72]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b80:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000b84:	611a      	str	r2, [r3, #16]
 8000b86:	4b10      	ldr	r3, [pc, #64]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b88:	2280      	movs	r2, #128	@ 0x80
 8000b8a:	611a      	str	r2, [r3, #16]
 8000b8c:	4b0e      	ldr	r3, [pc, #56]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b8e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000b92:	611a      	str	r2, [r3, #16]
            lcd_wr_data(x & 0XFF);
 8000b94:	4b0c      	ldr	r3, [pc, #48]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b96:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000b9a:	611a      	str	r2, [r3, #16]
 8000b9c:	4b0a      	ldr	r3, [pc, #40]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000b9e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000ba2:	611a      	str	r2, [r3, #16]
 8000ba4:	88fb      	ldrh	r3, [r7, #6]
 8000ba6:	4a09      	ldr	r2, [pc, #36]	@ (8000bcc <lcd_set_cursor+0x12c>)
 8000ba8:	b2db      	uxtb	r3, r3
 8000baa:	60d3      	str	r3, [r2, #12]
 8000bac:	4b06      	ldr	r3, [pc, #24]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000bae:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000bb2:	611a      	str	r2, [r3, #16]
 8000bb4:	4b04      	ldr	r3, [pc, #16]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000bb6:	2280      	movs	r2, #128	@ 0x80
 8000bb8:	611a      	str	r2, [r3, #16]
 8000bba:	4b03      	ldr	r3, [pc, #12]	@ (8000bc8 <lcd_set_cursor+0x128>)
 8000bbc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000bc0:	611a      	str	r2, [r3, #16]
 8000bc2:	e081      	b.n	8000cc8 <lcd_set_cursor+0x228>
 8000bc4:	2000002c 	.word	0x2000002c
 8000bc8:	40011000 	.word	0x40011000
 8000bcc:	40010c00 	.word	0x40010c00
        }
        else                    /* ����ģʽ */
        {
            lcd_wr_regno(lcddev.setxcmd);
 8000bd0:	4b7c      	ldr	r3, [pc, #496]	@ (8000dc4 <lcd_set_cursor+0x324>)
 8000bd2:	895b      	ldrh	r3, [r3, #10]
 8000bd4:	823b      	strh	r3, [r7, #16]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8000bd6:	4b7c      	ldr	r3, [pc, #496]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000bd8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000bdc:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8000bde:	4b7a      	ldr	r3, [pc, #488]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000be0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000be4:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8000be6:	8a3b      	ldrh	r3, [r7, #16]
 8000be8:	b29a      	uxth	r2, r3
 8000bea:	4b78      	ldr	r3, [pc, #480]	@ (8000dcc <lcd_set_cursor+0x32c>)
 8000bec:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8000bee:	4b76      	ldr	r3, [pc, #472]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000bf0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000bf4:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8000bf6:	4b74      	ldr	r3, [pc, #464]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000bf8:	2280      	movs	r2, #128	@ 0x80
 8000bfa:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8000bfc:	4b72      	ldr	r3, [pc, #456]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000bfe:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000c02:	611a      	str	r2, [r3, #16]
}
 8000c04:	bf00      	nop
            lcd_wr_data(x >> 8);
 8000c06:	4b70      	ldr	r3, [pc, #448]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c08:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000c0c:	611a      	str	r2, [r3, #16]
 8000c0e:	4b6e      	ldr	r3, [pc, #440]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c10:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000c14:	611a      	str	r2, [r3, #16]
 8000c16:	88fb      	ldrh	r3, [r7, #6]
 8000c18:	0a1b      	lsrs	r3, r3, #8
 8000c1a:	b29a      	uxth	r2, r3
 8000c1c:	4b6b      	ldr	r3, [pc, #428]	@ (8000dcc <lcd_set_cursor+0x32c>)
 8000c1e:	60da      	str	r2, [r3, #12]
 8000c20:	4b69      	ldr	r3, [pc, #420]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c22:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000c26:	611a      	str	r2, [r3, #16]
 8000c28:	4b67      	ldr	r3, [pc, #412]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c2a:	2280      	movs	r2, #128	@ 0x80
 8000c2c:	611a      	str	r2, [r3, #16]
 8000c2e:	4b66      	ldr	r3, [pc, #408]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c30:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000c34:	611a      	str	r2, [r3, #16]
            lcd_wr_data(x & 0XFF);
 8000c36:	4b64      	ldr	r3, [pc, #400]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c38:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000c3c:	611a      	str	r2, [r3, #16]
 8000c3e:	4b62      	ldr	r3, [pc, #392]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c40:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000c44:	611a      	str	r2, [r3, #16]
 8000c46:	88fb      	ldrh	r3, [r7, #6]
 8000c48:	4a60      	ldr	r2, [pc, #384]	@ (8000dcc <lcd_set_cursor+0x32c>)
 8000c4a:	b2db      	uxtb	r3, r3
 8000c4c:	60d3      	str	r3, [r2, #12]
 8000c4e:	4b5e      	ldr	r3, [pc, #376]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c50:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000c54:	611a      	str	r2, [r3, #16]
 8000c56:	4b5c      	ldr	r3, [pc, #368]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c58:	2280      	movs	r2, #128	@ 0x80
 8000c5a:	611a      	str	r2, [r3, #16]
 8000c5c:	4b5a      	ldr	r3, [pc, #360]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c5e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000c62:	611a      	str	r2, [r3, #16]
            lcd_wr_data((lcddev.width - 1) >> 8);
 8000c64:	4b58      	ldr	r3, [pc, #352]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c66:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000c6a:	611a      	str	r2, [r3, #16]
 8000c6c:	4b56      	ldr	r3, [pc, #344]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c6e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000c72:	611a      	str	r2, [r3, #16]
 8000c74:	4b53      	ldr	r3, [pc, #332]	@ (8000dc4 <lcd_set_cursor+0x324>)
 8000c76:	881b      	ldrh	r3, [r3, #0]
 8000c78:	3b01      	subs	r3, #1
 8000c7a:	121a      	asrs	r2, r3, #8
 8000c7c:	4b53      	ldr	r3, [pc, #332]	@ (8000dcc <lcd_set_cursor+0x32c>)
 8000c7e:	60da      	str	r2, [r3, #12]
 8000c80:	4b51      	ldr	r3, [pc, #324]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c82:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000c86:	611a      	str	r2, [r3, #16]
 8000c88:	4b4f      	ldr	r3, [pc, #316]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c8a:	2280      	movs	r2, #128	@ 0x80
 8000c8c:	611a      	str	r2, [r3, #16]
 8000c8e:	4b4e      	ldr	r3, [pc, #312]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c90:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000c94:	611a      	str	r2, [r3, #16]
            lcd_wr_data((lcddev.width - 1) & 0XFF);
 8000c96:	4b4c      	ldr	r3, [pc, #304]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000c98:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000c9c:	611a      	str	r2, [r3, #16]
 8000c9e:	4b4a      	ldr	r3, [pc, #296]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000ca0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000ca4:	611a      	str	r2, [r3, #16]
 8000ca6:	4b47      	ldr	r3, [pc, #284]	@ (8000dc4 <lcd_set_cursor+0x324>)
 8000ca8:	881b      	ldrh	r3, [r3, #0]
 8000caa:	3b01      	subs	r3, #1
 8000cac:	4a47      	ldr	r2, [pc, #284]	@ (8000dcc <lcd_set_cursor+0x32c>)
 8000cae:	b2db      	uxtb	r3, r3
 8000cb0:	60d3      	str	r3, [r2, #12]
 8000cb2:	4b45      	ldr	r3, [pc, #276]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000cb4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000cb8:	611a      	str	r2, [r3, #16]
 8000cba:	4b43      	ldr	r3, [pc, #268]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000cbc:	2280      	movs	r2, #128	@ 0x80
 8000cbe:	611a      	str	r2, [r3, #16]
 8000cc0:	4b41      	ldr	r3, [pc, #260]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000cc2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000cc6:	611a      	str	r2, [r3, #16]
        }

        lcd_wr_regno(lcddev.setycmd);
 8000cc8:	4b3e      	ldr	r3, [pc, #248]	@ (8000dc4 <lcd_set_cursor+0x324>)
 8000cca:	899b      	ldrh	r3, [r3, #12]
 8000ccc:	827b      	strh	r3, [r7, #18]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8000cce:	4b3e      	ldr	r3, [pc, #248]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000cd0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000cd4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8000cd6:	4b3c      	ldr	r3, [pc, #240]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000cd8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000cdc:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8000cde:	8a7b      	ldrh	r3, [r7, #18]
 8000ce0:	b29a      	uxth	r2, r3
 8000ce2:	4b3a      	ldr	r3, [pc, #232]	@ (8000dcc <lcd_set_cursor+0x32c>)
 8000ce4:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8000ce6:	4b38      	ldr	r3, [pc, #224]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000ce8:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000cec:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8000cee:	4b36      	ldr	r3, [pc, #216]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000cf0:	2280      	movs	r2, #128	@ 0x80
 8000cf2:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8000cf4:	4b34      	ldr	r3, [pc, #208]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000cf6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000cfa:	611a      	str	r2, [r3, #16]
}
 8000cfc:	bf00      	nop
        lcd_wr_data(y >> 8);
 8000cfe:	4b32      	ldr	r3, [pc, #200]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d00:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000d04:	611a      	str	r2, [r3, #16]
 8000d06:	4b30      	ldr	r3, [pc, #192]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d08:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000d0c:	611a      	str	r2, [r3, #16]
 8000d0e:	88bb      	ldrh	r3, [r7, #4]
 8000d10:	0a1b      	lsrs	r3, r3, #8
 8000d12:	b29a      	uxth	r2, r3
 8000d14:	4b2d      	ldr	r3, [pc, #180]	@ (8000dcc <lcd_set_cursor+0x32c>)
 8000d16:	60da      	str	r2, [r3, #12]
 8000d18:	4b2b      	ldr	r3, [pc, #172]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d1a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000d1e:	611a      	str	r2, [r3, #16]
 8000d20:	4b29      	ldr	r3, [pc, #164]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d22:	2280      	movs	r2, #128	@ 0x80
 8000d24:	611a      	str	r2, [r3, #16]
 8000d26:	4b28      	ldr	r3, [pc, #160]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d28:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000d2c:	611a      	str	r2, [r3, #16]
        lcd_wr_data(y & 0XFF);
 8000d2e:	4b26      	ldr	r3, [pc, #152]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d30:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000d34:	611a      	str	r2, [r3, #16]
 8000d36:	4b24      	ldr	r3, [pc, #144]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d38:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000d3c:	611a      	str	r2, [r3, #16]
 8000d3e:	88bb      	ldrh	r3, [r7, #4]
 8000d40:	4a22      	ldr	r2, [pc, #136]	@ (8000dcc <lcd_set_cursor+0x32c>)
 8000d42:	b2db      	uxtb	r3, r3
 8000d44:	60d3      	str	r3, [r2, #12]
 8000d46:	4b20      	ldr	r3, [pc, #128]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d48:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000d4c:	611a      	str	r2, [r3, #16]
 8000d4e:	4b1e      	ldr	r3, [pc, #120]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d50:	2280      	movs	r2, #128	@ 0x80
 8000d52:	611a      	str	r2, [r3, #16]
 8000d54:	4b1c      	ldr	r3, [pc, #112]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d56:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000d5a:	611a      	str	r2, [r3, #16]
        lcd_wr_data((lcddev.height - 1) >> 8);
 8000d5c:	4b1a      	ldr	r3, [pc, #104]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d5e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000d62:	611a      	str	r2, [r3, #16]
 8000d64:	4b18      	ldr	r3, [pc, #96]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d66:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000d6a:	611a      	str	r2, [r3, #16]
 8000d6c:	4b15      	ldr	r3, [pc, #84]	@ (8000dc4 <lcd_set_cursor+0x324>)
 8000d6e:	885b      	ldrh	r3, [r3, #2]
 8000d70:	3b01      	subs	r3, #1
 8000d72:	121a      	asrs	r2, r3, #8
 8000d74:	4b15      	ldr	r3, [pc, #84]	@ (8000dcc <lcd_set_cursor+0x32c>)
 8000d76:	60da      	str	r2, [r3, #12]
 8000d78:	4b13      	ldr	r3, [pc, #76]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d7a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000d7e:	611a      	str	r2, [r3, #16]
 8000d80:	4b11      	ldr	r3, [pc, #68]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d82:	2280      	movs	r2, #128	@ 0x80
 8000d84:	611a      	str	r2, [r3, #16]
 8000d86:	4b10      	ldr	r3, [pc, #64]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d88:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000d8c:	611a      	str	r2, [r3, #16]
        lcd_wr_data((lcddev.height - 1) & 0XFF);
 8000d8e:	4b0e      	ldr	r3, [pc, #56]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d90:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000d94:	611a      	str	r2, [r3, #16]
 8000d96:	4b0c      	ldr	r3, [pc, #48]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000d98:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000d9c:	611a      	str	r2, [r3, #16]
 8000d9e:	4b09      	ldr	r3, [pc, #36]	@ (8000dc4 <lcd_set_cursor+0x324>)
 8000da0:	885b      	ldrh	r3, [r3, #2]
 8000da2:	3b01      	subs	r3, #1
 8000da4:	4a09      	ldr	r2, [pc, #36]	@ (8000dcc <lcd_set_cursor+0x32c>)
 8000da6:	b2db      	uxtb	r3, r3
 8000da8:	60d3      	str	r3, [r2, #12]
 8000daa:	4b07      	ldr	r3, [pc, #28]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000dac:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000db0:	611a      	str	r2, [r3, #16]
 8000db2:	4b05      	ldr	r3, [pc, #20]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000db4:	2280      	movs	r2, #128	@ 0x80
 8000db6:	611a      	str	r2, [r3, #16]
 8000db8:	4b03      	ldr	r3, [pc, #12]	@ (8000dc8 <lcd_set_cursor+0x328>)
 8000dba:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000dbe:	611a      	str	r2, [r3, #16]
        lcd_wr_data(x & 0XFF);
        lcd_wr_regno(lcddev.setycmd);
        lcd_wr_data(y >> 8);
        lcd_wr_data(y & 0XFF);
    }
}
 8000dc0:	e176      	b.n	80010b0 <lcd_set_cursor+0x610>
 8000dc2:	bf00      	nop
 8000dc4:	2000002c 	.word	0x2000002c
 8000dc8:	40011000 	.word	0x40011000
 8000dcc:	40010c00 	.word	0x40010c00
    else if (lcddev.id == 0X5510)
 8000dd0:	4b6a      	ldr	r3, [pc, #424]	@ (8000f7c <lcd_set_cursor+0x4dc>)
 8000dd2:	889b      	ldrh	r3, [r3, #4]
 8000dd4:	f245 5210 	movw	r2, #21776	@ 0x5510
 8000dd8:	4293      	cmp	r3, r2
 8000dda:	f040 80d5 	bne.w	8000f88 <lcd_set_cursor+0x4e8>
        lcd_wr_regno(lcddev.setxcmd);
 8000dde:	4b67      	ldr	r3, [pc, #412]	@ (8000f7c <lcd_set_cursor+0x4dc>)
 8000de0:	895b      	ldrh	r3, [r3, #10]
 8000de2:	837b      	strh	r3, [r7, #26]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8000de4:	4b66      	ldr	r3, [pc, #408]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000de6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000dea:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8000dec:	4b64      	ldr	r3, [pc, #400]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000dee:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000df2:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8000df4:	8b7b      	ldrh	r3, [r7, #26]
 8000df6:	b29a      	uxth	r2, r3
 8000df8:	4b62      	ldr	r3, [pc, #392]	@ (8000f84 <lcd_set_cursor+0x4e4>)
 8000dfa:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8000dfc:	4b60      	ldr	r3, [pc, #384]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000dfe:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000e02:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8000e04:	4b5e      	ldr	r3, [pc, #376]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e06:	2280      	movs	r2, #128	@ 0x80
 8000e08:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8000e0a:	4b5d      	ldr	r3, [pc, #372]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e0c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000e10:	611a      	str	r2, [r3, #16]
}
 8000e12:	bf00      	nop
        lcd_wr_data(x >> 8);
 8000e14:	4b5a      	ldr	r3, [pc, #360]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e16:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000e1a:	611a      	str	r2, [r3, #16]
 8000e1c:	4b58      	ldr	r3, [pc, #352]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e1e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000e22:	611a      	str	r2, [r3, #16]
 8000e24:	88fb      	ldrh	r3, [r7, #6]
 8000e26:	0a1b      	lsrs	r3, r3, #8
 8000e28:	b29a      	uxth	r2, r3
 8000e2a:	4b56      	ldr	r3, [pc, #344]	@ (8000f84 <lcd_set_cursor+0x4e4>)
 8000e2c:	60da      	str	r2, [r3, #12]
 8000e2e:	4b54      	ldr	r3, [pc, #336]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e30:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000e34:	611a      	str	r2, [r3, #16]
 8000e36:	4b52      	ldr	r3, [pc, #328]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e38:	2280      	movs	r2, #128	@ 0x80
 8000e3a:	611a      	str	r2, [r3, #16]
 8000e3c:	4b50      	ldr	r3, [pc, #320]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e3e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000e42:	611a      	str	r2, [r3, #16]
        lcd_wr_regno(lcddev.setxcmd + 1);
 8000e44:	4b4d      	ldr	r3, [pc, #308]	@ (8000f7c <lcd_set_cursor+0x4dc>)
 8000e46:	895b      	ldrh	r3, [r3, #10]
 8000e48:	3301      	adds	r3, #1
 8000e4a:	b29b      	uxth	r3, r3
 8000e4c:	833b      	strh	r3, [r7, #24]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8000e4e:	4b4c      	ldr	r3, [pc, #304]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e50:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000e54:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8000e56:	4b4a      	ldr	r3, [pc, #296]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e58:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000e5c:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8000e5e:	8b3b      	ldrh	r3, [r7, #24]
 8000e60:	b29a      	uxth	r2, r3
 8000e62:	4b48      	ldr	r3, [pc, #288]	@ (8000f84 <lcd_set_cursor+0x4e4>)
 8000e64:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8000e66:	4b46      	ldr	r3, [pc, #280]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e68:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000e6c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8000e6e:	4b44      	ldr	r3, [pc, #272]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e70:	2280      	movs	r2, #128	@ 0x80
 8000e72:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8000e74:	4b42      	ldr	r3, [pc, #264]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e76:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000e7a:	611a      	str	r2, [r3, #16]
}
 8000e7c:	bf00      	nop
        lcd_wr_data(x & 0XFF);
 8000e7e:	4b40      	ldr	r3, [pc, #256]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e80:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000e84:	611a      	str	r2, [r3, #16]
 8000e86:	4b3e      	ldr	r3, [pc, #248]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e88:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000e8c:	611a      	str	r2, [r3, #16]
 8000e8e:	88fb      	ldrh	r3, [r7, #6]
 8000e90:	4a3c      	ldr	r2, [pc, #240]	@ (8000f84 <lcd_set_cursor+0x4e4>)
 8000e92:	b2db      	uxtb	r3, r3
 8000e94:	60d3      	str	r3, [r2, #12]
 8000e96:	4b3a      	ldr	r3, [pc, #232]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000e98:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000e9c:	611a      	str	r2, [r3, #16]
 8000e9e:	4b38      	ldr	r3, [pc, #224]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000ea0:	2280      	movs	r2, #128	@ 0x80
 8000ea2:	611a      	str	r2, [r3, #16]
 8000ea4:	4b36      	ldr	r3, [pc, #216]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000ea6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000eaa:	611a      	str	r2, [r3, #16]
        lcd_wr_regno(lcddev.setycmd);
 8000eac:	4b33      	ldr	r3, [pc, #204]	@ (8000f7c <lcd_set_cursor+0x4dc>)
 8000eae:	899b      	ldrh	r3, [r3, #12]
 8000eb0:	82fb      	strh	r3, [r7, #22]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8000eb2:	4b33      	ldr	r3, [pc, #204]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000eb4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000eb8:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8000eba:	4b31      	ldr	r3, [pc, #196]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000ebc:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000ec0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8000ec2:	8afb      	ldrh	r3, [r7, #22]
 8000ec4:	b29a      	uxth	r2, r3
 8000ec6:	4b2f      	ldr	r3, [pc, #188]	@ (8000f84 <lcd_set_cursor+0x4e4>)
 8000ec8:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8000eca:	4b2d      	ldr	r3, [pc, #180]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000ecc:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000ed0:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8000ed2:	4b2b      	ldr	r3, [pc, #172]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000ed4:	2280      	movs	r2, #128	@ 0x80
 8000ed6:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8000ed8:	4b29      	ldr	r3, [pc, #164]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000eda:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000ede:	611a      	str	r2, [r3, #16]
}
 8000ee0:	bf00      	nop
        lcd_wr_data(y >> 8);
 8000ee2:	4b27      	ldr	r3, [pc, #156]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000ee4:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000ee8:	611a      	str	r2, [r3, #16]
 8000eea:	4b25      	ldr	r3, [pc, #148]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000eec:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000ef0:	611a      	str	r2, [r3, #16]
 8000ef2:	88bb      	ldrh	r3, [r7, #4]
 8000ef4:	0a1b      	lsrs	r3, r3, #8
 8000ef6:	b29a      	uxth	r2, r3
 8000ef8:	4b22      	ldr	r3, [pc, #136]	@ (8000f84 <lcd_set_cursor+0x4e4>)
 8000efa:	60da      	str	r2, [r3, #12]
 8000efc:	4b20      	ldr	r3, [pc, #128]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000efe:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000f02:	611a      	str	r2, [r3, #16]
 8000f04:	4b1e      	ldr	r3, [pc, #120]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000f06:	2280      	movs	r2, #128	@ 0x80
 8000f08:	611a      	str	r2, [r3, #16]
 8000f0a:	4b1d      	ldr	r3, [pc, #116]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000f0c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000f10:	611a      	str	r2, [r3, #16]
        lcd_wr_regno(lcddev.setycmd + 1);
 8000f12:	4b1a      	ldr	r3, [pc, #104]	@ (8000f7c <lcd_set_cursor+0x4dc>)
 8000f14:	899b      	ldrh	r3, [r3, #12]
 8000f16:	3301      	adds	r3, #1
 8000f18:	b29b      	uxth	r3, r3
 8000f1a:	82bb      	strh	r3, [r7, #20]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8000f1c:	4b18      	ldr	r3, [pc, #96]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000f1e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000f22:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8000f24:	4b16      	ldr	r3, [pc, #88]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000f26:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000f2a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8000f2c:	8abb      	ldrh	r3, [r7, #20]
 8000f2e:	b29a      	uxth	r2, r3
 8000f30:	4b14      	ldr	r3, [pc, #80]	@ (8000f84 <lcd_set_cursor+0x4e4>)
 8000f32:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8000f34:	4b12      	ldr	r3, [pc, #72]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000f36:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000f3a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8000f3c:	4b10      	ldr	r3, [pc, #64]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000f3e:	2280      	movs	r2, #128	@ 0x80
 8000f40:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8000f42:	4b0f      	ldr	r3, [pc, #60]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000f44:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000f48:	611a      	str	r2, [r3, #16]
}
 8000f4a:	bf00      	nop
        lcd_wr_data(y & 0XFF);
 8000f4c:	4b0c      	ldr	r3, [pc, #48]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000f4e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000f52:	611a      	str	r2, [r3, #16]
 8000f54:	4b0a      	ldr	r3, [pc, #40]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000f56:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000f5a:	611a      	str	r2, [r3, #16]
 8000f5c:	88bb      	ldrh	r3, [r7, #4]
 8000f5e:	4a09      	ldr	r2, [pc, #36]	@ (8000f84 <lcd_set_cursor+0x4e4>)
 8000f60:	b2db      	uxtb	r3, r3
 8000f62:	60d3      	str	r3, [r2, #12]
 8000f64:	4b06      	ldr	r3, [pc, #24]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000f66:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000f6a:	611a      	str	r2, [r3, #16]
 8000f6c:	4b04      	ldr	r3, [pc, #16]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000f6e:	2280      	movs	r2, #128	@ 0x80
 8000f70:	611a      	str	r2, [r3, #16]
 8000f72:	4b03      	ldr	r3, [pc, #12]	@ (8000f80 <lcd_set_cursor+0x4e0>)
 8000f74:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000f78:	611a      	str	r2, [r3, #16]
}
 8000f7a:	e099      	b.n	80010b0 <lcd_set_cursor+0x610>
 8000f7c:	2000002c 	.word	0x2000002c
 8000f80:	40011000 	.word	0x40011000
 8000f84:	40010c00 	.word	0x40010c00
        lcd_wr_regno(lcddev.setxcmd);
 8000f88:	4b4c      	ldr	r3, [pc, #304]	@ (80010bc <lcd_set_cursor+0x61c>)
 8000f8a:	895b      	ldrh	r3, [r3, #10]
 8000f8c:	83fb      	strh	r3, [r7, #30]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8000f8e:	4b4c      	ldr	r3, [pc, #304]	@ (80010c0 <lcd_set_cursor+0x620>)
 8000f90:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000f94:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8000f96:	4b4a      	ldr	r3, [pc, #296]	@ (80010c0 <lcd_set_cursor+0x620>)
 8000f98:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000f9c:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8000f9e:	8bfb      	ldrh	r3, [r7, #30]
 8000fa0:	b29a      	uxth	r2, r3
 8000fa2:	4b48      	ldr	r3, [pc, #288]	@ (80010c4 <lcd_set_cursor+0x624>)
 8000fa4:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8000fa6:	4b46      	ldr	r3, [pc, #280]	@ (80010c0 <lcd_set_cursor+0x620>)
 8000fa8:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000fac:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8000fae:	4b44      	ldr	r3, [pc, #272]	@ (80010c0 <lcd_set_cursor+0x620>)
 8000fb0:	2280      	movs	r2, #128	@ 0x80
 8000fb2:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8000fb4:	4b42      	ldr	r3, [pc, #264]	@ (80010c0 <lcd_set_cursor+0x620>)
 8000fb6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000fba:	611a      	str	r2, [r3, #16]
}
 8000fbc:	bf00      	nop
        lcd_wr_data(x >> 8);
 8000fbe:	4b40      	ldr	r3, [pc, #256]	@ (80010c0 <lcd_set_cursor+0x620>)
 8000fc0:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000fc4:	611a      	str	r2, [r3, #16]
 8000fc6:	4b3e      	ldr	r3, [pc, #248]	@ (80010c0 <lcd_set_cursor+0x620>)
 8000fc8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000fcc:	611a      	str	r2, [r3, #16]
 8000fce:	88fb      	ldrh	r3, [r7, #6]
 8000fd0:	0a1b      	lsrs	r3, r3, #8
 8000fd2:	b29a      	uxth	r2, r3
 8000fd4:	4b3b      	ldr	r3, [pc, #236]	@ (80010c4 <lcd_set_cursor+0x624>)
 8000fd6:	60da      	str	r2, [r3, #12]
 8000fd8:	4b39      	ldr	r3, [pc, #228]	@ (80010c0 <lcd_set_cursor+0x620>)
 8000fda:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000fde:	611a      	str	r2, [r3, #16]
 8000fe0:	4b37      	ldr	r3, [pc, #220]	@ (80010c0 <lcd_set_cursor+0x620>)
 8000fe2:	2280      	movs	r2, #128	@ 0x80
 8000fe4:	611a      	str	r2, [r3, #16]
 8000fe6:	4b36      	ldr	r3, [pc, #216]	@ (80010c0 <lcd_set_cursor+0x620>)
 8000fe8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000fec:	611a      	str	r2, [r3, #16]
        lcd_wr_data(x & 0XFF);
 8000fee:	4b34      	ldr	r3, [pc, #208]	@ (80010c0 <lcd_set_cursor+0x620>)
 8000ff0:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000ff4:	611a      	str	r2, [r3, #16]
 8000ff6:	4b32      	ldr	r3, [pc, #200]	@ (80010c0 <lcd_set_cursor+0x620>)
 8000ff8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8000ffc:	611a      	str	r2, [r3, #16]
 8000ffe:	88fb      	ldrh	r3, [r7, #6]
 8001000:	4a30      	ldr	r2, [pc, #192]	@ (80010c4 <lcd_set_cursor+0x624>)
 8001002:	b2db      	uxtb	r3, r3
 8001004:	60d3      	str	r3, [r2, #12]
 8001006:	4b2e      	ldr	r3, [pc, #184]	@ (80010c0 <lcd_set_cursor+0x620>)
 8001008:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800100c:	611a      	str	r2, [r3, #16]
 800100e:	4b2c      	ldr	r3, [pc, #176]	@ (80010c0 <lcd_set_cursor+0x620>)
 8001010:	2280      	movs	r2, #128	@ 0x80
 8001012:	611a      	str	r2, [r3, #16]
 8001014:	4b2a      	ldr	r3, [pc, #168]	@ (80010c0 <lcd_set_cursor+0x620>)
 8001016:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800101a:	611a      	str	r2, [r3, #16]
        lcd_wr_regno(lcddev.setycmd);
 800101c:	4b27      	ldr	r3, [pc, #156]	@ (80010bc <lcd_set_cursor+0x61c>)
 800101e:	899b      	ldrh	r3, [r3, #12]
 8001020:	83bb      	strh	r3, [r7, #28]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8001022:	4b27      	ldr	r3, [pc, #156]	@ (80010c0 <lcd_set_cursor+0x620>)
 8001024:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001028:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800102a:	4b25      	ldr	r3, [pc, #148]	@ (80010c0 <lcd_set_cursor+0x620>)
 800102c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001030:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8001032:	8bbb      	ldrh	r3, [r7, #28]
 8001034:	b29a      	uxth	r2, r3
 8001036:	4b23      	ldr	r3, [pc, #140]	@ (80010c4 <lcd_set_cursor+0x624>)
 8001038:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800103a:	4b21      	ldr	r3, [pc, #132]	@ (80010c0 <lcd_set_cursor+0x620>)
 800103c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001040:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8001042:	4b1f      	ldr	r3, [pc, #124]	@ (80010c0 <lcd_set_cursor+0x620>)
 8001044:	2280      	movs	r2, #128	@ 0x80
 8001046:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8001048:	4b1d      	ldr	r3, [pc, #116]	@ (80010c0 <lcd_set_cursor+0x620>)
 800104a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800104e:	611a      	str	r2, [r3, #16]
}
 8001050:	bf00      	nop
        lcd_wr_data(y >> 8);
 8001052:	4b1b      	ldr	r3, [pc, #108]	@ (80010c0 <lcd_set_cursor+0x620>)
 8001054:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001058:	611a      	str	r2, [r3, #16]
 800105a:	4b19      	ldr	r3, [pc, #100]	@ (80010c0 <lcd_set_cursor+0x620>)
 800105c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001060:	611a      	str	r2, [r3, #16]
 8001062:	88bb      	ldrh	r3, [r7, #4]
 8001064:	0a1b      	lsrs	r3, r3, #8
 8001066:	b29a      	uxth	r2, r3
 8001068:	4b16      	ldr	r3, [pc, #88]	@ (80010c4 <lcd_set_cursor+0x624>)
 800106a:	60da      	str	r2, [r3, #12]
 800106c:	4b14      	ldr	r3, [pc, #80]	@ (80010c0 <lcd_set_cursor+0x620>)
 800106e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001072:	611a      	str	r2, [r3, #16]
 8001074:	4b12      	ldr	r3, [pc, #72]	@ (80010c0 <lcd_set_cursor+0x620>)
 8001076:	2280      	movs	r2, #128	@ 0x80
 8001078:	611a      	str	r2, [r3, #16]
 800107a:	4b11      	ldr	r3, [pc, #68]	@ (80010c0 <lcd_set_cursor+0x620>)
 800107c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001080:	611a      	str	r2, [r3, #16]
        lcd_wr_data(y & 0XFF);
 8001082:	4b0f      	ldr	r3, [pc, #60]	@ (80010c0 <lcd_set_cursor+0x620>)
 8001084:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001088:	611a      	str	r2, [r3, #16]
 800108a:	4b0d      	ldr	r3, [pc, #52]	@ (80010c0 <lcd_set_cursor+0x620>)
 800108c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001090:	611a      	str	r2, [r3, #16]
 8001092:	88bb      	ldrh	r3, [r7, #4]
 8001094:	4a0b      	ldr	r2, [pc, #44]	@ (80010c4 <lcd_set_cursor+0x624>)
 8001096:	b2db      	uxtb	r3, r3
 8001098:	60d3      	str	r3, [r2, #12]
 800109a:	4b09      	ldr	r3, [pc, #36]	@ (80010c0 <lcd_set_cursor+0x620>)
 800109c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80010a0:	611a      	str	r2, [r3, #16]
 80010a2:	4b07      	ldr	r3, [pc, #28]	@ (80010c0 <lcd_set_cursor+0x620>)
 80010a4:	2280      	movs	r2, #128	@ 0x80
 80010a6:	611a      	str	r2, [r3, #16]
 80010a8:	4b05      	ldr	r3, [pc, #20]	@ (80010c0 <lcd_set_cursor+0x620>)
 80010aa:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80010ae:	611a      	str	r2, [r3, #16]
}
 80010b0:	bf00      	nop
 80010b2:	3724      	adds	r7, #36	@ 0x24
 80010b4:	46bd      	mov	sp, r7
 80010b6:	bc80      	pop	{r7}
 80010b8:	4770      	bx	lr
 80010ba:	bf00      	nop
 80010bc:	2000002c 	.word	0x2000002c
 80010c0:	40011000 	.word	0x40011000
 80010c4:	40010c00 	.word	0x40010c00

080010c8 <lcd_scan_dir>:
 *
 * @param       dir:0~7,����8������(���嶨���lcd.h)
 * @retval      ��
 */
void lcd_scan_dir(uint8_t dir)
{
 80010c8:	b580      	push	{r7, lr}
 80010ca:	b08a      	sub	sp, #40	@ 0x28
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	4603      	mov	r3, r0
 80010d0:	71fb      	strb	r3, [r7, #7]
    uint16_t regval = 0;
 80010d2:	2300      	movs	r3, #0
 80010d4:	84fb      	strh	r3, [r7, #38]	@ 0x26
    uint16_t dirreg = 0;
 80010d6:	2300      	movs	r3, #0
 80010d8:	84bb      	strh	r3, [r7, #36]	@ 0x24
    uint16_t temp;

    /* ����ʱ����1963���ı�ɨ�跽��, ����IC�ı�ɨ�跽������ʱ1963�ı䷽��, ����IC���ı�ɨ�跽�� */
    if ((lcddev.dir == 1 && lcddev.id != 0X1963) || (lcddev.dir == 0 && lcddev.id == 0X1963))
 80010da:	4b5f      	ldr	r3, [pc, #380]	@ (8001258 <lcd_scan_dir+0x190>)
 80010dc:	799b      	ldrb	r3, [r3, #6]
 80010de:	2b01      	cmp	r3, #1
 80010e0:	d105      	bne.n	80010ee <lcd_scan_dir+0x26>
 80010e2:	4b5d      	ldr	r3, [pc, #372]	@ (8001258 <lcd_scan_dir+0x190>)
 80010e4:	889b      	ldrh	r3, [r3, #4]
 80010e6:	f641 1263 	movw	r2, #6499	@ 0x1963
 80010ea:	4293      	cmp	r3, r2
 80010ec:	d109      	bne.n	8001102 <lcd_scan_dir+0x3a>
 80010ee:	4b5a      	ldr	r3, [pc, #360]	@ (8001258 <lcd_scan_dir+0x190>)
 80010f0:	799b      	ldrb	r3, [r3, #6]
 80010f2:	2b00      	cmp	r3, #0
 80010f4:	d134      	bne.n	8001160 <lcd_scan_dir+0x98>
 80010f6:	4b58      	ldr	r3, [pc, #352]	@ (8001258 <lcd_scan_dir+0x190>)
 80010f8:	889b      	ldrh	r3, [r3, #4]
 80010fa:	f641 1263 	movw	r2, #6499	@ 0x1963
 80010fe:	4293      	cmp	r3, r2
 8001100:	d12e      	bne.n	8001160 <lcd_scan_dir+0x98>
    {
        switch (dir)   /* ����ת�� */
 8001102:	79fb      	ldrb	r3, [r7, #7]
 8001104:	2b07      	cmp	r3, #7
 8001106:	d82b      	bhi.n	8001160 <lcd_scan_dir+0x98>
 8001108:	a201      	add	r2, pc, #4	@ (adr r2, 8001110 <lcd_scan_dir+0x48>)
 800110a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800110e:	bf00      	nop
 8001110:	08001131 	.word	0x08001131
 8001114:	08001137 	.word	0x08001137
 8001118:	0800113d 	.word	0x0800113d
 800111c:	08001143 	.word	0x08001143
 8001120:	08001149 	.word	0x08001149
 8001124:	0800114f 	.word	0x0800114f
 8001128:	08001155 	.word	0x08001155
 800112c:	0800115b 	.word	0x0800115b
        {
            case 0:
                dir = 6;
 8001130:	2306      	movs	r3, #6
 8001132:	71fb      	strb	r3, [r7, #7]
                break;
 8001134:	e014      	b.n	8001160 <lcd_scan_dir+0x98>

            case 1:
                dir = 7;
 8001136:	2307      	movs	r3, #7
 8001138:	71fb      	strb	r3, [r7, #7]
                break;
 800113a:	e011      	b.n	8001160 <lcd_scan_dir+0x98>

            case 2:
                dir = 4;
 800113c:	2304      	movs	r3, #4
 800113e:	71fb      	strb	r3, [r7, #7]
                break;
 8001140:	e00e      	b.n	8001160 <lcd_scan_dir+0x98>

            case 3:
                dir = 5;
 8001142:	2305      	movs	r3, #5
 8001144:	71fb      	strb	r3, [r7, #7]
                break;
 8001146:	e00b      	b.n	8001160 <lcd_scan_dir+0x98>

            case 4:
                dir = 1;
 8001148:	2301      	movs	r3, #1
 800114a:	71fb      	strb	r3, [r7, #7]
                break;
 800114c:	e008      	b.n	8001160 <lcd_scan_dir+0x98>

            case 5:
                dir = 0;
 800114e:	2300      	movs	r3, #0
 8001150:	71fb      	strb	r3, [r7, #7]
                break;
 8001152:	e005      	b.n	8001160 <lcd_scan_dir+0x98>

            case 6:
                dir = 3;
 8001154:	2303      	movs	r3, #3
 8001156:	71fb      	strb	r3, [r7, #7]
                break;
 8001158:	e002      	b.n	8001160 <lcd_scan_dir+0x98>

            case 7:
                dir = 2;
 800115a:	2302      	movs	r3, #2
 800115c:	71fb      	strb	r3, [r7, #7]
                break;
 800115e:	bf00      	nop
        }
    }

    /* ����ɨ�跽ʽ ���� 0X36/0X3600 �Ĵ��� bit 5,6,7 λ��ֵ */
    switch (dir)
 8001160:	79fb      	ldrb	r3, [r7, #7]
 8001162:	2b07      	cmp	r3, #7
 8001164:	d835      	bhi.n	80011d2 <lcd_scan_dir+0x10a>
 8001166:	a201      	add	r2, pc, #4	@ (adr r2, 800116c <lcd_scan_dir+0xa4>)
 8001168:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800116c:	080011d3 	.word	0x080011d3
 8001170:	0800118d 	.word	0x0800118d
 8001174:	08001197 	.word	0x08001197
 8001178:	080011a1 	.word	0x080011a1
 800117c:	080011ab 	.word	0x080011ab
 8001180:	080011b5 	.word	0x080011b5
 8001184:	080011bf 	.word	0x080011bf
 8001188:	080011c9 	.word	0x080011c9
        case L2R_U2D:/* ������,���ϵ��� */
            regval |= (0 << 7) | (0 << 6) | (0 << 5);
            break;

        case L2R_D2U:/* ������,���µ��� */
            regval |= (1 << 7) | (0 << 6) | (0 << 5);
 800118c:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800118e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001192:	84fb      	strh	r3, [r7, #38]	@ 0x26
            break;
 8001194:	e01d      	b.n	80011d2 <lcd_scan_dir+0x10a>

        case R2L_U2D:/* ���ҵ���,���ϵ��� */
            regval |= (0 << 7) | (1 << 6) | (0 << 5);
 8001196:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001198:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800119c:	84fb      	strh	r3, [r7, #38]	@ 0x26
            break;
 800119e:	e018      	b.n	80011d2 <lcd_scan_dir+0x10a>

        case R2L_D2U:/* ���ҵ���,���µ��� */
            regval |= (1 << 7) | (1 << 6) | (0 << 5);
 80011a0:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80011a2:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 80011a6:	84fb      	strh	r3, [r7, #38]	@ 0x26
            break;
 80011a8:	e013      	b.n	80011d2 <lcd_scan_dir+0x10a>

        case U2D_L2R:/* ���ϵ���,������ */
            regval |= (0 << 7) | (0 << 6) | (1 << 5);
 80011aa:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80011ac:	f043 0320 	orr.w	r3, r3, #32
 80011b0:	84fb      	strh	r3, [r7, #38]	@ 0x26
            break;
 80011b2:	e00e      	b.n	80011d2 <lcd_scan_dir+0x10a>

        case U2D_R2L:/* ���ϵ���,���ҵ��� */
            regval |= (0 << 7) | (1 << 6) | (1 << 5);
 80011b4:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80011b6:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 80011ba:	84fb      	strh	r3, [r7, #38]	@ 0x26
            break;
 80011bc:	e009      	b.n	80011d2 <lcd_scan_dir+0x10a>

        case D2U_L2R:/* ���µ���,������ */
            regval |= (1 << 7) | (0 << 6) | (1 << 5);
 80011be:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80011c0:	f043 03a0 	orr.w	r3, r3, #160	@ 0xa0
 80011c4:	84fb      	strh	r3, [r7, #38]	@ 0x26
            break;
 80011c6:	e004      	b.n	80011d2 <lcd_scan_dir+0x10a>

        case D2U_R2L:/* ���µ���,���ҵ��� */
            regval |= (1 << 7) | (1 << 6) | (1 << 5);
 80011c8:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80011ca:	f043 03e0 	orr.w	r3, r3, #224	@ 0xe0
 80011ce:	84fb      	strh	r3, [r7, #38]	@ 0x26
            break;
 80011d0:	bf00      	nop
    }

    dirreg = 0X36;  /* �Ծ��󲿷�����IC, ��0X36�Ĵ������� */
 80011d2:	2336      	movs	r3, #54	@ 0x36
 80011d4:	84bb      	strh	r3, [r7, #36]	@ 0x24

    if (lcddev.id == 0X5510)
 80011d6:	4b20      	ldr	r3, [pc, #128]	@ (8001258 <lcd_scan_dir+0x190>)
 80011d8:	889b      	ldrh	r3, [r3, #4]
 80011da:	f245 5210 	movw	r2, #21776	@ 0x5510
 80011de:	4293      	cmp	r3, r2
 80011e0:	d102      	bne.n	80011e8 <lcd_scan_dir+0x120>
    {
        dirreg = 0X3600;    /* ����5510, ����������ic�ļĴ����в��� */
 80011e2:	f44f 5358 	mov.w	r3, #13824	@ 0x3600
 80011e6:	84bb      	strh	r3, [r7, #36]	@ 0x24
    }

    /* 9341 & 7789 & 7796 Ҫ����BGRλ */
    if (lcddev.id == 0X9341 || lcddev.id == 0X7789 || lcddev.id == 0x7796)
 80011e8:	4b1b      	ldr	r3, [pc, #108]	@ (8001258 <lcd_scan_dir+0x190>)
 80011ea:	889b      	ldrh	r3, [r3, #4]
 80011ec:	f249 3241 	movw	r2, #37697	@ 0x9341
 80011f0:	4293      	cmp	r3, r2
 80011f2:	d00b      	beq.n	800120c <lcd_scan_dir+0x144>
 80011f4:	4b18      	ldr	r3, [pc, #96]	@ (8001258 <lcd_scan_dir+0x190>)
 80011f6:	889b      	ldrh	r3, [r3, #4]
 80011f8:	f247 7289 	movw	r2, #30601	@ 0x7789
 80011fc:	4293      	cmp	r3, r2
 80011fe:	d005      	beq.n	800120c <lcd_scan_dir+0x144>
 8001200:	4b15      	ldr	r3, [pc, #84]	@ (8001258 <lcd_scan_dir+0x190>)
 8001202:	889b      	ldrh	r3, [r3, #4]
 8001204:	f247 7296 	movw	r2, #30614	@ 0x7796
 8001208:	4293      	cmp	r3, r2
 800120a:	d103      	bne.n	8001214 <lcd_scan_dir+0x14c>
    {
        regval |= 0X08;
 800120c:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800120e:	f043 0308 	orr.w	r3, r3, #8
 8001212:	84fb      	strh	r3, [r7, #38]	@ 0x26
    }

    lcd_write_reg(dirreg, regval);
 8001214:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8001216:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8001218:	4611      	mov	r1, r2
 800121a:	4618      	mov	r0, r3
 800121c:	f7ff fbaa 	bl	8000974 <lcd_write_reg>

    if (lcddev.id != 0X1963)   /* 1963�������괦�� */
 8001220:	4b0d      	ldr	r3, [pc, #52]	@ (8001258 <lcd_scan_dir+0x190>)
 8001222:	889b      	ldrh	r3, [r3, #4]
 8001224:	f641 1263 	movw	r2, #6499	@ 0x1963
 8001228:	4293      	cmp	r3, r2
 800122a:	d027      	beq.n	800127c <lcd_scan_dir+0x1b4>
    {
        if (regval & 0X20)
 800122c:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800122e:	f003 0320 	and.w	r3, r3, #32
 8001232:	2b00      	cmp	r3, #0
 8001234:	d012      	beq.n	800125c <lcd_scan_dir+0x194>
        {
            if (lcddev.width < lcddev.height)   /* ����X,Y */
 8001236:	4b08      	ldr	r3, [pc, #32]	@ (8001258 <lcd_scan_dir+0x190>)
 8001238:	881a      	ldrh	r2, [r3, #0]
 800123a:	4b07      	ldr	r3, [pc, #28]	@ (8001258 <lcd_scan_dir+0x190>)
 800123c:	885b      	ldrh	r3, [r3, #2]
 800123e:	429a      	cmp	r2, r3
 8001240:	d21c      	bcs.n	800127c <lcd_scan_dir+0x1b4>
            {
                temp = lcddev.width;
 8001242:	4b05      	ldr	r3, [pc, #20]	@ (8001258 <lcd_scan_dir+0x190>)
 8001244:	881b      	ldrh	r3, [r3, #0]
 8001246:	847b      	strh	r3, [r7, #34]	@ 0x22
                lcddev.width = lcddev.height;
 8001248:	4b03      	ldr	r3, [pc, #12]	@ (8001258 <lcd_scan_dir+0x190>)
 800124a:	885a      	ldrh	r2, [r3, #2]
 800124c:	4b02      	ldr	r3, [pc, #8]	@ (8001258 <lcd_scan_dir+0x190>)
 800124e:	801a      	strh	r2, [r3, #0]
                lcddev.height = temp;
 8001250:	4a01      	ldr	r2, [pc, #4]	@ (8001258 <lcd_scan_dir+0x190>)
 8001252:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8001254:	8053      	strh	r3, [r2, #2]
 8001256:	e011      	b.n	800127c <lcd_scan_dir+0x1b4>
 8001258:	2000002c 	.word	0x2000002c
            }
        }
        else
        {
            if (lcddev.width > lcddev.height)   /* ����X,Y */
 800125c:	4b9c      	ldr	r3, [pc, #624]	@ (80014d0 <lcd_scan_dir+0x408>)
 800125e:	881a      	ldrh	r2, [r3, #0]
 8001260:	4b9b      	ldr	r3, [pc, #620]	@ (80014d0 <lcd_scan_dir+0x408>)
 8001262:	885b      	ldrh	r3, [r3, #2]
 8001264:	429a      	cmp	r2, r3
 8001266:	d909      	bls.n	800127c <lcd_scan_dir+0x1b4>
            {
                temp = lcddev.width;
 8001268:	4b99      	ldr	r3, [pc, #612]	@ (80014d0 <lcd_scan_dir+0x408>)
 800126a:	881b      	ldrh	r3, [r3, #0]
 800126c:	847b      	strh	r3, [r7, #34]	@ 0x22
                lcddev.width = lcddev.height;
 800126e:	4b98      	ldr	r3, [pc, #608]	@ (80014d0 <lcd_scan_dir+0x408>)
 8001270:	885a      	ldrh	r2, [r3, #2]
 8001272:	4b97      	ldr	r3, [pc, #604]	@ (80014d0 <lcd_scan_dir+0x408>)
 8001274:	801a      	strh	r2, [r3, #0]
                lcddev.height = temp;
 8001276:	4a96      	ldr	r2, [pc, #600]	@ (80014d0 <lcd_scan_dir+0x408>)
 8001278:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800127a:	8053      	strh	r3, [r2, #2]
            }
        }
    }

    /* ������ʾ����(����)��С */
    if (lcddev.id == 0X5510)
 800127c:	4b94      	ldr	r3, [pc, #592]	@ (80014d0 <lcd_scan_dir+0x408>)
 800127e:	889b      	ldrh	r3, [r3, #4]
 8001280:	f245 5210 	movw	r2, #21776	@ 0x5510
 8001284:	4293      	cmp	r3, r2
 8001286:	f040 81af 	bne.w	80015e8 <lcd_scan_dir+0x520>
    {
        lcd_wr_regno(lcddev.setxcmd);
 800128a:	4b91      	ldr	r3, [pc, #580]	@ (80014d0 <lcd_scan_dir+0x408>)
 800128c:	895b      	ldrh	r3, [r3, #10]
 800128e:	83bb      	strh	r3, [r7, #28]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8001290:	4b90      	ldr	r3, [pc, #576]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001292:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001296:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8001298:	4b8e      	ldr	r3, [pc, #568]	@ (80014d4 <lcd_scan_dir+0x40c>)
 800129a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800129e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80012a0:	8bbb      	ldrh	r3, [r7, #28]
 80012a2:	b29a      	uxth	r2, r3
 80012a4:	4b8c      	ldr	r3, [pc, #560]	@ (80014d8 <lcd_scan_dir+0x410>)
 80012a6:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80012a8:	4b8a      	ldr	r3, [pc, #552]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80012aa:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80012ae:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80012b0:	4b88      	ldr	r3, [pc, #544]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80012b2:	2280      	movs	r2, #128	@ 0x80
 80012b4:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80012b6:	4b87      	ldr	r3, [pc, #540]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80012b8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80012bc:	611a      	str	r2, [r3, #16]
}
 80012be:	bf00      	nop
        lcd_wr_data(0);
 80012c0:	4b84      	ldr	r3, [pc, #528]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80012c2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80012c6:	611a      	str	r2, [r3, #16]
 80012c8:	4b82      	ldr	r3, [pc, #520]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80012ca:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80012ce:	611a      	str	r2, [r3, #16]
 80012d0:	4b81      	ldr	r3, [pc, #516]	@ (80014d8 <lcd_scan_dir+0x410>)
 80012d2:	2200      	movs	r2, #0
 80012d4:	60da      	str	r2, [r3, #12]
 80012d6:	4b7f      	ldr	r3, [pc, #508]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80012d8:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80012dc:	611a      	str	r2, [r3, #16]
 80012de:	4b7d      	ldr	r3, [pc, #500]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80012e0:	2280      	movs	r2, #128	@ 0x80
 80012e2:	611a      	str	r2, [r3, #16]
 80012e4:	4b7b      	ldr	r3, [pc, #492]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80012e6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80012ea:	611a      	str	r2, [r3, #16]
        lcd_wr_regno(lcddev.setxcmd + 1);
 80012ec:	4b78      	ldr	r3, [pc, #480]	@ (80014d0 <lcd_scan_dir+0x408>)
 80012ee:	895b      	ldrh	r3, [r3, #10]
 80012f0:	3301      	adds	r3, #1
 80012f2:	b29b      	uxth	r3, r3
 80012f4:	837b      	strh	r3, [r7, #26]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80012f6:	4b77      	ldr	r3, [pc, #476]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80012f8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80012fc:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80012fe:	4b75      	ldr	r3, [pc, #468]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001300:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001304:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8001306:	8b7b      	ldrh	r3, [r7, #26]
 8001308:	b29a      	uxth	r2, r3
 800130a:	4b73      	ldr	r3, [pc, #460]	@ (80014d8 <lcd_scan_dir+0x410>)
 800130c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800130e:	4b71      	ldr	r3, [pc, #452]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001310:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001314:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8001316:	4b6f      	ldr	r3, [pc, #444]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001318:	2280      	movs	r2, #128	@ 0x80
 800131a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800131c:	4b6d      	ldr	r3, [pc, #436]	@ (80014d4 <lcd_scan_dir+0x40c>)
 800131e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001322:	611a      	str	r2, [r3, #16]
}
 8001324:	bf00      	nop
        lcd_wr_data(0);
 8001326:	4b6b      	ldr	r3, [pc, #428]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001328:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800132c:	611a      	str	r2, [r3, #16]
 800132e:	4b69      	ldr	r3, [pc, #420]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001330:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001334:	611a      	str	r2, [r3, #16]
 8001336:	4b68      	ldr	r3, [pc, #416]	@ (80014d8 <lcd_scan_dir+0x410>)
 8001338:	2200      	movs	r2, #0
 800133a:	60da      	str	r2, [r3, #12]
 800133c:	4b65      	ldr	r3, [pc, #404]	@ (80014d4 <lcd_scan_dir+0x40c>)
 800133e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001342:	611a      	str	r2, [r3, #16]
 8001344:	4b63      	ldr	r3, [pc, #396]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001346:	2280      	movs	r2, #128	@ 0x80
 8001348:	611a      	str	r2, [r3, #16]
 800134a:	4b62      	ldr	r3, [pc, #392]	@ (80014d4 <lcd_scan_dir+0x40c>)
 800134c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001350:	611a      	str	r2, [r3, #16]
        lcd_wr_regno(lcddev.setxcmd + 2);
 8001352:	4b5f      	ldr	r3, [pc, #380]	@ (80014d0 <lcd_scan_dir+0x408>)
 8001354:	895b      	ldrh	r3, [r3, #10]
 8001356:	3302      	adds	r3, #2
 8001358:	b29b      	uxth	r3, r3
 800135a:	833b      	strh	r3, [r7, #24]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800135c:	4b5d      	ldr	r3, [pc, #372]	@ (80014d4 <lcd_scan_dir+0x40c>)
 800135e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001362:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8001364:	4b5b      	ldr	r3, [pc, #364]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001366:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800136a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800136c:	8b3b      	ldrh	r3, [r7, #24]
 800136e:	b29a      	uxth	r2, r3
 8001370:	4b59      	ldr	r3, [pc, #356]	@ (80014d8 <lcd_scan_dir+0x410>)
 8001372:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8001374:	4b57      	ldr	r3, [pc, #348]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001376:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800137a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800137c:	4b55      	ldr	r3, [pc, #340]	@ (80014d4 <lcd_scan_dir+0x40c>)
 800137e:	2280      	movs	r2, #128	@ 0x80
 8001380:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8001382:	4b54      	ldr	r3, [pc, #336]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001384:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001388:	611a      	str	r2, [r3, #16]
}
 800138a:	bf00      	nop
        lcd_wr_data((lcddev.width - 1) >> 8);
 800138c:	4b51      	ldr	r3, [pc, #324]	@ (80014d4 <lcd_scan_dir+0x40c>)
 800138e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001392:	611a      	str	r2, [r3, #16]
 8001394:	4b4f      	ldr	r3, [pc, #316]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001396:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800139a:	611a      	str	r2, [r3, #16]
 800139c:	4b4c      	ldr	r3, [pc, #304]	@ (80014d0 <lcd_scan_dir+0x408>)
 800139e:	881b      	ldrh	r3, [r3, #0]
 80013a0:	3b01      	subs	r3, #1
 80013a2:	121a      	asrs	r2, r3, #8
 80013a4:	4b4c      	ldr	r3, [pc, #304]	@ (80014d8 <lcd_scan_dir+0x410>)
 80013a6:	60da      	str	r2, [r3, #12]
 80013a8:	4b4a      	ldr	r3, [pc, #296]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80013aa:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80013ae:	611a      	str	r2, [r3, #16]
 80013b0:	4b48      	ldr	r3, [pc, #288]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80013b2:	2280      	movs	r2, #128	@ 0x80
 80013b4:	611a      	str	r2, [r3, #16]
 80013b6:	4b47      	ldr	r3, [pc, #284]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80013b8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80013bc:	611a      	str	r2, [r3, #16]
        lcd_wr_regno(lcddev.setxcmd + 3);
 80013be:	4b44      	ldr	r3, [pc, #272]	@ (80014d0 <lcd_scan_dir+0x408>)
 80013c0:	895b      	ldrh	r3, [r3, #10]
 80013c2:	3303      	adds	r3, #3
 80013c4:	b29b      	uxth	r3, r3
 80013c6:	82fb      	strh	r3, [r7, #22]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80013c8:	4b42      	ldr	r3, [pc, #264]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80013ca:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80013ce:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80013d0:	4b40      	ldr	r3, [pc, #256]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80013d2:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80013d6:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80013d8:	8afb      	ldrh	r3, [r7, #22]
 80013da:	b29a      	uxth	r2, r3
 80013dc:	4b3e      	ldr	r3, [pc, #248]	@ (80014d8 <lcd_scan_dir+0x410>)
 80013de:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80013e0:	4b3c      	ldr	r3, [pc, #240]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80013e2:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80013e6:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80013e8:	4b3a      	ldr	r3, [pc, #232]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80013ea:	2280      	movs	r2, #128	@ 0x80
 80013ec:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80013ee:	4b39      	ldr	r3, [pc, #228]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80013f0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80013f4:	611a      	str	r2, [r3, #16]
}
 80013f6:	bf00      	nop
        lcd_wr_data((lcddev.width - 1) & 0XFF);
 80013f8:	4b36      	ldr	r3, [pc, #216]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80013fa:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80013fe:	611a      	str	r2, [r3, #16]
 8001400:	4b34      	ldr	r3, [pc, #208]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001402:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001406:	611a      	str	r2, [r3, #16]
 8001408:	4b31      	ldr	r3, [pc, #196]	@ (80014d0 <lcd_scan_dir+0x408>)
 800140a:	881b      	ldrh	r3, [r3, #0]
 800140c:	3b01      	subs	r3, #1
 800140e:	4a32      	ldr	r2, [pc, #200]	@ (80014d8 <lcd_scan_dir+0x410>)
 8001410:	b2db      	uxtb	r3, r3
 8001412:	60d3      	str	r3, [r2, #12]
 8001414:	4b2f      	ldr	r3, [pc, #188]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001416:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800141a:	611a      	str	r2, [r3, #16]
 800141c:	4b2d      	ldr	r3, [pc, #180]	@ (80014d4 <lcd_scan_dir+0x40c>)
 800141e:	2280      	movs	r2, #128	@ 0x80
 8001420:	611a      	str	r2, [r3, #16]
 8001422:	4b2c      	ldr	r3, [pc, #176]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001424:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001428:	611a      	str	r2, [r3, #16]
        lcd_wr_regno(lcddev.setycmd);
 800142a:	4b29      	ldr	r3, [pc, #164]	@ (80014d0 <lcd_scan_dir+0x408>)
 800142c:	899b      	ldrh	r3, [r3, #12]
 800142e:	82bb      	strh	r3, [r7, #20]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8001430:	4b28      	ldr	r3, [pc, #160]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001432:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001436:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8001438:	4b26      	ldr	r3, [pc, #152]	@ (80014d4 <lcd_scan_dir+0x40c>)
 800143a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800143e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8001440:	8abb      	ldrh	r3, [r7, #20]
 8001442:	b29a      	uxth	r2, r3
 8001444:	4b24      	ldr	r3, [pc, #144]	@ (80014d8 <lcd_scan_dir+0x410>)
 8001446:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8001448:	4b22      	ldr	r3, [pc, #136]	@ (80014d4 <lcd_scan_dir+0x40c>)
 800144a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800144e:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8001450:	4b20      	ldr	r3, [pc, #128]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001452:	2280      	movs	r2, #128	@ 0x80
 8001454:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8001456:	4b1f      	ldr	r3, [pc, #124]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001458:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800145c:	611a      	str	r2, [r3, #16]
}
 800145e:	bf00      	nop
        lcd_wr_data(0);
 8001460:	4b1c      	ldr	r3, [pc, #112]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001462:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001466:	611a      	str	r2, [r3, #16]
 8001468:	4b1a      	ldr	r3, [pc, #104]	@ (80014d4 <lcd_scan_dir+0x40c>)
 800146a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800146e:	611a      	str	r2, [r3, #16]
 8001470:	4b19      	ldr	r3, [pc, #100]	@ (80014d8 <lcd_scan_dir+0x410>)
 8001472:	2200      	movs	r2, #0
 8001474:	60da      	str	r2, [r3, #12]
 8001476:	4b17      	ldr	r3, [pc, #92]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001478:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800147c:	611a      	str	r2, [r3, #16]
 800147e:	4b15      	ldr	r3, [pc, #84]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001480:	2280      	movs	r2, #128	@ 0x80
 8001482:	611a      	str	r2, [r3, #16]
 8001484:	4b13      	ldr	r3, [pc, #76]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001486:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800148a:	611a      	str	r2, [r3, #16]
        lcd_wr_regno(lcddev.setycmd + 1);
 800148c:	4b10      	ldr	r3, [pc, #64]	@ (80014d0 <lcd_scan_dir+0x408>)
 800148e:	899b      	ldrh	r3, [r3, #12]
 8001490:	3301      	adds	r3, #1
 8001492:	b29b      	uxth	r3, r3
 8001494:	827b      	strh	r3, [r7, #18]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8001496:	4b0f      	ldr	r3, [pc, #60]	@ (80014d4 <lcd_scan_dir+0x40c>)
 8001498:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800149c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800149e:	4b0d      	ldr	r3, [pc, #52]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80014a0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80014a4:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80014a6:	8a7b      	ldrh	r3, [r7, #18]
 80014a8:	b29a      	uxth	r2, r3
 80014aa:	4b0b      	ldr	r3, [pc, #44]	@ (80014d8 <lcd_scan_dir+0x410>)
 80014ac:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80014ae:	4b09      	ldr	r3, [pc, #36]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80014b0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80014b4:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80014b6:	4b07      	ldr	r3, [pc, #28]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80014b8:	2280      	movs	r2, #128	@ 0x80
 80014ba:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80014bc:	4b05      	ldr	r3, [pc, #20]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80014be:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80014c2:	611a      	str	r2, [r3, #16]
}
 80014c4:	bf00      	nop
        lcd_wr_data(0);
 80014c6:	4b03      	ldr	r3, [pc, #12]	@ (80014d4 <lcd_scan_dir+0x40c>)
 80014c8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80014cc:	611a      	str	r2, [r3, #16]
 80014ce:	e005      	b.n	80014dc <lcd_scan_dir+0x414>
 80014d0:	2000002c 	.word	0x2000002c
 80014d4:	40011000 	.word	0x40011000
 80014d8:	40010c00 	.word	0x40010c00
 80014dc:	4b3f      	ldr	r3, [pc, #252]	@ (80015dc <lcd_scan_dir+0x514>)
 80014de:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80014e2:	611a      	str	r2, [r3, #16]
 80014e4:	4b3e      	ldr	r3, [pc, #248]	@ (80015e0 <lcd_scan_dir+0x518>)
 80014e6:	2200      	movs	r2, #0
 80014e8:	60da      	str	r2, [r3, #12]
 80014ea:	4b3c      	ldr	r3, [pc, #240]	@ (80015dc <lcd_scan_dir+0x514>)
 80014ec:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80014f0:	611a      	str	r2, [r3, #16]
 80014f2:	4b3a      	ldr	r3, [pc, #232]	@ (80015dc <lcd_scan_dir+0x514>)
 80014f4:	2280      	movs	r2, #128	@ 0x80
 80014f6:	611a      	str	r2, [r3, #16]
 80014f8:	4b38      	ldr	r3, [pc, #224]	@ (80015dc <lcd_scan_dir+0x514>)
 80014fa:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80014fe:	611a      	str	r2, [r3, #16]
        lcd_wr_regno(lcddev.setycmd + 2);
 8001500:	4b38      	ldr	r3, [pc, #224]	@ (80015e4 <lcd_scan_dir+0x51c>)
 8001502:	899b      	ldrh	r3, [r3, #12]
 8001504:	3302      	adds	r3, #2
 8001506:	b29b      	uxth	r3, r3
 8001508:	823b      	strh	r3, [r7, #16]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800150a:	4b34      	ldr	r3, [pc, #208]	@ (80015dc <lcd_scan_dir+0x514>)
 800150c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001510:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8001512:	4b32      	ldr	r3, [pc, #200]	@ (80015dc <lcd_scan_dir+0x514>)
 8001514:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001518:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800151a:	8a3b      	ldrh	r3, [r7, #16]
 800151c:	b29a      	uxth	r2, r3
 800151e:	4b30      	ldr	r3, [pc, #192]	@ (80015e0 <lcd_scan_dir+0x518>)
 8001520:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8001522:	4b2e      	ldr	r3, [pc, #184]	@ (80015dc <lcd_scan_dir+0x514>)
 8001524:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001528:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800152a:	4b2c      	ldr	r3, [pc, #176]	@ (80015dc <lcd_scan_dir+0x514>)
 800152c:	2280      	movs	r2, #128	@ 0x80
 800152e:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8001530:	4b2a      	ldr	r3, [pc, #168]	@ (80015dc <lcd_scan_dir+0x514>)
 8001532:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001536:	611a      	str	r2, [r3, #16]
}
 8001538:	bf00      	nop
        lcd_wr_data((lcddev.height - 1) >> 8);
 800153a:	4b28      	ldr	r3, [pc, #160]	@ (80015dc <lcd_scan_dir+0x514>)
 800153c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001540:	611a      	str	r2, [r3, #16]
 8001542:	4b26      	ldr	r3, [pc, #152]	@ (80015dc <lcd_scan_dir+0x514>)
 8001544:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001548:	611a      	str	r2, [r3, #16]
 800154a:	4b26      	ldr	r3, [pc, #152]	@ (80015e4 <lcd_scan_dir+0x51c>)
 800154c:	885b      	ldrh	r3, [r3, #2]
 800154e:	3b01      	subs	r3, #1
 8001550:	121a      	asrs	r2, r3, #8
 8001552:	4b23      	ldr	r3, [pc, #140]	@ (80015e0 <lcd_scan_dir+0x518>)
 8001554:	60da      	str	r2, [r3, #12]
 8001556:	4b21      	ldr	r3, [pc, #132]	@ (80015dc <lcd_scan_dir+0x514>)
 8001558:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800155c:	611a      	str	r2, [r3, #16]
 800155e:	4b1f      	ldr	r3, [pc, #124]	@ (80015dc <lcd_scan_dir+0x514>)
 8001560:	2280      	movs	r2, #128	@ 0x80
 8001562:	611a      	str	r2, [r3, #16]
 8001564:	4b1d      	ldr	r3, [pc, #116]	@ (80015dc <lcd_scan_dir+0x514>)
 8001566:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800156a:	611a      	str	r2, [r3, #16]
        lcd_wr_regno(lcddev.setycmd + 3);
 800156c:	4b1d      	ldr	r3, [pc, #116]	@ (80015e4 <lcd_scan_dir+0x51c>)
 800156e:	899b      	ldrh	r3, [r3, #12]
 8001570:	3303      	adds	r3, #3
 8001572:	b29b      	uxth	r3, r3
 8001574:	81fb      	strh	r3, [r7, #14]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8001576:	4b19      	ldr	r3, [pc, #100]	@ (80015dc <lcd_scan_dir+0x514>)
 8001578:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800157c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800157e:	4b17      	ldr	r3, [pc, #92]	@ (80015dc <lcd_scan_dir+0x514>)
 8001580:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001584:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8001586:	89fb      	ldrh	r3, [r7, #14]
 8001588:	b29a      	uxth	r2, r3
 800158a:	4b15      	ldr	r3, [pc, #84]	@ (80015e0 <lcd_scan_dir+0x518>)
 800158c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800158e:	4b13      	ldr	r3, [pc, #76]	@ (80015dc <lcd_scan_dir+0x514>)
 8001590:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001594:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8001596:	4b11      	ldr	r3, [pc, #68]	@ (80015dc <lcd_scan_dir+0x514>)
 8001598:	2280      	movs	r2, #128	@ 0x80
 800159a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800159c:	4b0f      	ldr	r3, [pc, #60]	@ (80015dc <lcd_scan_dir+0x514>)
 800159e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80015a2:	611a      	str	r2, [r3, #16]
}
 80015a4:	bf00      	nop
        lcd_wr_data((lcddev.height - 1) & 0XFF);
 80015a6:	4b0d      	ldr	r3, [pc, #52]	@ (80015dc <lcd_scan_dir+0x514>)
 80015a8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80015ac:	611a      	str	r2, [r3, #16]
 80015ae:	4b0b      	ldr	r3, [pc, #44]	@ (80015dc <lcd_scan_dir+0x514>)
 80015b0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80015b4:	611a      	str	r2, [r3, #16]
 80015b6:	4b0b      	ldr	r3, [pc, #44]	@ (80015e4 <lcd_scan_dir+0x51c>)
 80015b8:	885b      	ldrh	r3, [r3, #2]
 80015ba:	3b01      	subs	r3, #1
 80015bc:	4a08      	ldr	r2, [pc, #32]	@ (80015e0 <lcd_scan_dir+0x518>)
 80015be:	b2db      	uxtb	r3, r3
 80015c0:	60d3      	str	r3, [r2, #12]
 80015c2:	4b06      	ldr	r3, [pc, #24]	@ (80015dc <lcd_scan_dir+0x514>)
 80015c4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80015c8:	611a      	str	r2, [r3, #16]
 80015ca:	4b04      	ldr	r3, [pc, #16]	@ (80015dc <lcd_scan_dir+0x514>)
 80015cc:	2280      	movs	r2, #128	@ 0x80
 80015ce:	611a      	str	r2, [r3, #16]
 80015d0:	4b02      	ldr	r3, [pc, #8]	@ (80015dc <lcd_scan_dir+0x514>)
 80015d2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80015d6:	611a      	str	r2, [r3, #16]
        lcd_wr_data(0);
        lcd_wr_data(0);
        lcd_wr_data((lcddev.height - 1) >> 8);
        lcd_wr_data((lcddev.height - 1) & 0XFF);
    }
}
 80015d8:	e0f8      	b.n	80017cc <lcd_scan_dir+0x704>
 80015da:	bf00      	nop
 80015dc:	40011000 	.word	0x40011000
 80015e0:	40010c00 	.word	0x40010c00
 80015e4:	2000002c 	.word	0x2000002c
        lcd_wr_regno(lcddev.setxcmd);
 80015e8:	4b7a      	ldr	r3, [pc, #488]	@ (80017d4 <lcd_scan_dir+0x70c>)
 80015ea:	895b      	ldrh	r3, [r3, #10]
 80015ec:	843b      	strh	r3, [r7, #32]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80015ee:	4b7a      	ldr	r3, [pc, #488]	@ (80017d8 <lcd_scan_dir+0x710>)
 80015f0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80015f4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80015f6:	4b78      	ldr	r3, [pc, #480]	@ (80017d8 <lcd_scan_dir+0x710>)
 80015f8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80015fc:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80015fe:	8c3b      	ldrh	r3, [r7, #32]
 8001600:	b29a      	uxth	r2, r3
 8001602:	4b76      	ldr	r3, [pc, #472]	@ (80017dc <lcd_scan_dir+0x714>)
 8001604:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8001606:	4b74      	ldr	r3, [pc, #464]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001608:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800160c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800160e:	4b72      	ldr	r3, [pc, #456]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001610:	2280      	movs	r2, #128	@ 0x80
 8001612:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8001614:	4b70      	ldr	r3, [pc, #448]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001616:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800161a:	611a      	str	r2, [r3, #16]
}
 800161c:	bf00      	nop
        lcd_wr_data(0);
 800161e:	4b6e      	ldr	r3, [pc, #440]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001620:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001624:	611a      	str	r2, [r3, #16]
 8001626:	4b6c      	ldr	r3, [pc, #432]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001628:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800162c:	611a      	str	r2, [r3, #16]
 800162e:	4b6b      	ldr	r3, [pc, #428]	@ (80017dc <lcd_scan_dir+0x714>)
 8001630:	2200      	movs	r2, #0
 8001632:	60da      	str	r2, [r3, #12]
 8001634:	4b68      	ldr	r3, [pc, #416]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001636:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800163a:	611a      	str	r2, [r3, #16]
 800163c:	4b66      	ldr	r3, [pc, #408]	@ (80017d8 <lcd_scan_dir+0x710>)
 800163e:	2280      	movs	r2, #128	@ 0x80
 8001640:	611a      	str	r2, [r3, #16]
 8001642:	4b65      	ldr	r3, [pc, #404]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001644:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001648:	611a      	str	r2, [r3, #16]
        lcd_wr_data(0);
 800164a:	4b63      	ldr	r3, [pc, #396]	@ (80017d8 <lcd_scan_dir+0x710>)
 800164c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001650:	611a      	str	r2, [r3, #16]
 8001652:	4b61      	ldr	r3, [pc, #388]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001654:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001658:	611a      	str	r2, [r3, #16]
 800165a:	4b60      	ldr	r3, [pc, #384]	@ (80017dc <lcd_scan_dir+0x714>)
 800165c:	2200      	movs	r2, #0
 800165e:	60da      	str	r2, [r3, #12]
 8001660:	4b5d      	ldr	r3, [pc, #372]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001662:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001666:	611a      	str	r2, [r3, #16]
 8001668:	4b5b      	ldr	r3, [pc, #364]	@ (80017d8 <lcd_scan_dir+0x710>)
 800166a:	2280      	movs	r2, #128	@ 0x80
 800166c:	611a      	str	r2, [r3, #16]
 800166e:	4b5a      	ldr	r3, [pc, #360]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001670:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001674:	611a      	str	r2, [r3, #16]
        lcd_wr_data((lcddev.width - 1) >> 8);
 8001676:	4b58      	ldr	r3, [pc, #352]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001678:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800167c:	611a      	str	r2, [r3, #16]
 800167e:	4b56      	ldr	r3, [pc, #344]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001680:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001684:	611a      	str	r2, [r3, #16]
 8001686:	4b53      	ldr	r3, [pc, #332]	@ (80017d4 <lcd_scan_dir+0x70c>)
 8001688:	881b      	ldrh	r3, [r3, #0]
 800168a:	3b01      	subs	r3, #1
 800168c:	121a      	asrs	r2, r3, #8
 800168e:	4b53      	ldr	r3, [pc, #332]	@ (80017dc <lcd_scan_dir+0x714>)
 8001690:	60da      	str	r2, [r3, #12]
 8001692:	4b51      	ldr	r3, [pc, #324]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001694:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001698:	611a      	str	r2, [r3, #16]
 800169a:	4b4f      	ldr	r3, [pc, #316]	@ (80017d8 <lcd_scan_dir+0x710>)
 800169c:	2280      	movs	r2, #128	@ 0x80
 800169e:	611a      	str	r2, [r3, #16]
 80016a0:	4b4d      	ldr	r3, [pc, #308]	@ (80017d8 <lcd_scan_dir+0x710>)
 80016a2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80016a6:	611a      	str	r2, [r3, #16]
        lcd_wr_data((lcddev.width - 1) & 0XFF);
 80016a8:	4b4b      	ldr	r3, [pc, #300]	@ (80017d8 <lcd_scan_dir+0x710>)
 80016aa:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80016ae:	611a      	str	r2, [r3, #16]
 80016b0:	4b49      	ldr	r3, [pc, #292]	@ (80017d8 <lcd_scan_dir+0x710>)
 80016b2:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80016b6:	611a      	str	r2, [r3, #16]
 80016b8:	4b46      	ldr	r3, [pc, #280]	@ (80017d4 <lcd_scan_dir+0x70c>)
 80016ba:	881b      	ldrh	r3, [r3, #0]
 80016bc:	3b01      	subs	r3, #1
 80016be:	4a47      	ldr	r2, [pc, #284]	@ (80017dc <lcd_scan_dir+0x714>)
 80016c0:	b2db      	uxtb	r3, r3
 80016c2:	60d3      	str	r3, [r2, #12]
 80016c4:	4b44      	ldr	r3, [pc, #272]	@ (80017d8 <lcd_scan_dir+0x710>)
 80016c6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80016ca:	611a      	str	r2, [r3, #16]
 80016cc:	4b42      	ldr	r3, [pc, #264]	@ (80017d8 <lcd_scan_dir+0x710>)
 80016ce:	2280      	movs	r2, #128	@ 0x80
 80016d0:	611a      	str	r2, [r3, #16]
 80016d2:	4b41      	ldr	r3, [pc, #260]	@ (80017d8 <lcd_scan_dir+0x710>)
 80016d4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80016d8:	611a      	str	r2, [r3, #16]
        lcd_wr_regno(lcddev.setycmd);
 80016da:	4b3e      	ldr	r3, [pc, #248]	@ (80017d4 <lcd_scan_dir+0x70c>)
 80016dc:	899b      	ldrh	r3, [r3, #12]
 80016de:	83fb      	strh	r3, [r7, #30]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80016e0:	4b3d      	ldr	r3, [pc, #244]	@ (80017d8 <lcd_scan_dir+0x710>)
 80016e2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80016e6:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80016e8:	4b3b      	ldr	r3, [pc, #236]	@ (80017d8 <lcd_scan_dir+0x710>)
 80016ea:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80016ee:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80016f0:	8bfb      	ldrh	r3, [r7, #30]
 80016f2:	b29a      	uxth	r2, r3
 80016f4:	4b39      	ldr	r3, [pc, #228]	@ (80017dc <lcd_scan_dir+0x714>)
 80016f6:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80016f8:	4b37      	ldr	r3, [pc, #220]	@ (80017d8 <lcd_scan_dir+0x710>)
 80016fa:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80016fe:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8001700:	4b35      	ldr	r3, [pc, #212]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001702:	2280      	movs	r2, #128	@ 0x80
 8001704:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8001706:	4b34      	ldr	r3, [pc, #208]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001708:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800170c:	611a      	str	r2, [r3, #16]
}
 800170e:	bf00      	nop
        lcd_wr_data(0);
 8001710:	4b31      	ldr	r3, [pc, #196]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001712:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001716:	611a      	str	r2, [r3, #16]
 8001718:	4b2f      	ldr	r3, [pc, #188]	@ (80017d8 <lcd_scan_dir+0x710>)
 800171a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800171e:	611a      	str	r2, [r3, #16]
 8001720:	4b2e      	ldr	r3, [pc, #184]	@ (80017dc <lcd_scan_dir+0x714>)
 8001722:	2200      	movs	r2, #0
 8001724:	60da      	str	r2, [r3, #12]
 8001726:	4b2c      	ldr	r3, [pc, #176]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001728:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800172c:	611a      	str	r2, [r3, #16]
 800172e:	4b2a      	ldr	r3, [pc, #168]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001730:	2280      	movs	r2, #128	@ 0x80
 8001732:	611a      	str	r2, [r3, #16]
 8001734:	4b28      	ldr	r3, [pc, #160]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001736:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800173a:	611a      	str	r2, [r3, #16]
        lcd_wr_data(0);
 800173c:	4b26      	ldr	r3, [pc, #152]	@ (80017d8 <lcd_scan_dir+0x710>)
 800173e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001742:	611a      	str	r2, [r3, #16]
 8001744:	4b24      	ldr	r3, [pc, #144]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001746:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800174a:	611a      	str	r2, [r3, #16]
 800174c:	4b23      	ldr	r3, [pc, #140]	@ (80017dc <lcd_scan_dir+0x714>)
 800174e:	2200      	movs	r2, #0
 8001750:	60da      	str	r2, [r3, #12]
 8001752:	4b21      	ldr	r3, [pc, #132]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001754:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001758:	611a      	str	r2, [r3, #16]
 800175a:	4b1f      	ldr	r3, [pc, #124]	@ (80017d8 <lcd_scan_dir+0x710>)
 800175c:	2280      	movs	r2, #128	@ 0x80
 800175e:	611a      	str	r2, [r3, #16]
 8001760:	4b1d      	ldr	r3, [pc, #116]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001762:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001766:	611a      	str	r2, [r3, #16]
        lcd_wr_data((lcddev.height - 1) >> 8);
 8001768:	4b1b      	ldr	r3, [pc, #108]	@ (80017d8 <lcd_scan_dir+0x710>)
 800176a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800176e:	611a      	str	r2, [r3, #16]
 8001770:	4b19      	ldr	r3, [pc, #100]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001772:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001776:	611a      	str	r2, [r3, #16]
 8001778:	4b16      	ldr	r3, [pc, #88]	@ (80017d4 <lcd_scan_dir+0x70c>)
 800177a:	885b      	ldrh	r3, [r3, #2]
 800177c:	3b01      	subs	r3, #1
 800177e:	121a      	asrs	r2, r3, #8
 8001780:	4b16      	ldr	r3, [pc, #88]	@ (80017dc <lcd_scan_dir+0x714>)
 8001782:	60da      	str	r2, [r3, #12]
 8001784:	4b14      	ldr	r3, [pc, #80]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001786:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800178a:	611a      	str	r2, [r3, #16]
 800178c:	4b12      	ldr	r3, [pc, #72]	@ (80017d8 <lcd_scan_dir+0x710>)
 800178e:	2280      	movs	r2, #128	@ 0x80
 8001790:	611a      	str	r2, [r3, #16]
 8001792:	4b11      	ldr	r3, [pc, #68]	@ (80017d8 <lcd_scan_dir+0x710>)
 8001794:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001798:	611a      	str	r2, [r3, #16]
        lcd_wr_data((lcddev.height - 1) & 0XFF);
 800179a:	4b0f      	ldr	r3, [pc, #60]	@ (80017d8 <lcd_scan_dir+0x710>)
 800179c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80017a0:	611a      	str	r2, [r3, #16]
 80017a2:	4b0d      	ldr	r3, [pc, #52]	@ (80017d8 <lcd_scan_dir+0x710>)
 80017a4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80017a8:	611a      	str	r2, [r3, #16]
 80017aa:	4b0a      	ldr	r3, [pc, #40]	@ (80017d4 <lcd_scan_dir+0x70c>)
 80017ac:	885b      	ldrh	r3, [r3, #2]
 80017ae:	3b01      	subs	r3, #1
 80017b0:	4a0a      	ldr	r2, [pc, #40]	@ (80017dc <lcd_scan_dir+0x714>)
 80017b2:	b2db      	uxtb	r3, r3
 80017b4:	60d3      	str	r3, [r2, #12]
 80017b6:	4b08      	ldr	r3, [pc, #32]	@ (80017d8 <lcd_scan_dir+0x710>)
 80017b8:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80017bc:	611a      	str	r2, [r3, #16]
 80017be:	4b06      	ldr	r3, [pc, #24]	@ (80017d8 <lcd_scan_dir+0x710>)
 80017c0:	2280      	movs	r2, #128	@ 0x80
 80017c2:	611a      	str	r2, [r3, #16]
 80017c4:	4b04      	ldr	r3, [pc, #16]	@ (80017d8 <lcd_scan_dir+0x710>)
 80017c6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80017ca:	611a      	str	r2, [r3, #16]
}
 80017cc:	bf00      	nop
 80017ce:	3728      	adds	r7, #40	@ 0x28
 80017d0:	46bd      	mov	sp, r7
 80017d2:	bd80      	pop	{r7, pc}
 80017d4:	2000002c 	.word	0x2000002c
 80017d8:	40011000 	.word	0x40011000
 80017dc:	40010c00 	.word	0x40010c00

080017e0 <lcd_draw_point>:
 * @param       x,y: ����
 * @param       color: �����ɫ(32λ��ɫ,�������LTDC)
 * @retval      ��
 */
void lcd_draw_point(uint16_t x, uint16_t y, uint32_t color)
{
 80017e0:	b580      	push	{r7, lr}
 80017e2:	b084      	sub	sp, #16
 80017e4:	af00      	add	r7, sp, #0
 80017e6:	4603      	mov	r3, r0
 80017e8:	603a      	str	r2, [r7, #0]
 80017ea:	80fb      	strh	r3, [r7, #6]
 80017ec:	460b      	mov	r3, r1
 80017ee:	80bb      	strh	r3, [r7, #4]
    lcd_set_cursor(x, y);       /* ���ù��λ�� */
 80017f0:	88ba      	ldrh	r2, [r7, #4]
 80017f2:	88fb      	ldrh	r3, [r7, #6]
 80017f4:	4611      	mov	r1, r2
 80017f6:	4618      	mov	r0, r3
 80017f8:	f7ff f952 	bl	8000aa0 <lcd_set_cursor>
    lcd_wr_regno(lcddev.wramcmd);
 80017fc:	4b1a      	ldr	r3, [pc, #104]	@ (8001868 <lcd_draw_point+0x88>)
 80017fe:	891b      	ldrh	r3, [r3, #8]
 8001800:	81fb      	strh	r3, [r7, #14]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8001802:	4b1a      	ldr	r3, [pc, #104]	@ (800186c <lcd_draw_point+0x8c>)
 8001804:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001808:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800180a:	4b18      	ldr	r3, [pc, #96]	@ (800186c <lcd_draw_point+0x8c>)
 800180c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001810:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8001812:	89fb      	ldrh	r3, [r7, #14]
 8001814:	b29a      	uxth	r2, r3
 8001816:	4b16      	ldr	r3, [pc, #88]	@ (8001870 <lcd_draw_point+0x90>)
 8001818:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800181a:	4b14      	ldr	r3, [pc, #80]	@ (800186c <lcd_draw_point+0x8c>)
 800181c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001820:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8001822:	4b12      	ldr	r3, [pc, #72]	@ (800186c <lcd_draw_point+0x8c>)
 8001824:	2280      	movs	r2, #128	@ 0x80
 8001826:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8001828:	4b10      	ldr	r3, [pc, #64]	@ (800186c <lcd_draw_point+0x8c>)
 800182a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800182e:	611a      	str	r2, [r3, #16]
}
 8001830:	bf00      	nop
}
 8001832:	bf00      	nop
    lcd_write_ram_prepare();    /* ��ʼд��GRAM */
    lcd_wr_data(color);
 8001834:	4b0d      	ldr	r3, [pc, #52]	@ (800186c <lcd_draw_point+0x8c>)
 8001836:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800183a:	611a      	str	r2, [r3, #16]
 800183c:	4b0b      	ldr	r3, [pc, #44]	@ (800186c <lcd_draw_point+0x8c>)
 800183e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001842:	611a      	str	r2, [r3, #16]
 8001844:	4a0a      	ldr	r2, [pc, #40]	@ (8001870 <lcd_draw_point+0x90>)
 8001846:	683b      	ldr	r3, [r7, #0]
 8001848:	60d3      	str	r3, [r2, #12]
 800184a:	4b08      	ldr	r3, [pc, #32]	@ (800186c <lcd_draw_point+0x8c>)
 800184c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001850:	611a      	str	r2, [r3, #16]
 8001852:	4b06      	ldr	r3, [pc, #24]	@ (800186c <lcd_draw_point+0x8c>)
 8001854:	2280      	movs	r2, #128	@ 0x80
 8001856:	611a      	str	r2, [r3, #16]
 8001858:	4b04      	ldr	r3, [pc, #16]	@ (800186c <lcd_draw_point+0x8c>)
 800185a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800185e:	611a      	str	r2, [r3, #16]
}
 8001860:	bf00      	nop
 8001862:	3710      	adds	r7, #16
 8001864:	46bd      	mov	sp, r7
 8001866:	bd80      	pop	{r7, pc}
 8001868:	2000002c 	.word	0x2000002c
 800186c:	40011000 	.word	0x40011000
 8001870:	40010c00 	.word	0x40010c00
 8001874:	00000000 	.word	0x00000000

08001878 <lcd_ssd_backlight_set>:
 * @brief       SSD1963�����������ú���
 * @param       pwm: ����ȼ�,0~100.Խ��Խ��.
 * @retval      ��
 */
void lcd_ssd_backlight_set(uint8_t pwm)
{
 8001878:	b590      	push	{r4, r7, lr}
 800187a:	b085      	sub	sp, #20
 800187c:	af00      	add	r7, sp, #0
 800187e:	4603      	mov	r3, r0
 8001880:	71fb      	strb	r3, [r7, #7]
 8001882:	23be      	movs	r3, #190	@ 0xbe
 8001884:	81fb      	strh	r3, [r7, #14]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8001886:	4b5a      	ldr	r3, [pc, #360]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 8001888:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800188c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800188e:	4b58      	ldr	r3, [pc, #352]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 8001890:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001894:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8001896:	89fb      	ldrh	r3, [r7, #14]
 8001898:	b29a      	uxth	r2, r3
 800189a:	4b56      	ldr	r3, [pc, #344]	@ (80019f4 <lcd_ssd_backlight_set+0x17c>)
 800189c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800189e:	4b54      	ldr	r3, [pc, #336]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80018a0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80018a4:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80018a6:	4b52      	ldr	r3, [pc, #328]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80018a8:	2280      	movs	r2, #128	@ 0x80
 80018aa:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80018ac:	4b50      	ldr	r3, [pc, #320]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80018ae:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80018b2:	611a      	str	r2, [r3, #16]
}
 80018b4:	bf00      	nop
    lcd_wr_regno(0xBE);         /* ����PWM��� */
    lcd_wr_data(0x05);          /* 1����PWMƵ�� */
 80018b6:	4b4e      	ldr	r3, [pc, #312]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80018b8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80018bc:	611a      	str	r2, [r3, #16]
 80018be:	4b4c      	ldr	r3, [pc, #304]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80018c0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80018c4:	611a      	str	r2, [r3, #16]
 80018c6:	4b4b      	ldr	r3, [pc, #300]	@ (80019f4 <lcd_ssd_backlight_set+0x17c>)
 80018c8:	2205      	movs	r2, #5
 80018ca:	60da      	str	r2, [r3, #12]
 80018cc:	4b48      	ldr	r3, [pc, #288]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80018ce:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80018d2:	611a      	str	r2, [r3, #16]
 80018d4:	4b46      	ldr	r3, [pc, #280]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80018d6:	2280      	movs	r2, #128	@ 0x80
 80018d8:	611a      	str	r2, [r3, #16]
 80018da:	4b45      	ldr	r3, [pc, #276]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80018dc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80018e0:	611a      	str	r2, [r3, #16]
    lcd_wr_data(pwm * 2.55);    /* 2����PWMռ�ձ� */
 80018e2:	4b43      	ldr	r3, [pc, #268]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80018e4:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80018e8:	611a      	str	r2, [r3, #16]
 80018ea:	4b41      	ldr	r3, [pc, #260]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80018ec:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80018f0:	611a      	str	r2, [r3, #16]
 80018f2:	79fb      	ldrb	r3, [r7, #7]
 80018f4:	4618      	mov	r0, r3
 80018f6:	f7fe ff13 	bl	8000720 <__aeabi_i2d>
 80018fa:	a33b      	add	r3, pc, #236	@ (adr r3, 80019e8 <lcd_ssd_backlight_set+0x170>)
 80018fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001900:	f7fe fc92 	bl	8000228 <__aeabi_dmul>
 8001904:	4602      	mov	r2, r0
 8001906:	460b      	mov	r3, r1
 8001908:	4c3a      	ldr	r4, [pc, #232]	@ (80019f4 <lcd_ssd_backlight_set+0x17c>)
 800190a:	4610      	mov	r0, r2
 800190c:	4619      	mov	r1, r3
 800190e:	f7fe ff71 	bl	80007f4 <__aeabi_d2uiz>
 8001912:	4603      	mov	r3, r0
 8001914:	60e3      	str	r3, [r4, #12]
 8001916:	4b36      	ldr	r3, [pc, #216]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 8001918:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800191c:	611a      	str	r2, [r3, #16]
 800191e:	4b34      	ldr	r3, [pc, #208]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 8001920:	2280      	movs	r2, #128	@ 0x80
 8001922:	611a      	str	r2, [r3, #16]
 8001924:	4b32      	ldr	r3, [pc, #200]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 8001926:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800192a:	611a      	str	r2, [r3, #16]
    lcd_wr_data(0x01);          /* 3����C */
 800192c:	4b30      	ldr	r3, [pc, #192]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 800192e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001932:	611a      	str	r2, [r3, #16]
 8001934:	4b2e      	ldr	r3, [pc, #184]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 8001936:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800193a:	611a      	str	r2, [r3, #16]
 800193c:	4b2d      	ldr	r3, [pc, #180]	@ (80019f4 <lcd_ssd_backlight_set+0x17c>)
 800193e:	2201      	movs	r2, #1
 8001940:	60da      	str	r2, [r3, #12]
 8001942:	4b2b      	ldr	r3, [pc, #172]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 8001944:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001948:	611a      	str	r2, [r3, #16]
 800194a:	4b29      	ldr	r3, [pc, #164]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 800194c:	2280      	movs	r2, #128	@ 0x80
 800194e:	611a      	str	r2, [r3, #16]
 8001950:	4b27      	ldr	r3, [pc, #156]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 8001952:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001956:	611a      	str	r2, [r3, #16]
    lcd_wr_data(0xFF);          /* 4����D */
 8001958:	4b25      	ldr	r3, [pc, #148]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 800195a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800195e:	611a      	str	r2, [r3, #16]
 8001960:	4b23      	ldr	r3, [pc, #140]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 8001962:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001966:	611a      	str	r2, [r3, #16]
 8001968:	4b22      	ldr	r3, [pc, #136]	@ (80019f4 <lcd_ssd_backlight_set+0x17c>)
 800196a:	22ff      	movs	r2, #255	@ 0xff
 800196c:	60da      	str	r2, [r3, #12]
 800196e:	4b20      	ldr	r3, [pc, #128]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 8001970:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001974:	611a      	str	r2, [r3, #16]
 8001976:	4b1e      	ldr	r3, [pc, #120]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 8001978:	2280      	movs	r2, #128	@ 0x80
 800197a:	611a      	str	r2, [r3, #16]
 800197c:	4b1c      	ldr	r3, [pc, #112]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 800197e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001982:	611a      	str	r2, [r3, #16]
    lcd_wr_data(0x00);          /* 5����E */
 8001984:	4b1a      	ldr	r3, [pc, #104]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 8001986:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800198a:	611a      	str	r2, [r3, #16]
 800198c:	4b18      	ldr	r3, [pc, #96]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 800198e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001992:	611a      	str	r2, [r3, #16]
 8001994:	4b17      	ldr	r3, [pc, #92]	@ (80019f4 <lcd_ssd_backlight_set+0x17c>)
 8001996:	2200      	movs	r2, #0
 8001998:	60da      	str	r2, [r3, #12]
 800199a:	4b15      	ldr	r3, [pc, #84]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 800199c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80019a0:	611a      	str	r2, [r3, #16]
 80019a2:	4b13      	ldr	r3, [pc, #76]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80019a4:	2280      	movs	r2, #128	@ 0x80
 80019a6:	611a      	str	r2, [r3, #16]
 80019a8:	4b11      	ldr	r3, [pc, #68]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80019aa:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80019ae:	611a      	str	r2, [r3, #16]
    lcd_wr_data(0x00);          /* 6����F */
 80019b0:	4b0f      	ldr	r3, [pc, #60]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80019b2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80019b6:	611a      	str	r2, [r3, #16]
 80019b8:	4b0d      	ldr	r3, [pc, #52]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80019ba:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80019be:	611a      	str	r2, [r3, #16]
 80019c0:	4b0c      	ldr	r3, [pc, #48]	@ (80019f4 <lcd_ssd_backlight_set+0x17c>)
 80019c2:	2200      	movs	r2, #0
 80019c4:	60da      	str	r2, [r3, #12]
 80019c6:	4b0a      	ldr	r3, [pc, #40]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80019c8:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80019cc:	611a      	str	r2, [r3, #16]
 80019ce:	4b08      	ldr	r3, [pc, #32]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80019d0:	2280      	movs	r2, #128	@ 0x80
 80019d2:	611a      	str	r2, [r3, #16]
 80019d4:	4b06      	ldr	r3, [pc, #24]	@ (80019f0 <lcd_ssd_backlight_set+0x178>)
 80019d6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80019da:	611a      	str	r2, [r3, #16]
}
 80019dc:	bf00      	nop
 80019de:	3714      	adds	r7, #20
 80019e0:	46bd      	mov	sp, r7
 80019e2:	bd90      	pop	{r4, r7, pc}
 80019e4:	f3af 8000 	nop.w
 80019e8:	66666666 	.word	0x66666666
 80019ec:	40046666 	.word	0x40046666
 80019f0:	40011000 	.word	0x40011000
 80019f4:	40010c00 	.word	0x40010c00

080019f8 <lcd_display_dir>:
 * @brief       ����LCD��ʾ����
 * @param       dir:0,����; 1,����
 * @retval      ��
 */
void lcd_display_dir(uint8_t dir)
{
 80019f8:	b580      	push	{r7, lr}
 80019fa:	b082      	sub	sp, #8
 80019fc:	af00      	add	r7, sp, #0
 80019fe:	4603      	mov	r3, r0
 8001a00:	71fb      	strb	r3, [r7, #7]
    lcddev.dir = dir;   /* ����/���� */
 8001a02:	4a68      	ldr	r2, [pc, #416]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a04:	79fb      	ldrb	r3, [r7, #7]
 8001a06:	7193      	strb	r3, [r2, #6]

    if (dir == 0)       /* ���� */
 8001a08:	79fb      	ldrb	r3, [r7, #7]
 8001a0a:	2b00      	cmp	r3, #0
 8001a0c:	d165      	bne.n	8001ada <lcd_display_dir+0xe2>
    {
        lcddev.width = 240;
 8001a0e:	4b65      	ldr	r3, [pc, #404]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a10:	22f0      	movs	r2, #240	@ 0xf0
 8001a12:	801a      	strh	r2, [r3, #0]
        lcddev.height = 320;
 8001a14:	4b63      	ldr	r3, [pc, #396]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a16:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8001a1a:	805a      	strh	r2, [r3, #2]

        if (lcddev.id == 0x5510)
 8001a1c:	4b61      	ldr	r3, [pc, #388]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a1e:	889b      	ldrh	r3, [r3, #4]
 8001a20:	f245 5210 	movw	r2, #21776	@ 0x5510
 8001a24:	4293      	cmp	r3, r2
 8001a26:	d114      	bne.n	8001a52 <lcd_display_dir+0x5a>
        {
            lcddev.wramcmd = 0X2C00;
 8001a28:	4b5e      	ldr	r3, [pc, #376]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a2a:	f44f 5230 	mov.w	r2, #11264	@ 0x2c00
 8001a2e:	811a      	strh	r2, [r3, #8]
            lcddev.setxcmd = 0X2A00;
 8001a30:	4b5c      	ldr	r3, [pc, #368]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a32:	f44f 5228 	mov.w	r2, #10752	@ 0x2a00
 8001a36:	815a      	strh	r2, [r3, #10]
            lcddev.setycmd = 0X2B00;
 8001a38:	4b5a      	ldr	r3, [pc, #360]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a3a:	f44f 522c 	mov.w	r2, #11008	@ 0x2b00
 8001a3e:	819a      	strh	r2, [r3, #12]
            lcddev.width = 480;
 8001a40:	4b58      	ldr	r3, [pc, #352]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a42:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8001a46:	801a      	strh	r2, [r3, #0]
            lcddev.height = 800;
 8001a48:	4b56      	ldr	r3, [pc, #344]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a4a:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8001a4e:	805a      	strh	r2, [r3, #2]
 8001a50:	e020      	b.n	8001a94 <lcd_display_dir+0x9c>
        }
        else if (lcddev.id == 0X1963)
 8001a52:	4b54      	ldr	r3, [pc, #336]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a54:	889b      	ldrh	r3, [r3, #4]
 8001a56:	f641 1263 	movw	r2, #6499	@ 0x1963
 8001a5a:	4293      	cmp	r3, r2
 8001a5c:	d111      	bne.n	8001a82 <lcd_display_dir+0x8a>
        {
            lcddev.wramcmd = 0X2C;  /* ����д��GRAM��ָ�� */
 8001a5e:	4b51      	ldr	r3, [pc, #324]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a60:	222c      	movs	r2, #44	@ 0x2c
 8001a62:	811a      	strh	r2, [r3, #8]
            lcddev.setxcmd = 0X2B;  /* ����дX����ָ�� */
 8001a64:	4b4f      	ldr	r3, [pc, #316]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a66:	222b      	movs	r2, #43	@ 0x2b
 8001a68:	815a      	strh	r2, [r3, #10]
            lcddev.setycmd = 0X2A;  /* ����дY����ָ�� */
 8001a6a:	4b4e      	ldr	r3, [pc, #312]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a6c:	222a      	movs	r2, #42	@ 0x2a
 8001a6e:	819a      	strh	r2, [r3, #12]
            lcddev.width = 480;     /* ���ÿ��480 */
 8001a70:	4b4c      	ldr	r3, [pc, #304]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a72:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8001a76:	801a      	strh	r2, [r3, #0]
            lcddev.height = 800;    /* ���ø߶�800 */
 8001a78:	4b4a      	ldr	r3, [pc, #296]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a7a:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8001a7e:	805a      	strh	r2, [r3, #2]
 8001a80:	e008      	b.n	8001a94 <lcd_display_dir+0x9c>
        }
        else   /* ����IC, ����: 9341 / 5310 / 7789 / 7796 / 9806 ��IC */
        {
            lcddev.wramcmd = 0X2C;
 8001a82:	4b48      	ldr	r3, [pc, #288]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a84:	222c      	movs	r2, #44	@ 0x2c
 8001a86:	811a      	strh	r2, [r3, #8]
            lcddev.setxcmd = 0X2A;
 8001a88:	4b46      	ldr	r3, [pc, #280]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a8a:	222a      	movs	r2, #42	@ 0x2a
 8001a8c:	815a      	strh	r2, [r3, #10]
            lcddev.setycmd = 0X2B;
 8001a8e:	4b45      	ldr	r3, [pc, #276]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a90:	222b      	movs	r2, #43	@ 0x2b
 8001a92:	819a      	strh	r2, [r3, #12]
        }

        if (lcddev.id == 0X5310 || lcddev.id == 0x7796)     /* �����5310/7796 ���ʾ�� 320*480�ֱ��� */
 8001a94:	4b43      	ldr	r3, [pc, #268]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001a96:	889b      	ldrh	r3, [r3, #4]
 8001a98:	f245 3210 	movw	r2, #21264	@ 0x5310
 8001a9c:	4293      	cmp	r3, r2
 8001a9e:	d005      	beq.n	8001aac <lcd_display_dir+0xb4>
 8001aa0:	4b40      	ldr	r3, [pc, #256]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001aa2:	889b      	ldrh	r3, [r3, #4]
 8001aa4:	f247 7296 	movw	r2, #30614	@ 0x7796
 8001aa8:	4293      	cmp	r3, r2
 8001aaa:	d107      	bne.n	8001abc <lcd_display_dir+0xc4>
        {
            lcddev.width = 320;
 8001aac:	4b3d      	ldr	r3, [pc, #244]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001aae:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8001ab2:	801a      	strh	r2, [r3, #0]
            lcddev.height = 480;
 8001ab4:	4b3b      	ldr	r3, [pc, #236]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001ab6:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8001aba:	805a      	strh	r2, [r3, #2]
        }

        if (lcddev.id == 0X9806)    /* �����9806 ���ʾ�� 480*800 �ֱ��� */
 8001abc:	4b39      	ldr	r3, [pc, #228]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001abe:	889b      	ldrh	r3, [r3, #4]
 8001ac0:	f649 0206 	movw	r2, #38918	@ 0x9806
 8001ac4:	4293      	cmp	r3, r2
 8001ac6:	d165      	bne.n	8001b94 <lcd_display_dir+0x19c>
        {
            lcddev.width = 480;
 8001ac8:	4b36      	ldr	r3, [pc, #216]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001aca:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8001ace:	801a      	strh	r2, [r3, #0]
            lcddev.height = 800;
 8001ad0:	4b34      	ldr	r3, [pc, #208]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001ad2:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8001ad6:	805a      	strh	r2, [r3, #2]
 8001ad8:	e05c      	b.n	8001b94 <lcd_display_dir+0x19c>
        }
    }
    else                /* ���� */
    {
        lcddev.width = 320;         /* Ĭ�Ͽ�� */
 8001ada:	4b32      	ldr	r3, [pc, #200]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001adc:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8001ae0:	801a      	strh	r2, [r3, #0]
        lcddev.height = 240;        /* Ĭ�ϸ߶� */
 8001ae2:	4b30      	ldr	r3, [pc, #192]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001ae4:	22f0      	movs	r2, #240	@ 0xf0
 8001ae6:	805a      	strh	r2, [r3, #2]

        if (lcddev.id == 0x5510)
 8001ae8:	4b2e      	ldr	r3, [pc, #184]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001aea:	889b      	ldrh	r3, [r3, #4]
 8001aec:	f245 5210 	movw	r2, #21776	@ 0x5510
 8001af0:	4293      	cmp	r3, r2
 8001af2:	d114      	bne.n	8001b1e <lcd_display_dir+0x126>
        {
            lcddev.wramcmd = 0X2C00;
 8001af4:	4b2b      	ldr	r3, [pc, #172]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001af6:	f44f 5230 	mov.w	r2, #11264	@ 0x2c00
 8001afa:	811a      	strh	r2, [r3, #8]
            lcddev.setxcmd = 0X2A00;
 8001afc:	4b29      	ldr	r3, [pc, #164]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001afe:	f44f 5228 	mov.w	r2, #10752	@ 0x2a00
 8001b02:	815a      	strh	r2, [r3, #10]
            lcddev.setycmd = 0X2B00;
 8001b04:	4b27      	ldr	r3, [pc, #156]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b06:	f44f 522c 	mov.w	r2, #11008	@ 0x2b00
 8001b0a:	819a      	strh	r2, [r3, #12]
            lcddev.width = 800;
 8001b0c:	4b25      	ldr	r3, [pc, #148]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b0e:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8001b12:	801a      	strh	r2, [r3, #0]
            lcddev.height = 480;
 8001b14:	4b23      	ldr	r3, [pc, #140]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b16:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8001b1a:	805a      	strh	r2, [r3, #2]
 8001b1c:	e026      	b.n	8001b6c <lcd_display_dir+0x174>
        }
        else if (lcddev.id == 0X1963 || lcddev.id == 0x9806)
 8001b1e:	4b21      	ldr	r3, [pc, #132]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b20:	889b      	ldrh	r3, [r3, #4]
 8001b22:	f641 1263 	movw	r2, #6499	@ 0x1963
 8001b26:	4293      	cmp	r3, r2
 8001b28:	d005      	beq.n	8001b36 <lcd_display_dir+0x13e>
 8001b2a:	4b1e      	ldr	r3, [pc, #120]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b2c:	889b      	ldrh	r3, [r3, #4]
 8001b2e:	f649 0206 	movw	r2, #38918	@ 0x9806
 8001b32:	4293      	cmp	r3, r2
 8001b34:	d111      	bne.n	8001b5a <lcd_display_dir+0x162>
        {
            lcddev.wramcmd = 0X2C;  /* ����д��GRAM��ָ�� */
 8001b36:	4b1b      	ldr	r3, [pc, #108]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b38:	222c      	movs	r2, #44	@ 0x2c
 8001b3a:	811a      	strh	r2, [r3, #8]
            lcddev.setxcmd = 0X2A;  /* ����дX����ָ�� */
 8001b3c:	4b19      	ldr	r3, [pc, #100]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b3e:	222a      	movs	r2, #42	@ 0x2a
 8001b40:	815a      	strh	r2, [r3, #10]
            lcddev.setycmd = 0X2B;  /* ����дY����ָ�� */
 8001b42:	4b18      	ldr	r3, [pc, #96]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b44:	222b      	movs	r2, #43	@ 0x2b
 8001b46:	819a      	strh	r2, [r3, #12]
            lcddev.width = 800;     /* ���ÿ��800 */
 8001b48:	4b16      	ldr	r3, [pc, #88]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b4a:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8001b4e:	801a      	strh	r2, [r3, #0]
            lcddev.height = 480;    /* ���ø߶�480 */
 8001b50:	4b14      	ldr	r3, [pc, #80]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b52:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8001b56:	805a      	strh	r2, [r3, #2]
 8001b58:	e008      	b.n	8001b6c <lcd_display_dir+0x174>
        }
        else     /* ����IC, ����: 9341 / 5310 / 7789 / 7796 ��IC */
        {
            lcddev.wramcmd = 0X2C;
 8001b5a:	4b12      	ldr	r3, [pc, #72]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b5c:	222c      	movs	r2, #44	@ 0x2c
 8001b5e:	811a      	strh	r2, [r3, #8]
            lcddev.setxcmd = 0X2A;
 8001b60:	4b10      	ldr	r3, [pc, #64]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b62:	222a      	movs	r2, #42	@ 0x2a
 8001b64:	815a      	strh	r2, [r3, #10]
            lcddev.setycmd = 0X2B;
 8001b66:	4b0f      	ldr	r3, [pc, #60]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b68:	222b      	movs	r2, #43	@ 0x2b
 8001b6a:	819a      	strh	r2, [r3, #12]
        }

        if (lcddev.id == 0X5310 || lcddev.id == 0x7796)     /* �����5310/7796 ���ʾ�� 320*480�ֱ��� */
 8001b6c:	4b0d      	ldr	r3, [pc, #52]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b6e:	889b      	ldrh	r3, [r3, #4]
 8001b70:	f245 3210 	movw	r2, #21264	@ 0x5310
 8001b74:	4293      	cmp	r3, r2
 8001b76:	d005      	beq.n	8001b84 <lcd_display_dir+0x18c>
 8001b78:	4b0a      	ldr	r3, [pc, #40]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b7a:	889b      	ldrh	r3, [r3, #4]
 8001b7c:	f247 7296 	movw	r2, #30614	@ 0x7796
 8001b80:	4293      	cmp	r3, r2
 8001b82:	d107      	bne.n	8001b94 <lcd_display_dir+0x19c>
        {
            lcddev.width = 480;
 8001b84:	4b07      	ldr	r3, [pc, #28]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b86:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8001b8a:	801a      	strh	r2, [r3, #0]
            lcddev.height = 320;
 8001b8c:	4b05      	ldr	r3, [pc, #20]	@ (8001ba4 <lcd_display_dir+0x1ac>)
 8001b8e:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8001b92:	805a      	strh	r2, [r3, #2]
        }
    }

    lcd_scan_dir(DFT_SCAN_DIR);     /* Ĭ��ɨ�跽�� */
 8001b94:	2000      	movs	r0, #0
 8001b96:	f7ff fa97 	bl	80010c8 <lcd_scan_dir>
}
 8001b9a:	bf00      	nop
 8001b9c:	3708      	adds	r7, #8
 8001b9e:	46bd      	mov	sp, r7
 8001ba0:	bd80      	pop	{r7, pc}
 8001ba2:	bf00      	nop
 8001ba4:	2000002c 	.word	0x2000002c

08001ba8 <lcd_init>:
 *
 * @param       ��
 * @retval      ��
 */
void lcd_init(void)
{
 8001ba8:	b580      	push	{r7, lr}
 8001baa:	b0da      	sub	sp, #360	@ 0x168
 8001bac:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef gpio_init_struct;
    
    LCD_BL_GPIO_CLK_ENABLE();   /* LCD_BL��ʱ��ʹ�� */
 8001bae:	4bbe      	ldr	r3, [pc, #760]	@ (8001ea8 <lcd_init+0x300>)
 8001bb0:	699b      	ldr	r3, [r3, #24]
 8001bb2:	4abd      	ldr	r2, [pc, #756]	@ (8001ea8 <lcd_init+0x300>)
 8001bb4:	f043 0310 	orr.w	r3, r3, #16
 8001bb8:	6193      	str	r3, [r2, #24]
 8001bba:	4bbb      	ldr	r3, [pc, #748]	@ (8001ea8 <lcd_init+0x300>)
 8001bbc:	699b      	ldr	r3, [r3, #24]
 8001bbe:	f003 0210 	and.w	r2, r3, #16
 8001bc2:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001bc6:	f5a3 73a8 	sub.w	r3, r3, #336	@ 0x150
 8001bca:	601a      	str	r2, [r3, #0]
 8001bcc:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001bd0:	f5a3 73a8 	sub.w	r3, r3, #336	@ 0x150
 8001bd4:	681b      	ldr	r3, [r3, #0]
    LCD_CS_GPIO_CLK_ENABLE();   /* LCD_CS��ʱ��ʹ�� */
 8001bd6:	4bb4      	ldr	r3, [pc, #720]	@ (8001ea8 <lcd_init+0x300>)
 8001bd8:	699b      	ldr	r3, [r3, #24]
 8001bda:	4ab3      	ldr	r2, [pc, #716]	@ (8001ea8 <lcd_init+0x300>)
 8001bdc:	f043 0310 	orr.w	r3, r3, #16
 8001be0:	6193      	str	r3, [r2, #24]
 8001be2:	4bb1      	ldr	r3, [pc, #708]	@ (8001ea8 <lcd_init+0x300>)
 8001be4:	699b      	ldr	r3, [r3, #24]
 8001be6:	f003 0210 	and.w	r2, r3, #16
 8001bea:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001bee:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8001bf2:	601a      	str	r2, [r3, #0]
 8001bf4:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001bf8:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8001bfc:	681b      	ldr	r3, [r3, #0]
    LCD_WR_GPIO_CLK_ENABLE();   /* LCD_WR��ʱ��ʹ�� */
 8001bfe:	4baa      	ldr	r3, [pc, #680]	@ (8001ea8 <lcd_init+0x300>)
 8001c00:	699b      	ldr	r3, [r3, #24]
 8001c02:	4aa9      	ldr	r2, [pc, #676]	@ (8001ea8 <lcd_init+0x300>)
 8001c04:	f043 0310 	orr.w	r3, r3, #16
 8001c08:	6193      	str	r3, [r2, #24]
 8001c0a:	4ba7      	ldr	r3, [pc, #668]	@ (8001ea8 <lcd_init+0x300>)
 8001c0c:	699b      	ldr	r3, [r3, #24]
 8001c0e:	f003 0210 	and.w	r2, r3, #16
 8001c12:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001c16:	f5a3 73ac 	sub.w	r3, r3, #344	@ 0x158
 8001c1a:	601a      	str	r2, [r3, #0]
 8001c1c:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001c20:	f5a3 73ac 	sub.w	r3, r3, #344	@ 0x158
 8001c24:	681b      	ldr	r3, [r3, #0]
    LCD_RD_GPIO_CLK_ENABLE();   /* LCD_RD��ʱ��ʹ�� */
 8001c26:	4ba0      	ldr	r3, [pc, #640]	@ (8001ea8 <lcd_init+0x300>)
 8001c28:	699b      	ldr	r3, [r3, #24]
 8001c2a:	4a9f      	ldr	r2, [pc, #636]	@ (8001ea8 <lcd_init+0x300>)
 8001c2c:	f043 0310 	orr.w	r3, r3, #16
 8001c30:	6193      	str	r3, [r2, #24]
 8001c32:	4b9d      	ldr	r3, [pc, #628]	@ (8001ea8 <lcd_init+0x300>)
 8001c34:	699b      	ldr	r3, [r3, #24]
 8001c36:	f003 0210 	and.w	r2, r3, #16
 8001c3a:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001c3e:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 8001c42:	601a      	str	r2, [r3, #0]
 8001c44:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001c48:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 8001c4c:	681b      	ldr	r3, [r3, #0]
    LCD_RS_GPIO_CLK_ENABLE();   /* LCD_RS��ʱ��ʹ�� */
 8001c4e:	4b96      	ldr	r3, [pc, #600]	@ (8001ea8 <lcd_init+0x300>)
 8001c50:	699b      	ldr	r3, [r3, #24]
 8001c52:	4a95      	ldr	r2, [pc, #596]	@ (8001ea8 <lcd_init+0x300>)
 8001c54:	f043 0310 	orr.w	r3, r3, #16
 8001c58:	6193      	str	r3, [r2, #24]
 8001c5a:	4b93      	ldr	r3, [pc, #588]	@ (8001ea8 <lcd_init+0x300>)
 8001c5c:	699b      	ldr	r3, [r3, #24]
 8001c5e:	f003 0210 	and.w	r2, r3, #16
 8001c62:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001c66:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 8001c6a:	601a      	str	r2, [r3, #0]
 8001c6c:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001c70:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 8001c74:	681b      	ldr	r3, [r3, #0]
    LCD_DATA_GPIO_CLK_ENABLE(); /* LCD_DATA��ʱ��ʹ�� */
 8001c76:	4b8c      	ldr	r3, [pc, #560]	@ (8001ea8 <lcd_init+0x300>)
 8001c78:	699b      	ldr	r3, [r3, #24]
 8001c7a:	4a8b      	ldr	r2, [pc, #556]	@ (8001ea8 <lcd_init+0x300>)
 8001c7c:	f043 0308 	orr.w	r3, r3, #8
 8001c80:	6193      	str	r3, [r2, #24]
 8001c82:	4b89      	ldr	r3, [pc, #548]	@ (8001ea8 <lcd_init+0x300>)
 8001c84:	699b      	ldr	r3, [r3, #24]
 8001c86:	f003 0208 	and.w	r2, r3, #8
 8001c8a:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001c8e:	f5a3 73b2 	sub.w	r3, r3, #356	@ 0x164
 8001c92:	601a      	str	r2, [r3, #0]
 8001c94:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001c98:	f5a3 73b2 	sub.w	r3, r3, #356	@ 0x164
 8001c9c:	681b      	ldr	r3, [r3, #0]
    __HAL_RCC_AFIO_CLK_ENABLE();
 8001c9e:	4b82      	ldr	r3, [pc, #520]	@ (8001ea8 <lcd_init+0x300>)
 8001ca0:	699b      	ldr	r3, [r3, #24]
 8001ca2:	4a81      	ldr	r2, [pc, #516]	@ (8001ea8 <lcd_init+0x300>)
 8001ca4:	f043 0301 	orr.w	r3, r3, #1
 8001ca8:	6193      	str	r3, [r2, #24]
 8001caa:	4b7f      	ldr	r3, [pc, #508]	@ (8001ea8 <lcd_init+0x300>)
 8001cac:	699b      	ldr	r3, [r3, #24]
 8001cae:	f003 0201 	and.w	r2, r3, #1
 8001cb2:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001cb6:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 8001cba:	601a      	str	r2, [r3, #0]
 8001cbc:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001cc0:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 8001cc4:	681b      	ldr	r3, [r3, #0]
    __HAL_AFIO_REMAP_SWJ_NOJTAG(); /* ��ֹJTAG, ʹ��SWD, �ͷ�PB3,PB4������������ͨIO�� */
 8001cc6:	4b79      	ldr	r3, [pc, #484]	@ (8001eac <lcd_init+0x304>)
 8001cc8:	685b      	ldr	r3, [r3, #4]
 8001cca:	f8c7 3164 	str.w	r3, [r7, #356]	@ 0x164
 8001cce:	f8d7 3164 	ldr.w	r3, [r7, #356]	@ 0x164
 8001cd2:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8001cd6:	f8c7 3164 	str.w	r3, [r7, #356]	@ 0x164
 8001cda:	f8d7 3164 	ldr.w	r3, [r7, #356]	@ 0x164
 8001cde:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001ce2:	f8c7 3164 	str.w	r3, [r7, #356]	@ 0x164
 8001ce6:	4a71      	ldr	r2, [pc, #452]	@ (8001eac <lcd_init+0x304>)
 8001ce8:	f8d7 3164 	ldr.w	r3, [r7, #356]	@ 0x164
 8001cec:	6053      	str	r3, [r2, #4]
    
    gpio_init_struct.Pin = LCD_BL_GPIO_PIN;
 8001cee:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001cf2:	f8c7 3154 	str.w	r3, [r7, #340]	@ 0x154
    gpio_init_struct.Mode = GPIO_MODE_OUTPUT_PP;               
 8001cf6:	2301      	movs	r3, #1
 8001cf8:	f8c7 3158 	str.w	r3, [r7, #344]	@ 0x158
    gpio_init_struct.Pull = GPIO_PULLUP;                    
 8001cfc:	2301      	movs	r3, #1
 8001cfe:	f8c7 315c 	str.w	r3, [r7, #348]	@ 0x15c
    gpio_init_struct.Speed = GPIO_SPEED_FREQ_HIGH;          
 8001d02:	2303      	movs	r3, #3
 8001d04:	f8c7 3160 	str.w	r3, [r7, #352]	@ 0x160
    HAL_GPIO_Init(LCD_BL_GPIO_PORT, &gpio_init_struct);     /* LCD_BL����ģʽ����(�������) */
 8001d08:	f507 73aa 	add.w	r3, r7, #340	@ 0x154
 8001d0c:	4619      	mov	r1, r3
 8001d0e:	4868      	ldr	r0, [pc, #416]	@ (8001eb0 <lcd_init+0x308>)
 8001d10:	f005 fcda 	bl	80076c8 <HAL_GPIO_Init>

    gpio_init_struct.Pin = LCD_CS_GPIO_PIN;
 8001d14:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001d18:	f8c7 3154 	str.w	r3, [r7, #340]	@ 0x154
    gpio_init_struct.Mode = GPIO_MODE_OUTPUT_PP;            /* ���츴�� */
 8001d1c:	2301      	movs	r3, #1
 8001d1e:	f8c7 3158 	str.w	r3, [r7, #344]	@ 0x158
    gpio_init_struct.Pull = GPIO_PULLUP;                    /* ���� */
 8001d22:	2301      	movs	r3, #1
 8001d24:	f8c7 315c 	str.w	r3, [r7, #348]	@ 0x15c
    gpio_init_struct.Speed = GPIO_SPEED_FREQ_HIGH;          /* ���� */
 8001d28:	2303      	movs	r3, #3
 8001d2a:	f8c7 3160 	str.w	r3, [r7, #352]	@ 0x160
    HAL_GPIO_Init(LCD_CS_GPIO_PORT, &gpio_init_struct);     /* ��ʼ��LCD_CS���� */
 8001d2e:	f507 73aa 	add.w	r3, r7, #340	@ 0x154
 8001d32:	4619      	mov	r1, r3
 8001d34:	485e      	ldr	r0, [pc, #376]	@ (8001eb0 <lcd_init+0x308>)
 8001d36:	f005 fcc7 	bl	80076c8 <HAL_GPIO_Init>

    gpio_init_struct.Pin = LCD_WR_GPIO_PIN;
 8001d3a:	2380      	movs	r3, #128	@ 0x80
 8001d3c:	f8c7 3154 	str.w	r3, [r7, #340]	@ 0x154
    HAL_GPIO_Init(LCD_WR_GPIO_PORT, &gpio_init_struct);     /* ��ʼ��LCD_WR���� */
 8001d40:	f507 73aa 	add.w	r3, r7, #340	@ 0x154
 8001d44:	4619      	mov	r1, r3
 8001d46:	485a      	ldr	r0, [pc, #360]	@ (8001eb0 <lcd_init+0x308>)
 8001d48:	f005 fcbe 	bl	80076c8 <HAL_GPIO_Init>

    gpio_init_struct.Pin = LCD_RD_GPIO_PIN;
 8001d4c:	2340      	movs	r3, #64	@ 0x40
 8001d4e:	f8c7 3154 	str.w	r3, [r7, #340]	@ 0x154
    HAL_GPIO_Init(LCD_RD_GPIO_PORT, &gpio_init_struct);     /* ��ʼ��LCD_RD���� */
 8001d52:	f507 73aa 	add.w	r3, r7, #340	@ 0x154
 8001d56:	4619      	mov	r1, r3
 8001d58:	4855      	ldr	r0, [pc, #340]	@ (8001eb0 <lcd_init+0x308>)
 8001d5a:	f005 fcb5 	bl	80076c8 <HAL_GPIO_Init>

    gpio_init_struct.Pin = LCD_RS_GPIO_PIN;
 8001d5e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001d62:	f8c7 3154 	str.w	r3, [r7, #340]	@ 0x154
    HAL_GPIO_Init(LCD_RS_GPIO_PORT, &gpio_init_struct);     /* ��ʼ��LCD_RS���� */
 8001d66:	f507 73aa 	add.w	r3, r7, #340	@ 0x154
 8001d6a:	4619      	mov	r1, r3
 8001d6c:	4850      	ldr	r0, [pc, #320]	@ (8001eb0 <lcd_init+0x308>)
 8001d6e:	f005 fcab 	bl	80076c8 <HAL_GPIO_Init>

    gpio_init_struct.Pin = LCD_DATA_GPIO_PIN;
 8001d72:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001d76:	f8c7 3154 	str.w	r3, [r7, #340]	@ 0x154
    gpio_init_struct.Mode = GPIO_MODE_OUTPUT_PP;            /* ������� */
 8001d7a:	2301      	movs	r3, #1
 8001d7c:	f8c7 3158 	str.w	r3, [r7, #344]	@ 0x158
    HAL_GPIO_Init(LCD_DATA_GPIO_PORT, &gpio_init_struct);   /* LCD_DATA����ģʽ���� */
 8001d80:	f507 73aa 	add.w	r3, r7, #340	@ 0x154
 8001d84:	4619      	mov	r1, r3
 8001d86:	484b      	ldr	r0, [pc, #300]	@ (8001eb4 <lcd_init+0x30c>)
 8001d88:	f005 fc9e 	bl	80076c8 <HAL_GPIO_Init>
    LCD_WR(1);                  /* WR Ĭ�ϸߵ�ƽ */
 8001d8c:	4b48      	ldr	r3, [pc, #288]	@ (8001eb0 <lcd_init+0x308>)
 8001d8e:	2280      	movs	r2, #128	@ 0x80
 8001d90:	611a      	str	r2, [r3, #16]
    LCD_RD(1);                  /* RD Ĭ�ϸߵ�ƽ */
 8001d92:	4b47      	ldr	r3, [pc, #284]	@ (8001eb0 <lcd_init+0x308>)
 8001d94:	2240      	movs	r2, #64	@ 0x40
 8001d96:	611a      	str	r2, [r3, #16]
    LCD_CS(1);                  /* CS Ĭ�ϸߵ�ƽ */
 8001d98:	4b45      	ldr	r3, [pc, #276]	@ (8001eb0 <lcd_init+0x308>)
 8001d9a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001d9e:	611a      	str	r2, [r3, #16]
    LCD_RS(1);                  /* RS Ĭ�ϸߵ�ƽ */
 8001da0:	4b43      	ldr	r3, [pc, #268]	@ (8001eb0 <lcd_init+0x308>)
 8001da2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001da6:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(0XFFFF);       /* DATA Ĭ�ϸߵ�ƽ */
 8001da8:	4b42      	ldr	r3, [pc, #264]	@ (8001eb4 <lcd_init+0x30c>)
 8001daa:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001dae:	60da      	str	r2, [r3, #12]

    lcd_opt_delay(0X1FFFF);
 8001db0:	4841      	ldr	r0, [pc, #260]	@ (8001eb8 <lcd_init+0x310>)
 8001db2:	f7fe fe21 	bl	80009f8 <lcd_opt_delay>
 8001db6:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001dba:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8001dbe:	22d3      	movs	r2, #211	@ 0xd3
 8001dc0:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8001dc2:	4b3b      	ldr	r3, [pc, #236]	@ (8001eb0 <lcd_init+0x308>)
 8001dc4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001dc8:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8001dca:	4b39      	ldr	r3, [pc, #228]	@ (8001eb0 <lcd_init+0x308>)
 8001dcc:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001dd0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8001dd2:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001dd6:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8001dda:	881b      	ldrh	r3, [r3, #0]
 8001ddc:	b29a      	uxth	r2, r3
 8001dde:	4b35      	ldr	r3, [pc, #212]	@ (8001eb4 <lcd_init+0x30c>)
 8001de0:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8001de2:	4b33      	ldr	r3, [pc, #204]	@ (8001eb0 <lcd_init+0x308>)
 8001de4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001de8:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8001dea:	4b31      	ldr	r3, [pc, #196]	@ (8001eb0 <lcd_init+0x308>)
 8001dec:	2280      	movs	r2, #128	@ 0x80
 8001dee:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8001df0:	4b2f      	ldr	r3, [pc, #188]	@ (8001eb0 <lcd_init+0x308>)
 8001df2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001df6:	611a      	str	r2, [r3, #16]
}
 8001df8:	bf00      	nop

    /* ����9341 ID�Ķ�ȡ */
    lcd_wr_regno(0XD3);
    lcddev.id = lcd_rd_data();  /* dummy read */
 8001dfa:	f7fe fe0d 	bl	8000a18 <lcd_rd_data>
 8001dfe:	4603      	mov	r3, r0
 8001e00:	461a      	mov	r2, r3
 8001e02:	4b2e      	ldr	r3, [pc, #184]	@ (8001ebc <lcd_init+0x314>)
 8001e04:	809a      	strh	r2, [r3, #4]
    lcddev.id = lcd_rd_data();  /* ����0X00 */
 8001e06:	f7fe fe07 	bl	8000a18 <lcd_rd_data>
 8001e0a:	4603      	mov	r3, r0
 8001e0c:	461a      	mov	r2, r3
 8001e0e:	4b2b      	ldr	r3, [pc, #172]	@ (8001ebc <lcd_init+0x314>)
 8001e10:	809a      	strh	r2, [r3, #4]
    lcddev.id = lcd_rd_data();  /* ��ȡ0X93 */
 8001e12:	f7fe fe01 	bl	8000a18 <lcd_rd_data>
 8001e16:	4603      	mov	r3, r0
 8001e18:	461a      	mov	r2, r3
 8001e1a:	4b28      	ldr	r3, [pc, #160]	@ (8001ebc <lcd_init+0x314>)
 8001e1c:	809a      	strh	r2, [r3, #4]
    lcddev.id <<= 8;
 8001e1e:	4b27      	ldr	r3, [pc, #156]	@ (8001ebc <lcd_init+0x314>)
 8001e20:	889b      	ldrh	r3, [r3, #4]
 8001e22:	021b      	lsls	r3, r3, #8
 8001e24:	b29a      	uxth	r2, r3
 8001e26:	4b25      	ldr	r3, [pc, #148]	@ (8001ebc <lcd_init+0x314>)
 8001e28:	809a      	strh	r2, [r3, #4]
    lcddev.id |= lcd_rd_data(); /* ��ȡ0X41 */
 8001e2a:	f7fe fdf5 	bl	8000a18 <lcd_rd_data>
 8001e2e:	4603      	mov	r3, r0
 8001e30:	461a      	mov	r2, r3
 8001e32:	4b22      	ldr	r3, [pc, #136]	@ (8001ebc <lcd_init+0x314>)
 8001e34:	889b      	ldrh	r3, [r3, #4]
 8001e36:	4313      	orrs	r3, r2
 8001e38:	b29a      	uxth	r2, r3
 8001e3a:	4b20      	ldr	r3, [pc, #128]	@ (8001ebc <lcd_init+0x314>)
 8001e3c:	809a      	strh	r2, [r3, #4]

    if (lcddev.id != 0X9341)    /* ���� 9341 , ���Կ����ǲ��� ST7789 */
 8001e3e:	4b1f      	ldr	r3, [pc, #124]	@ (8001ebc <lcd_init+0x314>)
 8001e40:	889b      	ldrh	r3, [r3, #4]
 8001e42:	f249 3241 	movw	r2, #37697	@ 0x9341
 8001e46:	4293      	cmp	r3, r2
 8001e48:	f000 820e 	beq.w	8002268 <lcd_init+0x6c0>
 8001e4c:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001e50:	f5a3 73a5 	sub.w	r3, r3, #330	@ 0x14a
 8001e54:	2204      	movs	r2, #4
 8001e56:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8001e58:	4b15      	ldr	r3, [pc, #84]	@ (8001eb0 <lcd_init+0x308>)
 8001e5a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001e5e:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8001e60:	4b13      	ldr	r3, [pc, #76]	@ (8001eb0 <lcd_init+0x308>)
 8001e62:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001e66:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8001e68:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001e6c:	f5a3 73a5 	sub.w	r3, r3, #330	@ 0x14a
 8001e70:	881b      	ldrh	r3, [r3, #0]
 8001e72:	b29a      	uxth	r2, r3
 8001e74:	4b0f      	ldr	r3, [pc, #60]	@ (8001eb4 <lcd_init+0x30c>)
 8001e76:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8001e78:	4b0d      	ldr	r3, [pc, #52]	@ (8001eb0 <lcd_init+0x308>)
 8001e7a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001e7e:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8001e80:	4b0b      	ldr	r3, [pc, #44]	@ (8001eb0 <lcd_init+0x308>)
 8001e82:	2280      	movs	r2, #128	@ 0x80
 8001e84:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8001e86:	4b0a      	ldr	r3, [pc, #40]	@ (8001eb0 <lcd_init+0x308>)
 8001e88:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001e8c:	611a      	str	r2, [r3, #16]
}
 8001e8e:	bf00      	nop
    {
        lcd_wr_regno(0X04);
        lcddev.id = lcd_rd_data();      /* dummy read */
 8001e90:	f7fe fdc2 	bl	8000a18 <lcd_rd_data>
 8001e94:	4603      	mov	r3, r0
 8001e96:	461a      	mov	r2, r3
 8001e98:	4b08      	ldr	r3, [pc, #32]	@ (8001ebc <lcd_init+0x314>)
 8001e9a:	809a      	strh	r2, [r3, #4]
        lcddev.id = lcd_rd_data();      /* ����0X85 */
 8001e9c:	f7fe fdbc 	bl	8000a18 <lcd_rd_data>
 8001ea0:	4603      	mov	r3, r0
 8001ea2:	461a      	mov	r2, r3
 8001ea4:	e00c      	b.n	8001ec0 <lcd_init+0x318>
 8001ea6:	bf00      	nop
 8001ea8:	40021000 	.word	0x40021000
 8001eac:	40010000 	.word	0x40010000
 8001eb0:	40011000 	.word	0x40011000
 8001eb4:	40010c00 	.word	0x40010c00
 8001eb8:	0001ffff 	.word	0x0001ffff
 8001ebc:	2000002c 	.word	0x2000002c
 8001ec0:	4bb1      	ldr	r3, [pc, #708]	@ (8002188 <lcd_init+0x5e0>)
 8001ec2:	809a      	strh	r2, [r3, #4]
        lcddev.id = lcd_rd_data();      /* ��ȡ0X85 */
 8001ec4:	f7fe fda8 	bl	8000a18 <lcd_rd_data>
 8001ec8:	4603      	mov	r3, r0
 8001eca:	461a      	mov	r2, r3
 8001ecc:	4bae      	ldr	r3, [pc, #696]	@ (8002188 <lcd_init+0x5e0>)
 8001ece:	809a      	strh	r2, [r3, #4]
        lcddev.id <<= 8;
 8001ed0:	4bad      	ldr	r3, [pc, #692]	@ (8002188 <lcd_init+0x5e0>)
 8001ed2:	889b      	ldrh	r3, [r3, #4]
 8001ed4:	021b      	lsls	r3, r3, #8
 8001ed6:	b29a      	uxth	r2, r3
 8001ed8:	4bab      	ldr	r3, [pc, #684]	@ (8002188 <lcd_init+0x5e0>)
 8001eda:	809a      	strh	r2, [r3, #4]
        lcddev.id |= lcd_rd_data();     /* ��ȡ0X52 */
 8001edc:	f7fe fd9c 	bl	8000a18 <lcd_rd_data>
 8001ee0:	4603      	mov	r3, r0
 8001ee2:	461a      	mov	r2, r3
 8001ee4:	4ba8      	ldr	r3, [pc, #672]	@ (8002188 <lcd_init+0x5e0>)
 8001ee6:	889b      	ldrh	r3, [r3, #4]
 8001ee8:	4313      	orrs	r3, r2
 8001eea:	b29a      	uxth	r2, r3
 8001eec:	4ba6      	ldr	r3, [pc, #664]	@ (8002188 <lcd_init+0x5e0>)
 8001eee:	809a      	strh	r2, [r3, #4]
        
        if (lcddev.id == 0X8552)        /* ��8552��IDת����7789 */
 8001ef0:	4ba5      	ldr	r3, [pc, #660]	@ (8002188 <lcd_init+0x5e0>)
 8001ef2:	889b      	ldrh	r3, [r3, #4]
 8001ef4:	f248 5252 	movw	r2, #34130	@ 0x8552
 8001ef8:	4293      	cmp	r3, r2
 8001efa:	d103      	bne.n	8001f04 <lcd_init+0x35c>
        {
            lcddev.id = 0x7789;
 8001efc:	4ba2      	ldr	r3, [pc, #648]	@ (8002188 <lcd_init+0x5e0>)
 8001efe:	f247 7289 	movw	r2, #30601	@ 0x7789
 8001f02:	809a      	strh	r2, [r3, #4]
        }

        if (lcddev.id != 0x7789)        /* Ҳ����ST7789, �����ǲ��� NT35310 */
 8001f04:	4ba0      	ldr	r3, [pc, #640]	@ (8002188 <lcd_init+0x5e0>)
 8001f06:	889b      	ldrh	r3, [r3, #4]
 8001f08:	f247 7289 	movw	r2, #30601	@ 0x7789
 8001f0c:	4293      	cmp	r3, r2
 8001f0e:	f000 81ab 	beq.w	8002268 <lcd_init+0x6c0>
 8001f12:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001f16:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 8001f1a:	22d4      	movs	r2, #212	@ 0xd4
 8001f1c:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8001f1e:	4b9b      	ldr	r3, [pc, #620]	@ (800218c <lcd_init+0x5e4>)
 8001f20:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001f24:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8001f26:	4b99      	ldr	r3, [pc, #612]	@ (800218c <lcd_init+0x5e4>)
 8001f28:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001f2c:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8001f2e:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001f32:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 8001f36:	881b      	ldrh	r3, [r3, #0]
 8001f38:	b29a      	uxth	r2, r3
 8001f3a:	4b95      	ldr	r3, [pc, #596]	@ (8002190 <lcd_init+0x5e8>)
 8001f3c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8001f3e:	4b93      	ldr	r3, [pc, #588]	@ (800218c <lcd_init+0x5e4>)
 8001f40:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001f44:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8001f46:	4b91      	ldr	r3, [pc, #580]	@ (800218c <lcd_init+0x5e4>)
 8001f48:	2280      	movs	r2, #128	@ 0x80
 8001f4a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8001f4c:	4b8f      	ldr	r3, [pc, #572]	@ (800218c <lcd_init+0x5e4>)
 8001f4e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001f52:	611a      	str	r2, [r3, #16]
}
 8001f54:	bf00      	nop
        {
            lcd_wr_regno(0xD4);
            lcddev.id = lcd_rd_data();  /* dummy read */
 8001f56:	f7fe fd5f 	bl	8000a18 <lcd_rd_data>
 8001f5a:	4603      	mov	r3, r0
 8001f5c:	461a      	mov	r2, r3
 8001f5e:	4b8a      	ldr	r3, [pc, #552]	@ (8002188 <lcd_init+0x5e0>)
 8001f60:	809a      	strh	r2, [r3, #4]
            lcddev.id = lcd_rd_data();  /* ����0x01 */
 8001f62:	f7fe fd59 	bl	8000a18 <lcd_rd_data>
 8001f66:	4603      	mov	r3, r0
 8001f68:	461a      	mov	r2, r3
 8001f6a:	4b87      	ldr	r3, [pc, #540]	@ (8002188 <lcd_init+0x5e0>)
 8001f6c:	809a      	strh	r2, [r3, #4]
            lcddev.id = lcd_rd_data();  /* ����0x53 */
 8001f6e:	f7fe fd53 	bl	8000a18 <lcd_rd_data>
 8001f72:	4603      	mov	r3, r0
 8001f74:	461a      	mov	r2, r3
 8001f76:	4b84      	ldr	r3, [pc, #528]	@ (8002188 <lcd_init+0x5e0>)
 8001f78:	809a      	strh	r2, [r3, #4]
            lcddev.id <<= 8;
 8001f7a:	4b83      	ldr	r3, [pc, #524]	@ (8002188 <lcd_init+0x5e0>)
 8001f7c:	889b      	ldrh	r3, [r3, #4]
 8001f7e:	021b      	lsls	r3, r3, #8
 8001f80:	b29a      	uxth	r2, r3
 8001f82:	4b81      	ldr	r3, [pc, #516]	@ (8002188 <lcd_init+0x5e0>)
 8001f84:	809a      	strh	r2, [r3, #4]
            lcddev.id |= lcd_rd_data(); /* �������0x10 */
 8001f86:	f7fe fd47 	bl	8000a18 <lcd_rd_data>
 8001f8a:	4603      	mov	r3, r0
 8001f8c:	461a      	mov	r2, r3
 8001f8e:	4b7e      	ldr	r3, [pc, #504]	@ (8002188 <lcd_init+0x5e0>)
 8001f90:	889b      	ldrh	r3, [r3, #4]
 8001f92:	4313      	orrs	r3, r2
 8001f94:	b29a      	uxth	r2, r3
 8001f96:	4b7c      	ldr	r3, [pc, #496]	@ (8002188 <lcd_init+0x5e0>)
 8001f98:	809a      	strh	r2, [r3, #4]

            if (lcddev.id != 0x5310)    /* Ҳ����NT35310,���Կ����ǲ���ST7796 */
 8001f9a:	4b7b      	ldr	r3, [pc, #492]	@ (8002188 <lcd_init+0x5e0>)
 8001f9c:	889b      	ldrh	r3, [r3, #4]
 8001f9e:	f245 3210 	movw	r2, #21264	@ 0x5310
 8001fa2:	4293      	cmp	r3, r2
 8001fa4:	f000 8160 	beq.w	8002268 <lcd_init+0x6c0>
 8001fa8:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001fac:	f5a3 73a3 	sub.w	r3, r3, #326	@ 0x146
 8001fb0:	22d3      	movs	r2, #211	@ 0xd3
 8001fb2:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8001fb4:	4b75      	ldr	r3, [pc, #468]	@ (800218c <lcd_init+0x5e4>)
 8001fb6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001fba:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8001fbc:	4b73      	ldr	r3, [pc, #460]	@ (800218c <lcd_init+0x5e4>)
 8001fbe:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001fc2:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8001fc4:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8001fc8:	f5a3 73a3 	sub.w	r3, r3, #326	@ 0x146
 8001fcc:	881b      	ldrh	r3, [r3, #0]
 8001fce:	b29a      	uxth	r2, r3
 8001fd0:	4b6f      	ldr	r3, [pc, #444]	@ (8002190 <lcd_init+0x5e8>)
 8001fd2:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8001fd4:	4b6d      	ldr	r3, [pc, #436]	@ (800218c <lcd_init+0x5e4>)
 8001fd6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001fda:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8001fdc:	4b6b      	ldr	r3, [pc, #428]	@ (800218c <lcd_init+0x5e4>)
 8001fde:	2280      	movs	r2, #128	@ 0x80
 8001fe0:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8001fe2:	4b6a      	ldr	r3, [pc, #424]	@ (800218c <lcd_init+0x5e4>)
 8001fe4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001fe8:	611a      	str	r2, [r3, #16]
}
 8001fea:	bf00      	nop
            {
                lcd_wr_regno(0XD3);
                lcddev.id = lcd_rd_data();  /* dummy read */
 8001fec:	f7fe fd14 	bl	8000a18 <lcd_rd_data>
 8001ff0:	4603      	mov	r3, r0
 8001ff2:	461a      	mov	r2, r3
 8001ff4:	4b64      	ldr	r3, [pc, #400]	@ (8002188 <lcd_init+0x5e0>)
 8001ff6:	809a      	strh	r2, [r3, #4]
                lcddev.id = lcd_rd_data();  /* ����0X00 */
 8001ff8:	f7fe fd0e 	bl	8000a18 <lcd_rd_data>
 8001ffc:	4603      	mov	r3, r0
 8001ffe:	461a      	mov	r2, r3
 8002000:	4b61      	ldr	r3, [pc, #388]	@ (8002188 <lcd_init+0x5e0>)
 8002002:	809a      	strh	r2, [r3, #4]
                lcddev.id = lcd_rd_data();  /* ��ȡ0X77 */
 8002004:	f7fe fd08 	bl	8000a18 <lcd_rd_data>
 8002008:	4603      	mov	r3, r0
 800200a:	461a      	mov	r2, r3
 800200c:	4b5e      	ldr	r3, [pc, #376]	@ (8002188 <lcd_init+0x5e0>)
 800200e:	809a      	strh	r2, [r3, #4]
                lcddev.id <<= 8;
 8002010:	4b5d      	ldr	r3, [pc, #372]	@ (8002188 <lcd_init+0x5e0>)
 8002012:	889b      	ldrh	r3, [r3, #4]
 8002014:	021b      	lsls	r3, r3, #8
 8002016:	b29a      	uxth	r2, r3
 8002018:	4b5b      	ldr	r3, [pc, #364]	@ (8002188 <lcd_init+0x5e0>)
 800201a:	809a      	strh	r2, [r3, #4]
                lcddev.id |= lcd_rd_data(); /* ��ȡ0X96 */
 800201c:	f7fe fcfc 	bl	8000a18 <lcd_rd_data>
 8002020:	4603      	mov	r3, r0
 8002022:	461a      	mov	r2, r3
 8002024:	4b58      	ldr	r3, [pc, #352]	@ (8002188 <lcd_init+0x5e0>)
 8002026:	889b      	ldrh	r3, [r3, #4]
 8002028:	4313      	orrs	r3, r2
 800202a:	b29a      	uxth	r2, r3
 800202c:	4b56      	ldr	r3, [pc, #344]	@ (8002188 <lcd_init+0x5e0>)
 800202e:	809a      	strh	r2, [r3, #4]
                
                if (lcddev.id != 0x7796)    /* Ҳ����ST7796,���Կ����ǲ���NT35510 */
 8002030:	4b55      	ldr	r3, [pc, #340]	@ (8002188 <lcd_init+0x5e0>)
 8002032:	889b      	ldrh	r3, [r3, #4]
 8002034:	f247 7296 	movw	r2, #30614	@ 0x7796
 8002038:	4293      	cmp	r3, r2
 800203a:	f000 8115 	beq.w	8002268 <lcd_init+0x6c0>
                {
                    /* ������Կ�������ṩ�� */
                    lcd_write_reg(0xF000, 0x0055);
 800203e:	2155      	movs	r1, #85	@ 0x55
 8002040:	f44f 4070 	mov.w	r0, #61440	@ 0xf000
 8002044:	f7fe fc96 	bl	8000974 <lcd_write_reg>
                    lcd_write_reg(0xF001, 0x00AA);
 8002048:	21aa      	movs	r1, #170	@ 0xaa
 800204a:	f24f 0001 	movw	r0, #61441	@ 0xf001
 800204e:	f7fe fc91 	bl	8000974 <lcd_write_reg>
                    lcd_write_reg(0xF002, 0x0052);
 8002052:	2152      	movs	r1, #82	@ 0x52
 8002054:	f24f 0002 	movw	r0, #61442	@ 0xf002
 8002058:	f7fe fc8c 	bl	8000974 <lcd_write_reg>
                    lcd_write_reg(0xF003, 0x0008);
 800205c:	2108      	movs	r1, #8
 800205e:	f24f 0003 	movw	r0, #61443	@ 0xf003
 8002062:	f7fe fc87 	bl	8000974 <lcd_write_reg>
                    lcd_write_reg(0xF004, 0x0001);
 8002066:	2101      	movs	r1, #1
 8002068:	f24f 0004 	movw	r0, #61444	@ 0xf004
 800206c:	f7fe fc82 	bl	8000974 <lcd_write_reg>
 8002070:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002074:	f5a3 73a1 	sub.w	r3, r3, #322	@ 0x142
 8002078:	f44f 4245 	mov.w	r2, #50432	@ 0xc500
 800207c:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800207e:	4b43      	ldr	r3, [pc, #268]	@ (800218c <lcd_init+0x5e4>)
 8002080:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002084:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002086:	4b41      	ldr	r3, [pc, #260]	@ (800218c <lcd_init+0x5e4>)
 8002088:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800208c:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800208e:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002092:	f5a3 73a1 	sub.w	r3, r3, #322	@ 0x142
 8002096:	881b      	ldrh	r3, [r3, #0]
 8002098:	b29a      	uxth	r2, r3
 800209a:	4b3d      	ldr	r3, [pc, #244]	@ (8002190 <lcd_init+0x5e8>)
 800209c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800209e:	4b3b      	ldr	r3, [pc, #236]	@ (800218c <lcd_init+0x5e4>)
 80020a0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80020a4:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80020a6:	4b39      	ldr	r3, [pc, #228]	@ (800218c <lcd_init+0x5e4>)
 80020a8:	2280      	movs	r2, #128	@ 0x80
 80020aa:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80020ac:	4b37      	ldr	r3, [pc, #220]	@ (800218c <lcd_init+0x5e4>)
 80020ae:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80020b2:	611a      	str	r2, [r3, #16]
}
 80020b4:	bf00      	nop

                    lcd_wr_regno(0xC500);       /* ��ȡID�Ͱ�λ */
                    lcddev.id = lcd_rd_data();  /* ����0x55 */
 80020b6:	f7fe fcaf 	bl	8000a18 <lcd_rd_data>
 80020ba:	4603      	mov	r3, r0
 80020bc:	461a      	mov	r2, r3
 80020be:	4b32      	ldr	r3, [pc, #200]	@ (8002188 <lcd_init+0x5e0>)
 80020c0:	809a      	strh	r2, [r3, #4]
                    lcddev.id <<= 8;
 80020c2:	4b31      	ldr	r3, [pc, #196]	@ (8002188 <lcd_init+0x5e0>)
 80020c4:	889b      	ldrh	r3, [r3, #4]
 80020c6:	021b      	lsls	r3, r3, #8
 80020c8:	b29a      	uxth	r2, r3
 80020ca:	4b2f      	ldr	r3, [pc, #188]	@ (8002188 <lcd_init+0x5e0>)
 80020cc:	809a      	strh	r2, [r3, #4]
 80020ce:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80020d2:	f5a3 73a2 	sub.w	r3, r3, #324	@ 0x144
 80020d6:	f24c 5201 	movw	r2, #50433	@ 0xc501
 80020da:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80020dc:	4b2b      	ldr	r3, [pc, #172]	@ (800218c <lcd_init+0x5e4>)
 80020de:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80020e2:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80020e4:	4b29      	ldr	r3, [pc, #164]	@ (800218c <lcd_init+0x5e4>)
 80020e6:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80020ea:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80020ec:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80020f0:	f5a3 73a2 	sub.w	r3, r3, #324	@ 0x144
 80020f4:	881b      	ldrh	r3, [r3, #0]
 80020f6:	b29a      	uxth	r2, r3
 80020f8:	4b25      	ldr	r3, [pc, #148]	@ (8002190 <lcd_init+0x5e8>)
 80020fa:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80020fc:	4b23      	ldr	r3, [pc, #140]	@ (800218c <lcd_init+0x5e4>)
 80020fe:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002102:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002104:	4b21      	ldr	r3, [pc, #132]	@ (800218c <lcd_init+0x5e4>)
 8002106:	2280      	movs	r2, #128	@ 0x80
 8002108:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800210a:	4b20      	ldr	r3, [pc, #128]	@ (800218c <lcd_init+0x5e4>)
 800210c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002110:	611a      	str	r2, [r3, #16]
}
 8002112:	bf00      	nop

                    lcd_wr_regno(0xC501);       /* ��ȡID�߰�λ */
                    lcddev.id |= lcd_rd_data(); /* ����0x10 */
 8002114:	f7fe fc80 	bl	8000a18 <lcd_rd_data>
 8002118:	4603      	mov	r3, r0
 800211a:	461a      	mov	r2, r3
 800211c:	4b1a      	ldr	r3, [pc, #104]	@ (8002188 <lcd_init+0x5e0>)
 800211e:	889b      	ldrh	r3, [r3, #4]
 8002120:	4313      	orrs	r3, r2
 8002122:	b29a      	uxth	r2, r3
 8002124:	4b18      	ldr	r3, [pc, #96]	@ (8002188 <lcd_init+0x5e0>)
 8002126:	809a      	strh	r2, [r3, #4]
                    
                    //delay_ms(5);                /* �ȴ�5ms, ��Ϊ0XC501ָ���1963��˵���������λָ��, �ȴ�5ms��1963��λ����ٲ��� */

                    if (lcddev.id != 0x5510)    /* Ҳ����NT5510,���Կ����ǲ���ILI9806 */
 8002128:	4b17      	ldr	r3, [pc, #92]	@ (8002188 <lcd_init+0x5e0>)
 800212a:	889b      	ldrh	r3, [r3, #4]
 800212c:	f245 5210 	movw	r2, #21776	@ 0x5510
 8002130:	4293      	cmp	r3, r2
 8002132:	f000 8099 	beq.w	8002268 <lcd_init+0x6c0>
 8002136:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 800213a:	f5a3 73a0 	sub.w	r3, r3, #320	@ 0x140
 800213e:	22d3      	movs	r2, #211	@ 0xd3
 8002140:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002142:	4b12      	ldr	r3, [pc, #72]	@ (800218c <lcd_init+0x5e4>)
 8002144:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002148:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800214a:	4b10      	ldr	r3, [pc, #64]	@ (800218c <lcd_init+0x5e4>)
 800214c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002150:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002152:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002156:	f5a3 73a0 	sub.w	r3, r3, #320	@ 0x140
 800215a:	881b      	ldrh	r3, [r3, #0]
 800215c:	b29a      	uxth	r2, r3
 800215e:	4b0c      	ldr	r3, [pc, #48]	@ (8002190 <lcd_init+0x5e8>)
 8002160:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002162:	4b0a      	ldr	r3, [pc, #40]	@ (800218c <lcd_init+0x5e4>)
 8002164:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002168:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800216a:	4b08      	ldr	r3, [pc, #32]	@ (800218c <lcd_init+0x5e4>)
 800216c:	2280      	movs	r2, #128	@ 0x80
 800216e:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002170:	4b06      	ldr	r3, [pc, #24]	@ (800218c <lcd_init+0x5e4>)
 8002172:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002176:	611a      	str	r2, [r3, #16]
}
 8002178:	bf00      	nop
                    {
                        lcd_wr_regno(0XD3);
                        lcddev.id = lcd_rd_data();  /* dummy read */
 800217a:	f7fe fc4d 	bl	8000a18 <lcd_rd_data>
 800217e:	4603      	mov	r3, r0
 8002180:	461a      	mov	r2, r3
 8002182:	4b01      	ldr	r3, [pc, #4]	@ (8002188 <lcd_init+0x5e0>)
 8002184:	809a      	strh	r2, [r3, #4]
 8002186:	e005      	b.n	8002194 <lcd_init+0x5ec>
 8002188:	2000002c 	.word	0x2000002c
 800218c:	40011000 	.word	0x40011000
 8002190:	40010c00 	.word	0x40010c00
                        lcddev.id = lcd_rd_data();  /* ����0X00 */
 8002194:	f7fe fc40 	bl	8000a18 <lcd_rd_data>
 8002198:	4603      	mov	r3, r0
 800219a:	461a      	mov	r2, r3
 800219c:	4bb2      	ldr	r3, [pc, #712]	@ (8002468 <lcd_init+0x8c0>)
 800219e:	809a      	strh	r2, [r3, #4]
                        lcddev.id = lcd_rd_data();  /* ����0X98 */
 80021a0:	f7fe fc3a 	bl	8000a18 <lcd_rd_data>
 80021a4:	4603      	mov	r3, r0
 80021a6:	461a      	mov	r2, r3
 80021a8:	4baf      	ldr	r3, [pc, #700]	@ (8002468 <lcd_init+0x8c0>)
 80021aa:	809a      	strh	r2, [r3, #4]
                        lcddev.id <<= 8;
 80021ac:	4bae      	ldr	r3, [pc, #696]	@ (8002468 <lcd_init+0x8c0>)
 80021ae:	889b      	ldrh	r3, [r3, #4]
 80021b0:	021b      	lsls	r3, r3, #8
 80021b2:	b29a      	uxth	r2, r3
 80021b4:	4bac      	ldr	r3, [pc, #688]	@ (8002468 <lcd_init+0x8c0>)
 80021b6:	809a      	strh	r2, [r3, #4]
                        lcddev.id |= lcd_rd_data(); /* ����0X06 */
 80021b8:	f7fe fc2e 	bl	8000a18 <lcd_rd_data>
 80021bc:	4603      	mov	r3, r0
 80021be:	461a      	mov	r2, r3
 80021c0:	4ba9      	ldr	r3, [pc, #676]	@ (8002468 <lcd_init+0x8c0>)
 80021c2:	889b      	ldrh	r3, [r3, #4]
 80021c4:	4313      	orrs	r3, r2
 80021c6:	b29a      	uxth	r2, r3
 80021c8:	4ba7      	ldr	r3, [pc, #668]	@ (8002468 <lcd_init+0x8c0>)
 80021ca:	809a      	strh	r2, [r3, #4]
                        
                        if (lcddev.id != 0x9806)    /* Ҳ����ILI9806,���Կ����ǲ���SSD1963 */
 80021cc:	4ba6      	ldr	r3, [pc, #664]	@ (8002468 <lcd_init+0x8c0>)
 80021ce:	889b      	ldrh	r3, [r3, #4]
 80021d0:	f649 0206 	movw	r2, #38918	@ 0x9806
 80021d4:	4293      	cmp	r3, r2
 80021d6:	d047      	beq.n	8002268 <lcd_init+0x6c0>
 80021d8:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80021dc:	f5a3 739f 	sub.w	r3, r3, #318	@ 0x13e
 80021e0:	22a1      	movs	r2, #161	@ 0xa1
 80021e2:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80021e4:	4ba1      	ldr	r3, [pc, #644]	@ (800246c <lcd_init+0x8c4>)
 80021e6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80021ea:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80021ec:	4b9f      	ldr	r3, [pc, #636]	@ (800246c <lcd_init+0x8c4>)
 80021ee:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80021f2:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80021f4:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80021f8:	f5a3 739f 	sub.w	r3, r3, #318	@ 0x13e
 80021fc:	881b      	ldrh	r3, [r3, #0]
 80021fe:	b29a      	uxth	r2, r3
 8002200:	4b9b      	ldr	r3, [pc, #620]	@ (8002470 <lcd_init+0x8c8>)
 8002202:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002204:	4b99      	ldr	r3, [pc, #612]	@ (800246c <lcd_init+0x8c4>)
 8002206:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800220a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800220c:	4b97      	ldr	r3, [pc, #604]	@ (800246c <lcd_init+0x8c4>)
 800220e:	2280      	movs	r2, #128	@ 0x80
 8002210:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002212:	4b96      	ldr	r3, [pc, #600]	@ (800246c <lcd_init+0x8c4>)
 8002214:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002218:	611a      	str	r2, [r3, #16]
}
 800221a:	bf00      	nop
                        {
                            lcd_wr_regno(0xA1);
                            lcddev.id = lcd_rd_data();
 800221c:	f7fe fbfc 	bl	8000a18 <lcd_rd_data>
 8002220:	4603      	mov	r3, r0
 8002222:	461a      	mov	r2, r3
 8002224:	4b90      	ldr	r3, [pc, #576]	@ (8002468 <lcd_init+0x8c0>)
 8002226:	809a      	strh	r2, [r3, #4]
                            lcddev.id = lcd_rd_data();  /* ����0x57 */
 8002228:	f7fe fbf6 	bl	8000a18 <lcd_rd_data>
 800222c:	4603      	mov	r3, r0
 800222e:	461a      	mov	r2, r3
 8002230:	4b8d      	ldr	r3, [pc, #564]	@ (8002468 <lcd_init+0x8c0>)
 8002232:	809a      	strh	r2, [r3, #4]
                            lcddev.id <<= 8;
 8002234:	4b8c      	ldr	r3, [pc, #560]	@ (8002468 <lcd_init+0x8c0>)
 8002236:	889b      	ldrh	r3, [r3, #4]
 8002238:	021b      	lsls	r3, r3, #8
 800223a:	b29a      	uxth	r2, r3
 800223c:	4b8a      	ldr	r3, [pc, #552]	@ (8002468 <lcd_init+0x8c0>)
 800223e:	809a      	strh	r2, [r3, #4]
                            lcddev.id |= lcd_rd_data(); /* ����0x61 */
 8002240:	f7fe fbea 	bl	8000a18 <lcd_rd_data>
 8002244:	4603      	mov	r3, r0
 8002246:	461a      	mov	r2, r3
 8002248:	4b87      	ldr	r3, [pc, #540]	@ (8002468 <lcd_init+0x8c0>)
 800224a:	889b      	ldrh	r3, [r3, #4]
 800224c:	4313      	orrs	r3, r2
 800224e:	b29a      	uxth	r2, r3
 8002250:	4b85      	ldr	r3, [pc, #532]	@ (8002468 <lcd_init+0x8c0>)
 8002252:	809a      	strh	r2, [r3, #4]

                            if (lcddev.id == 0x5761) lcddev.id = 0x1963; /* SSD1963���ص�ID��5761H,Ϊ��������,����ǿ������Ϊ1963 */
 8002254:	4b84      	ldr	r3, [pc, #528]	@ (8002468 <lcd_init+0x8c0>)
 8002256:	889b      	ldrh	r3, [r3, #4]
 8002258:	f245 7261 	movw	r2, #22369	@ 0x5761
 800225c:	4293      	cmp	r3, r2
 800225e:	d103      	bne.n	8002268 <lcd_init+0x6c0>
 8002260:	4b81      	ldr	r3, [pc, #516]	@ (8002468 <lcd_init+0x8c0>)
 8002262:	f641 1263 	movw	r2, #6499	@ 0x1963
 8002266:	809a      	strh	r2, [r3, #4]
     * ����(������f_putc����), ����, �����ʼ������1, �������ε�����
     * ���� printf ��� !!!!!!!
     */
    //printf("LCD ID:%x\r\n", lcddev.id); /* ��ӡLCD ID */

    if (lcddev.id == 0X7789)
 8002268:	4b7f      	ldr	r3, [pc, #508]	@ (8002468 <lcd_init+0x8c0>)
 800226a:	889b      	ldrh	r3, [r3, #4]
 800226c:	f247 7289 	movw	r2, #30601	@ 0x7789
 8002270:	4293      	cmp	r3, r2
 8002272:	f040 82f3 	bne.w	800285c <lcd_init+0xcb4>
 8002276:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 800227a:	f5a3 738e 	sub.w	r3, r3, #284	@ 0x11c
 800227e:	2211      	movs	r2, #17
 8002280:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002282:	4b7a      	ldr	r3, [pc, #488]	@ (800246c <lcd_init+0x8c4>)
 8002284:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002288:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800228a:	4b78      	ldr	r3, [pc, #480]	@ (800246c <lcd_init+0x8c4>)
 800228c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002290:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002292:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002296:	f5a3 738e 	sub.w	r3, r3, #284	@ 0x11c
 800229a:	881b      	ldrh	r3, [r3, #0]
 800229c:	b29a      	uxth	r2, r3
 800229e:	4b74      	ldr	r3, [pc, #464]	@ (8002470 <lcd_init+0x8c8>)
 80022a0:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80022a2:	4b72      	ldr	r3, [pc, #456]	@ (800246c <lcd_init+0x8c4>)
 80022a4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80022a8:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80022aa:	4b70      	ldr	r3, [pc, #448]	@ (800246c <lcd_init+0x8c4>)
 80022ac:	2280      	movs	r2, #128	@ 0x80
 80022ae:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80022b0:	4b6e      	ldr	r3, [pc, #440]	@ (800246c <lcd_init+0x8c4>)
 80022b2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80022b6:	611a      	str	r2, [r3, #16]
}
 80022b8:	bf00      	nop
    {
        //lcd_ex_st7789_reginit();    /* ִ��ST7789��ʼ�� */
        lcd_wr_regno(0x11);

        HAL_Delay(120);
 80022ba:	2078      	movs	r0, #120	@ 0x78
 80022bc:	f005 f8fc 	bl	80074b8 <HAL_Delay>
 80022c0:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80022c4:	f5a3 738f 	sub.w	r3, r3, #286	@ 0x11e
 80022c8:	2236      	movs	r2, #54	@ 0x36
 80022ca:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80022cc:	4b67      	ldr	r3, [pc, #412]	@ (800246c <lcd_init+0x8c4>)
 80022ce:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80022d2:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80022d4:	4b65      	ldr	r3, [pc, #404]	@ (800246c <lcd_init+0x8c4>)
 80022d6:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80022da:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80022dc:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80022e0:	f5a3 738f 	sub.w	r3, r3, #286	@ 0x11e
 80022e4:	881b      	ldrh	r3, [r3, #0]
 80022e6:	b29a      	uxth	r2, r3
 80022e8:	4b61      	ldr	r3, [pc, #388]	@ (8002470 <lcd_init+0x8c8>)
 80022ea:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80022ec:	4b5f      	ldr	r3, [pc, #380]	@ (800246c <lcd_init+0x8c4>)
 80022ee:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80022f2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80022f4:	4b5d      	ldr	r3, [pc, #372]	@ (800246c <lcd_init+0x8c4>)
 80022f6:	2280      	movs	r2, #128	@ 0x80
 80022f8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80022fa:	4b5c      	ldr	r3, [pc, #368]	@ (800246c <lcd_init+0x8c4>)
 80022fc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002300:	611a      	str	r2, [r3, #16]
}
 8002302:	bf00      	nop

        lcd_wr_regno(0x36);
        lcd_wr_xdata(0x00);
 8002304:	2000      	movs	r0, #0
 8002306:	f7fe fb11 	bl	800092c <lcd_wr_xdata>
 800230a:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 800230e:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8002312:	223a      	movs	r2, #58	@ 0x3a
 8002314:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002316:	4b55      	ldr	r3, [pc, #340]	@ (800246c <lcd_init+0x8c4>)
 8002318:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800231c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800231e:	4b53      	ldr	r3, [pc, #332]	@ (800246c <lcd_init+0x8c4>)
 8002320:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002324:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002326:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 800232a:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 800232e:	881b      	ldrh	r3, [r3, #0]
 8002330:	b29a      	uxth	r2, r3
 8002332:	4b4f      	ldr	r3, [pc, #316]	@ (8002470 <lcd_init+0x8c8>)
 8002334:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002336:	4b4d      	ldr	r3, [pc, #308]	@ (800246c <lcd_init+0x8c4>)
 8002338:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800233c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800233e:	4b4b      	ldr	r3, [pc, #300]	@ (800246c <lcd_init+0x8c4>)
 8002340:	2280      	movs	r2, #128	@ 0x80
 8002342:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002344:	4b49      	ldr	r3, [pc, #292]	@ (800246c <lcd_init+0x8c4>)
 8002346:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800234a:	611a      	str	r2, [r3, #16]
}
 800234c:	bf00      	nop


        lcd_wr_regno(0x3A);
        lcd_wr_xdata(0X05);
 800234e:	2005      	movs	r0, #5
 8002350:	f7fe faec 	bl	800092c <lcd_wr_xdata>
 8002354:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002358:	f5a3 7391 	sub.w	r3, r3, #290	@ 0x122
 800235c:	22b2      	movs	r2, #178	@ 0xb2
 800235e:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002360:	4b42      	ldr	r3, [pc, #264]	@ (800246c <lcd_init+0x8c4>)
 8002362:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002366:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002368:	4b40      	ldr	r3, [pc, #256]	@ (800246c <lcd_init+0x8c4>)
 800236a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800236e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002370:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002374:	f5a3 7391 	sub.w	r3, r3, #290	@ 0x122
 8002378:	881b      	ldrh	r3, [r3, #0]
 800237a:	b29a      	uxth	r2, r3
 800237c:	4b3c      	ldr	r3, [pc, #240]	@ (8002470 <lcd_init+0x8c8>)
 800237e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002380:	4b3a      	ldr	r3, [pc, #232]	@ (800246c <lcd_init+0x8c4>)
 8002382:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002386:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002388:	4b38      	ldr	r3, [pc, #224]	@ (800246c <lcd_init+0x8c4>)
 800238a:	2280      	movs	r2, #128	@ 0x80
 800238c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800238e:	4b37      	ldr	r3, [pc, #220]	@ (800246c <lcd_init+0x8c4>)
 8002390:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002394:	611a      	str	r2, [r3, #16]
}
 8002396:	bf00      	nop

        lcd_wr_regno(0xB2);
        lcd_wr_xdata(0x0C);
 8002398:	200c      	movs	r0, #12
 800239a:	f7fe fac7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0C);
 800239e:	200c      	movs	r0, #12
 80023a0:	f7fe fac4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80023a4:	2000      	movs	r0, #0
 80023a6:	f7fe fac1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x33);
 80023aa:	2033      	movs	r0, #51	@ 0x33
 80023ac:	f7fe fabe 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x33);
 80023b0:	2033      	movs	r0, #51	@ 0x33
 80023b2:	f7fe fabb 	bl	800092c <lcd_wr_xdata>
 80023b6:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80023ba:	f5a3 7392 	sub.w	r3, r3, #292	@ 0x124
 80023be:	22b7      	movs	r2, #183	@ 0xb7
 80023c0:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80023c2:	4b2a      	ldr	r3, [pc, #168]	@ (800246c <lcd_init+0x8c4>)
 80023c4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80023c8:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80023ca:	4b28      	ldr	r3, [pc, #160]	@ (800246c <lcd_init+0x8c4>)
 80023cc:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80023d0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80023d2:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80023d6:	f5a3 7392 	sub.w	r3, r3, #292	@ 0x124
 80023da:	881b      	ldrh	r3, [r3, #0]
 80023dc:	b29a      	uxth	r2, r3
 80023de:	4b24      	ldr	r3, [pc, #144]	@ (8002470 <lcd_init+0x8c8>)
 80023e0:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80023e2:	4b22      	ldr	r3, [pc, #136]	@ (800246c <lcd_init+0x8c4>)
 80023e4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80023e8:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80023ea:	4b20      	ldr	r3, [pc, #128]	@ (800246c <lcd_init+0x8c4>)
 80023ec:	2280      	movs	r2, #128	@ 0x80
 80023ee:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80023f0:	4b1e      	ldr	r3, [pc, #120]	@ (800246c <lcd_init+0x8c4>)
 80023f2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80023f6:	611a      	str	r2, [r3, #16]
}
 80023f8:	bf00      	nop

        lcd_wr_regno(0xB7);
        lcd_wr_xdata(0x35);
 80023fa:	2035      	movs	r0, #53	@ 0x35
 80023fc:	f7fe fa96 	bl	800092c <lcd_wr_xdata>
 8002400:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002404:	f5a3 7393 	sub.w	r3, r3, #294	@ 0x126
 8002408:	22bb      	movs	r2, #187	@ 0xbb
 800240a:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800240c:	4b17      	ldr	r3, [pc, #92]	@ (800246c <lcd_init+0x8c4>)
 800240e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002412:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002414:	4b15      	ldr	r3, [pc, #84]	@ (800246c <lcd_init+0x8c4>)
 8002416:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800241a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800241c:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002420:	f5a3 7393 	sub.w	r3, r3, #294	@ 0x126
 8002424:	881b      	ldrh	r3, [r3, #0]
 8002426:	b29a      	uxth	r2, r3
 8002428:	4b11      	ldr	r3, [pc, #68]	@ (8002470 <lcd_init+0x8c8>)
 800242a:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800242c:	4b0f      	ldr	r3, [pc, #60]	@ (800246c <lcd_init+0x8c4>)
 800242e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002432:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002434:	4b0d      	ldr	r3, [pc, #52]	@ (800246c <lcd_init+0x8c4>)
 8002436:	2280      	movs	r2, #128	@ 0x80
 8002438:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800243a:	4b0c      	ldr	r3, [pc, #48]	@ (800246c <lcd_init+0x8c4>)
 800243c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002440:	611a      	str	r2, [r3, #16]
}
 8002442:	bf00      	nop

        lcd_wr_regno(0xBB); /* vcom */
        lcd_wr_xdata(0x32); /* 30 */
 8002444:	2032      	movs	r0, #50	@ 0x32
 8002446:	f7fe fa71 	bl	800092c <lcd_wr_xdata>
 800244a:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 800244e:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 8002452:	22c0      	movs	r2, #192	@ 0xc0
 8002454:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002456:	4b05      	ldr	r3, [pc, #20]	@ (800246c <lcd_init+0x8c4>)
 8002458:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800245c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800245e:	4b03      	ldr	r3, [pc, #12]	@ (800246c <lcd_init+0x8c4>)
 8002460:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002464:	611a      	str	r2, [r3, #16]
 8002466:	e005      	b.n	8002474 <lcd_init+0x8cc>
 8002468:	2000002c 	.word	0x2000002c
 800246c:	40011000 	.word	0x40011000
 8002470:	40010c00 	.word	0x40010c00
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002474:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002478:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 800247c:	881b      	ldrh	r3, [r3, #0]
 800247e:	b29a      	uxth	r2, r3
 8002480:	4bbf      	ldr	r3, [pc, #764]	@ (8002780 <lcd_init+0xbd8>)
 8002482:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002484:	4bbf      	ldr	r3, [pc, #764]	@ (8002784 <lcd_init+0xbdc>)
 8002486:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800248a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800248c:	4bbd      	ldr	r3, [pc, #756]	@ (8002784 <lcd_init+0xbdc>)
 800248e:	2280      	movs	r2, #128	@ 0x80
 8002490:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002492:	4bbc      	ldr	r3, [pc, #752]	@ (8002784 <lcd_init+0xbdc>)
 8002494:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002498:	611a      	str	r2, [r3, #16]
}
 800249a:	bf00      	nop

        lcd_wr_regno(0xC0);
        lcd_wr_xdata(0x0C);
 800249c:	200c      	movs	r0, #12
 800249e:	f7fe fa45 	bl	800092c <lcd_wr_xdata>
 80024a2:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80024a6:	f5a3 7395 	sub.w	r3, r3, #298	@ 0x12a
 80024aa:	22c2      	movs	r2, #194	@ 0xc2
 80024ac:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80024ae:	4bb5      	ldr	r3, [pc, #724]	@ (8002784 <lcd_init+0xbdc>)
 80024b0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80024b4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80024b6:	4bb3      	ldr	r3, [pc, #716]	@ (8002784 <lcd_init+0xbdc>)
 80024b8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80024bc:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80024be:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80024c2:	f5a3 7395 	sub.w	r3, r3, #298	@ 0x12a
 80024c6:	881b      	ldrh	r3, [r3, #0]
 80024c8:	b29a      	uxth	r2, r3
 80024ca:	4bad      	ldr	r3, [pc, #692]	@ (8002780 <lcd_init+0xbd8>)
 80024cc:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80024ce:	4bad      	ldr	r3, [pc, #692]	@ (8002784 <lcd_init+0xbdc>)
 80024d0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80024d4:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80024d6:	4bab      	ldr	r3, [pc, #684]	@ (8002784 <lcd_init+0xbdc>)
 80024d8:	2280      	movs	r2, #128	@ 0x80
 80024da:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80024dc:	4ba9      	ldr	r3, [pc, #676]	@ (8002784 <lcd_init+0xbdc>)
 80024de:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80024e2:	611a      	str	r2, [r3, #16]
}
 80024e4:	bf00      	nop

        lcd_wr_regno(0xC2);
        lcd_wr_xdata(0x01);
 80024e6:	2001      	movs	r0, #1
 80024e8:	f7fe fa20 	bl	800092c <lcd_wr_xdata>
 80024ec:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80024f0:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 80024f4:	22c3      	movs	r2, #195	@ 0xc3
 80024f6:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80024f8:	4ba2      	ldr	r3, [pc, #648]	@ (8002784 <lcd_init+0xbdc>)
 80024fa:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80024fe:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002500:	4ba0      	ldr	r3, [pc, #640]	@ (8002784 <lcd_init+0xbdc>)
 8002502:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002506:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002508:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 800250c:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 8002510:	881b      	ldrh	r3, [r3, #0]
 8002512:	b29a      	uxth	r2, r3
 8002514:	4b9a      	ldr	r3, [pc, #616]	@ (8002780 <lcd_init+0xbd8>)
 8002516:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002518:	4b9a      	ldr	r3, [pc, #616]	@ (8002784 <lcd_init+0xbdc>)
 800251a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800251e:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002520:	4b98      	ldr	r3, [pc, #608]	@ (8002784 <lcd_init+0xbdc>)
 8002522:	2280      	movs	r2, #128	@ 0x80
 8002524:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002526:	4b97      	ldr	r3, [pc, #604]	@ (8002784 <lcd_init+0xbdc>)
 8002528:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800252c:	611a      	str	r2, [r3, #16]
}
 800252e:	bf00      	nop

        lcd_wr_regno(0xC3); /* vrh */
        lcd_wr_xdata(0x10); /* 17 0D */
 8002530:	2010      	movs	r0, #16
 8002532:	f7fe f9fb 	bl	800092c <lcd_wr_xdata>
 8002536:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 800253a:	f5a3 7397 	sub.w	r3, r3, #302	@ 0x12e
 800253e:	22c4      	movs	r2, #196	@ 0xc4
 8002540:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002542:	4b90      	ldr	r3, [pc, #576]	@ (8002784 <lcd_init+0xbdc>)
 8002544:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002548:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800254a:	4b8e      	ldr	r3, [pc, #568]	@ (8002784 <lcd_init+0xbdc>)
 800254c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002550:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002552:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002556:	f5a3 7397 	sub.w	r3, r3, #302	@ 0x12e
 800255a:	881b      	ldrh	r3, [r3, #0]
 800255c:	b29a      	uxth	r2, r3
 800255e:	4b88      	ldr	r3, [pc, #544]	@ (8002780 <lcd_init+0xbd8>)
 8002560:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002562:	4b88      	ldr	r3, [pc, #544]	@ (8002784 <lcd_init+0xbdc>)
 8002564:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002568:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800256a:	4b86      	ldr	r3, [pc, #536]	@ (8002784 <lcd_init+0xbdc>)
 800256c:	2280      	movs	r2, #128	@ 0x80
 800256e:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002570:	4b84      	ldr	r3, [pc, #528]	@ (8002784 <lcd_init+0xbdc>)
 8002572:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002576:	611a      	str	r2, [r3, #16]
}
 8002578:	bf00      	nop

        lcd_wr_regno(0xC4); /* vdv */
        lcd_wr_xdata(0x20); /* 20 */
 800257a:	2020      	movs	r0, #32
 800257c:	f7fe f9d6 	bl	800092c <lcd_wr_xdata>
 8002580:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002584:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 8002588:	22c6      	movs	r2, #198	@ 0xc6
 800258a:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800258c:	4b7d      	ldr	r3, [pc, #500]	@ (8002784 <lcd_init+0xbdc>)
 800258e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002592:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002594:	4b7b      	ldr	r3, [pc, #492]	@ (8002784 <lcd_init+0xbdc>)
 8002596:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800259a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800259c:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80025a0:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80025a4:	881b      	ldrh	r3, [r3, #0]
 80025a6:	b29a      	uxth	r2, r3
 80025a8:	4b75      	ldr	r3, [pc, #468]	@ (8002780 <lcd_init+0xbd8>)
 80025aa:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80025ac:	4b75      	ldr	r3, [pc, #468]	@ (8002784 <lcd_init+0xbdc>)
 80025ae:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80025b2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80025b4:	4b73      	ldr	r3, [pc, #460]	@ (8002784 <lcd_init+0xbdc>)
 80025b6:	2280      	movs	r2, #128	@ 0x80
 80025b8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80025ba:	4b72      	ldr	r3, [pc, #456]	@ (8002784 <lcd_init+0xbdc>)
 80025bc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80025c0:	611a      	str	r2, [r3, #16]
}
 80025c2:	bf00      	nop

        lcd_wr_regno(0xC6);
        lcd_wr_xdata(0x0f);
 80025c4:	200f      	movs	r0, #15
 80025c6:	f7fe f9b1 	bl	800092c <lcd_wr_xdata>
 80025ca:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80025ce:	f5a3 7399 	sub.w	r3, r3, #306	@ 0x132
 80025d2:	22d0      	movs	r2, #208	@ 0xd0
 80025d4:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80025d6:	4b6b      	ldr	r3, [pc, #428]	@ (8002784 <lcd_init+0xbdc>)
 80025d8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80025dc:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80025de:	4b69      	ldr	r3, [pc, #420]	@ (8002784 <lcd_init+0xbdc>)
 80025e0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80025e4:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80025e6:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80025ea:	f5a3 7399 	sub.w	r3, r3, #306	@ 0x132
 80025ee:	881b      	ldrh	r3, [r3, #0]
 80025f0:	b29a      	uxth	r2, r3
 80025f2:	4b63      	ldr	r3, [pc, #396]	@ (8002780 <lcd_init+0xbd8>)
 80025f4:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80025f6:	4b63      	ldr	r3, [pc, #396]	@ (8002784 <lcd_init+0xbdc>)
 80025f8:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80025fc:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80025fe:	4b61      	ldr	r3, [pc, #388]	@ (8002784 <lcd_init+0xbdc>)
 8002600:	2280      	movs	r2, #128	@ 0x80
 8002602:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002604:	4b5f      	ldr	r3, [pc, #380]	@ (8002784 <lcd_init+0xbdc>)
 8002606:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800260a:	611a      	str	r2, [r3, #16]
}
 800260c:	bf00      	nop

        lcd_wr_regno(0xD0);
        lcd_wr_xdata(0xA4);
 800260e:	20a4      	movs	r0, #164	@ 0xa4
 8002610:	f7fe f98c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA1);
 8002614:	20a1      	movs	r0, #161	@ 0xa1
 8002616:	f7fe f989 	bl	800092c <lcd_wr_xdata>
 800261a:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 800261e:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002622:	22e0      	movs	r2, #224	@ 0xe0
 8002624:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002626:	4b57      	ldr	r3, [pc, #348]	@ (8002784 <lcd_init+0xbdc>)
 8002628:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800262c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800262e:	4b55      	ldr	r3, [pc, #340]	@ (8002784 <lcd_init+0xbdc>)
 8002630:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002634:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002636:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 800263a:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 800263e:	881b      	ldrh	r3, [r3, #0]
 8002640:	b29a      	uxth	r2, r3
 8002642:	4b4f      	ldr	r3, [pc, #316]	@ (8002780 <lcd_init+0xbd8>)
 8002644:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002646:	4b4f      	ldr	r3, [pc, #316]	@ (8002784 <lcd_init+0xbdc>)
 8002648:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800264c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800264e:	4b4d      	ldr	r3, [pc, #308]	@ (8002784 <lcd_init+0xbdc>)
 8002650:	2280      	movs	r2, #128	@ 0x80
 8002652:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002654:	4b4b      	ldr	r3, [pc, #300]	@ (8002784 <lcd_init+0xbdc>)
 8002656:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800265a:	611a      	str	r2, [r3, #16]
}
 800265c:	bf00      	nop

        lcd_wr_regno(0xE0); /* Set Gamma  */
        lcd_wr_xdata(0xd0);
 800265e:	20d0      	movs	r0, #208	@ 0xd0
 8002660:	f7fe f964 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8002664:	2000      	movs	r0, #0
 8002666:	f7fe f961 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x02);
 800266a:	2002      	movs	r0, #2
 800266c:	f7fe f95e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x07);
 8002670:	2007      	movs	r0, #7
 8002672:	f7fe f95b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0a);
 8002676:	200a      	movs	r0, #10
 8002678:	f7fe f958 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x28);
 800267c:	2028      	movs	r0, #40	@ 0x28
 800267e:	f7fe f955 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x32);
 8002682:	2032      	movs	r0, #50	@ 0x32
 8002684:	f7fe f952 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0X44);
 8002688:	2044      	movs	r0, #68	@ 0x44
 800268a:	f7fe f94f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x42);
 800268e:	2042      	movs	r0, #66	@ 0x42
 8002690:	f7fe f94c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x06);
 8002694:	2006      	movs	r0, #6
 8002696:	f7fe f949 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0e);
 800269a:	200e      	movs	r0, #14
 800269c:	f7fe f946 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x12);
 80026a0:	2012      	movs	r0, #18
 80026a2:	f7fe f943 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x14);
 80026a6:	2014      	movs	r0, #20
 80026a8:	f7fe f940 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x17);
 80026ac:	2017      	movs	r0, #23
 80026ae:	f7fe f93d 	bl	800092c <lcd_wr_xdata>
 80026b2:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80026b6:	f5a3 739b 	sub.w	r3, r3, #310	@ 0x136
 80026ba:	22e1      	movs	r2, #225	@ 0xe1
 80026bc:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80026be:	4b31      	ldr	r3, [pc, #196]	@ (8002784 <lcd_init+0xbdc>)
 80026c0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80026c4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80026c6:	4b2f      	ldr	r3, [pc, #188]	@ (8002784 <lcd_init+0xbdc>)
 80026c8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80026cc:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80026ce:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80026d2:	f5a3 739b 	sub.w	r3, r3, #310	@ 0x136
 80026d6:	881b      	ldrh	r3, [r3, #0]
 80026d8:	b29a      	uxth	r2, r3
 80026da:	4b29      	ldr	r3, [pc, #164]	@ (8002780 <lcd_init+0xbd8>)
 80026dc:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80026de:	4b29      	ldr	r3, [pc, #164]	@ (8002784 <lcd_init+0xbdc>)
 80026e0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80026e4:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80026e6:	4b27      	ldr	r3, [pc, #156]	@ (8002784 <lcd_init+0xbdc>)
 80026e8:	2280      	movs	r2, #128	@ 0x80
 80026ea:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80026ec:	4b25      	ldr	r3, [pc, #148]	@ (8002784 <lcd_init+0xbdc>)
 80026ee:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80026f2:	611a      	str	r2, [r3, #16]
}
 80026f4:	bf00      	nop


        lcd_wr_regno(0XE1);  /* Set Gamma */
        lcd_wr_xdata(0xd0);
 80026f6:	20d0      	movs	r0, #208	@ 0xd0
 80026f8:	f7fe f918 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80026fc:	2000      	movs	r0, #0
 80026fe:	f7fe f915 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x02);
 8002702:	2002      	movs	r0, #2
 8002704:	f7fe f912 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x07);
 8002708:	2007      	movs	r0, #7
 800270a:	f7fe f90f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0a);
 800270e:	200a      	movs	r0, #10
 8002710:	f7fe f90c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x28);
 8002714:	2028      	movs	r0, #40	@ 0x28
 8002716:	f7fe f909 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x31);
 800271a:	2031      	movs	r0, #49	@ 0x31
 800271c:	f7fe f906 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x54);
 8002720:	2054      	movs	r0, #84	@ 0x54
 8002722:	f7fe f903 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x47);
 8002726:	2047      	movs	r0, #71	@ 0x47
 8002728:	f7fe f900 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0e);
 800272c:	200e      	movs	r0, #14
 800272e:	f7fe f8fd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x1c);
 8002732:	201c      	movs	r0, #28
 8002734:	f7fe f8fa 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x17);
 8002738:	2017      	movs	r0, #23
 800273a:	f7fe f8f7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x1b);
 800273e:	201b      	movs	r0, #27
 8002740:	f7fe f8f4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x1e);
 8002744:	201e      	movs	r0, #30
 8002746:	f7fe f8f1 	bl	800092c <lcd_wr_xdata>
 800274a:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 800274e:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8002752:	222a      	movs	r2, #42	@ 0x2a
 8002754:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002756:	4b0b      	ldr	r3, [pc, #44]	@ (8002784 <lcd_init+0xbdc>)
 8002758:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800275c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800275e:	4b09      	ldr	r3, [pc, #36]	@ (8002784 <lcd_init+0xbdc>)
 8002760:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002764:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002766:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 800276a:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 800276e:	881b      	ldrh	r3, [r3, #0]
 8002770:	b29a      	uxth	r2, r3
 8002772:	4b03      	ldr	r3, [pc, #12]	@ (8002780 <lcd_init+0xbd8>)
 8002774:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002776:	4b03      	ldr	r3, [pc, #12]	@ (8002784 <lcd_init+0xbdc>)
 8002778:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800277c:	611a      	str	r2, [r3, #16]
 800277e:	e003      	b.n	8002788 <lcd_init+0xbe0>
 8002780:	40010c00 	.word	0x40010c00
 8002784:	40011000 	.word	0x40011000
    LCD_WR(1);
 8002788:	4b32      	ldr	r3, [pc, #200]	@ (8002854 <lcd_init+0xcac>)
 800278a:	2280      	movs	r2, #128	@ 0x80
 800278c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800278e:	4b31      	ldr	r3, [pc, #196]	@ (8002854 <lcd_init+0xcac>)
 8002790:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002794:	611a      	str	r2, [r3, #16]
}
 8002796:	bf00      	nop


        lcd_wr_regno(0x2A);
        lcd_wr_xdata(0x00);
 8002798:	2000      	movs	r0, #0
 800279a:	f7fe f8c7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800279e:	2000      	movs	r0, #0
 80027a0:	f7fe f8c4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80027a4:	2000      	movs	r0, #0
 80027a6:	f7fe f8c1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xef);
 80027aa:	20ef      	movs	r0, #239	@ 0xef
 80027ac:	f7fe f8be 	bl	800092c <lcd_wr_xdata>
 80027b0:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80027b4:	f5a3 739d 	sub.w	r3, r3, #314	@ 0x13a
 80027b8:	222b      	movs	r2, #43	@ 0x2b
 80027ba:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80027bc:	4b25      	ldr	r3, [pc, #148]	@ (8002854 <lcd_init+0xcac>)
 80027be:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80027c2:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80027c4:	4b23      	ldr	r3, [pc, #140]	@ (8002854 <lcd_init+0xcac>)
 80027c6:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80027ca:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80027cc:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80027d0:	f5a3 739d 	sub.w	r3, r3, #314	@ 0x13a
 80027d4:	881b      	ldrh	r3, [r3, #0]
 80027d6:	b29a      	uxth	r2, r3
 80027d8:	4b1f      	ldr	r3, [pc, #124]	@ (8002858 <lcd_init+0xcb0>)
 80027da:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80027dc:	4b1d      	ldr	r3, [pc, #116]	@ (8002854 <lcd_init+0xcac>)
 80027de:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80027e2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80027e4:	4b1b      	ldr	r3, [pc, #108]	@ (8002854 <lcd_init+0xcac>)
 80027e6:	2280      	movs	r2, #128	@ 0x80
 80027e8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80027ea:	4b1a      	ldr	r3, [pc, #104]	@ (8002854 <lcd_init+0xcac>)
 80027ec:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80027f0:	611a      	str	r2, [r3, #16]
}
 80027f2:	bf00      	nop

        lcd_wr_regno(0x2B);
        lcd_wr_xdata(0x00);
 80027f4:	2000      	movs	r0, #0
 80027f6:	f7fe f899 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80027fa:	2000      	movs	r0, #0
 80027fc:	f7fe f896 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01);
 8002800:	2001      	movs	r0, #1
 8002802:	f7fe f893 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x3f);
 8002806:	203f      	movs	r0, #63	@ 0x3f
 8002808:	f7fe f890 	bl	800092c <lcd_wr_xdata>
 800280c:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002810:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8002814:	2229      	movs	r2, #41	@ 0x29
 8002816:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002818:	4b0e      	ldr	r3, [pc, #56]	@ (8002854 <lcd_init+0xcac>)
 800281a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800281e:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002820:	4b0c      	ldr	r3, [pc, #48]	@ (8002854 <lcd_init+0xcac>)
 8002822:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002826:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002828:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 800282c:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8002830:	881b      	ldrh	r3, [r3, #0]
 8002832:	b29a      	uxth	r2, r3
 8002834:	4b08      	ldr	r3, [pc, #32]	@ (8002858 <lcd_init+0xcb0>)
 8002836:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002838:	4b06      	ldr	r3, [pc, #24]	@ (8002854 <lcd_init+0xcac>)
 800283a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800283e:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002840:	4b04      	ldr	r3, [pc, #16]	@ (8002854 <lcd_init+0xcac>)
 8002842:	2280      	movs	r2, #128	@ 0x80
 8002844:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002846:	4b03      	ldr	r3, [pc, #12]	@ (8002854 <lcd_init+0xcac>)
 8002848:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800284c:	611a      	str	r2, [r3, #16]
}
 800284e:	f004 b8f4 	b.w	8006a3a <lcd_init+0x4e92>
 8002852:	bf00      	nop
 8002854:	40011000 	.word	0x40011000
 8002858:	40010c00 	.word	0x40010c00

        lcd_wr_regno(0x29); /* display on */
    }
    else if (lcddev.id == 0X9341)
 800285c:	4bb9      	ldr	r3, [pc, #740]	@ (8002b44 <lcd_init+0xf9c>)
 800285e:	889b      	ldrh	r3, [r3, #4]
 8002860:	f249 3241 	movw	r2, #37697	@ 0x9341
 8002864:	4293      	cmp	r3, r2
 8002866:	f040 83a1 	bne.w	8002fac <lcd_init+0x1404>
 800286a:	23cf      	movs	r3, #207	@ 0xcf
 800286c:	f8a7 3078 	strh.w	r3, [r7, #120]	@ 0x78
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002870:	4bb5      	ldr	r3, [pc, #724]	@ (8002b48 <lcd_init+0xfa0>)
 8002872:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002876:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002878:	4bb3      	ldr	r3, [pc, #716]	@ (8002b48 <lcd_init+0xfa0>)
 800287a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800287e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002880:	f8b7 3078 	ldrh.w	r3, [r7, #120]	@ 0x78
 8002884:	b29a      	uxth	r2, r3
 8002886:	4bb1      	ldr	r3, [pc, #708]	@ (8002b4c <lcd_init+0xfa4>)
 8002888:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800288a:	4baf      	ldr	r3, [pc, #700]	@ (8002b48 <lcd_init+0xfa0>)
 800288c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002890:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002892:	4bad      	ldr	r3, [pc, #692]	@ (8002b48 <lcd_init+0xfa0>)
 8002894:	2280      	movs	r2, #128	@ 0x80
 8002896:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002898:	4bab      	ldr	r3, [pc, #684]	@ (8002b48 <lcd_init+0xfa0>)
 800289a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800289e:	611a      	str	r2, [r3, #16]
}
 80028a0:	bf00      	nop
    {
        //lcd_ex_ili9341_reginit();   /* ִ��ILI9341��ʼ�� */
        lcd_wr_regno(0xCF);
        lcd_wr_xdata(0x00);
 80028a2:	2000      	movs	r0, #0
 80028a4:	f7fe f842 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xC1);
 80028a8:	20c1      	movs	r0, #193	@ 0xc1
 80028aa:	f7fe f83f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0X30);
 80028ae:	2030      	movs	r0, #48	@ 0x30
 80028b0:	f7fe f83c 	bl	800092c <lcd_wr_xdata>
 80028b4:	23ed      	movs	r3, #237	@ 0xed
 80028b6:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80028ba:	4ba3      	ldr	r3, [pc, #652]	@ (8002b48 <lcd_init+0xfa0>)
 80028bc:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80028c0:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80028c2:	4ba1      	ldr	r3, [pc, #644]	@ (8002b48 <lcd_init+0xfa0>)
 80028c4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80028c8:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80028ca:	f8b7 3076 	ldrh.w	r3, [r7, #118]	@ 0x76
 80028ce:	b29a      	uxth	r2, r3
 80028d0:	4b9e      	ldr	r3, [pc, #632]	@ (8002b4c <lcd_init+0xfa4>)
 80028d2:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80028d4:	4b9c      	ldr	r3, [pc, #624]	@ (8002b48 <lcd_init+0xfa0>)
 80028d6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80028da:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80028dc:	4b9a      	ldr	r3, [pc, #616]	@ (8002b48 <lcd_init+0xfa0>)
 80028de:	2280      	movs	r2, #128	@ 0x80
 80028e0:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80028e2:	4b99      	ldr	r3, [pc, #612]	@ (8002b48 <lcd_init+0xfa0>)
 80028e4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80028e8:	611a      	str	r2, [r3, #16]
}
 80028ea:	bf00      	nop
        lcd_wr_regno(0xED);
        lcd_wr_xdata(0x64);
 80028ec:	2064      	movs	r0, #100	@ 0x64
 80028ee:	f7fe f81d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x03);
 80028f2:	2003      	movs	r0, #3
 80028f4:	f7fe f81a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0X12);
 80028f8:	2012      	movs	r0, #18
 80028fa:	f7fe f817 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0X81);
 80028fe:	2081      	movs	r0, #129	@ 0x81
 8002900:	f7fe f814 	bl	800092c <lcd_wr_xdata>
 8002904:	23e8      	movs	r3, #232	@ 0xe8
 8002906:	f8a7 3074 	strh.w	r3, [r7, #116]	@ 0x74
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800290a:	4b8f      	ldr	r3, [pc, #572]	@ (8002b48 <lcd_init+0xfa0>)
 800290c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002910:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002912:	4b8d      	ldr	r3, [pc, #564]	@ (8002b48 <lcd_init+0xfa0>)
 8002914:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002918:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800291a:	f8b7 3074 	ldrh.w	r3, [r7, #116]	@ 0x74
 800291e:	b29a      	uxth	r2, r3
 8002920:	4b8a      	ldr	r3, [pc, #552]	@ (8002b4c <lcd_init+0xfa4>)
 8002922:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002924:	4b88      	ldr	r3, [pc, #544]	@ (8002b48 <lcd_init+0xfa0>)
 8002926:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800292a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800292c:	4b86      	ldr	r3, [pc, #536]	@ (8002b48 <lcd_init+0xfa0>)
 800292e:	2280      	movs	r2, #128	@ 0x80
 8002930:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002932:	4b85      	ldr	r3, [pc, #532]	@ (8002b48 <lcd_init+0xfa0>)
 8002934:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002938:	611a      	str	r2, [r3, #16]
}
 800293a:	bf00      	nop
        lcd_wr_regno(0xE8);
        lcd_wr_xdata(0x85);
 800293c:	2085      	movs	r0, #133	@ 0x85
 800293e:	f7fd fff5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x10);
 8002942:	2010      	movs	r0, #16
 8002944:	f7fd fff2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x7A);
 8002948:	207a      	movs	r0, #122	@ 0x7a
 800294a:	f7fd ffef 	bl	800092c <lcd_wr_xdata>
 800294e:	23cb      	movs	r3, #203	@ 0xcb
 8002950:	f8a7 3072 	strh.w	r3, [r7, #114]	@ 0x72
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002954:	4b7c      	ldr	r3, [pc, #496]	@ (8002b48 <lcd_init+0xfa0>)
 8002956:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800295a:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800295c:	4b7a      	ldr	r3, [pc, #488]	@ (8002b48 <lcd_init+0xfa0>)
 800295e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002962:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002964:	f8b7 3072 	ldrh.w	r3, [r7, #114]	@ 0x72
 8002968:	b29a      	uxth	r2, r3
 800296a:	4b78      	ldr	r3, [pc, #480]	@ (8002b4c <lcd_init+0xfa4>)
 800296c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800296e:	4b76      	ldr	r3, [pc, #472]	@ (8002b48 <lcd_init+0xfa0>)
 8002970:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002974:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002976:	4b74      	ldr	r3, [pc, #464]	@ (8002b48 <lcd_init+0xfa0>)
 8002978:	2280      	movs	r2, #128	@ 0x80
 800297a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800297c:	4b72      	ldr	r3, [pc, #456]	@ (8002b48 <lcd_init+0xfa0>)
 800297e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002982:	611a      	str	r2, [r3, #16]
}
 8002984:	bf00      	nop
        lcd_wr_regno(0xCB);
        lcd_wr_xdata(0x39);
 8002986:	2039      	movs	r0, #57	@ 0x39
 8002988:	f7fd ffd0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x2C);
 800298c:	202c      	movs	r0, #44	@ 0x2c
 800298e:	f7fd ffcd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8002992:	2000      	movs	r0, #0
 8002994:	f7fd ffca 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x34);
 8002998:	2034      	movs	r0, #52	@ 0x34
 800299a:	f7fd ffc7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x02);
 800299e:	2002      	movs	r0, #2
 80029a0:	f7fd ffc4 	bl	800092c <lcd_wr_xdata>
 80029a4:	23f7      	movs	r3, #247	@ 0xf7
 80029a6:	f8a7 3070 	strh.w	r3, [r7, #112]	@ 0x70
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80029aa:	4b67      	ldr	r3, [pc, #412]	@ (8002b48 <lcd_init+0xfa0>)
 80029ac:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80029b0:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80029b2:	4b65      	ldr	r3, [pc, #404]	@ (8002b48 <lcd_init+0xfa0>)
 80029b4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80029b8:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80029ba:	f8b7 3070 	ldrh.w	r3, [r7, #112]	@ 0x70
 80029be:	b29a      	uxth	r2, r3
 80029c0:	4b62      	ldr	r3, [pc, #392]	@ (8002b4c <lcd_init+0xfa4>)
 80029c2:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80029c4:	4b60      	ldr	r3, [pc, #384]	@ (8002b48 <lcd_init+0xfa0>)
 80029c6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80029ca:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80029cc:	4b5e      	ldr	r3, [pc, #376]	@ (8002b48 <lcd_init+0xfa0>)
 80029ce:	2280      	movs	r2, #128	@ 0x80
 80029d0:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80029d2:	4b5d      	ldr	r3, [pc, #372]	@ (8002b48 <lcd_init+0xfa0>)
 80029d4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80029d8:	611a      	str	r2, [r3, #16]
}
 80029da:	bf00      	nop
        lcd_wr_regno(0xF7);
        lcd_wr_xdata(0x20);
 80029dc:	2020      	movs	r0, #32
 80029de:	f7fd ffa5 	bl	800092c <lcd_wr_xdata>
 80029e2:	23ea      	movs	r3, #234	@ 0xea
 80029e4:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80029e8:	4b57      	ldr	r3, [pc, #348]	@ (8002b48 <lcd_init+0xfa0>)
 80029ea:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80029ee:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80029f0:	4b55      	ldr	r3, [pc, #340]	@ (8002b48 <lcd_init+0xfa0>)
 80029f2:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80029f6:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80029f8:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 80029fc:	b29a      	uxth	r2, r3
 80029fe:	4b53      	ldr	r3, [pc, #332]	@ (8002b4c <lcd_init+0xfa4>)
 8002a00:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002a02:	4b51      	ldr	r3, [pc, #324]	@ (8002b48 <lcd_init+0xfa0>)
 8002a04:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002a08:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002a0a:	4b4f      	ldr	r3, [pc, #316]	@ (8002b48 <lcd_init+0xfa0>)
 8002a0c:	2280      	movs	r2, #128	@ 0x80
 8002a0e:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002a10:	4b4d      	ldr	r3, [pc, #308]	@ (8002b48 <lcd_init+0xfa0>)
 8002a12:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002a16:	611a      	str	r2, [r3, #16]
}
 8002a18:	bf00      	nop
        lcd_wr_regno(0xEA);
        lcd_wr_xdata(0x00);
 8002a1a:	2000      	movs	r0, #0
 8002a1c:	f7fd ff86 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8002a20:	2000      	movs	r0, #0
 8002a22:	f7fd ff83 	bl	800092c <lcd_wr_xdata>
 8002a26:	23c0      	movs	r3, #192	@ 0xc0
 8002a28:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002a2c:	4b46      	ldr	r3, [pc, #280]	@ (8002b48 <lcd_init+0xfa0>)
 8002a2e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002a32:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002a34:	4b44      	ldr	r3, [pc, #272]	@ (8002b48 <lcd_init+0xfa0>)
 8002a36:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002a3a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002a3c:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 8002a40:	b29a      	uxth	r2, r3
 8002a42:	4b42      	ldr	r3, [pc, #264]	@ (8002b4c <lcd_init+0xfa4>)
 8002a44:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002a46:	4b40      	ldr	r3, [pc, #256]	@ (8002b48 <lcd_init+0xfa0>)
 8002a48:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002a4c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002a4e:	4b3e      	ldr	r3, [pc, #248]	@ (8002b48 <lcd_init+0xfa0>)
 8002a50:	2280      	movs	r2, #128	@ 0x80
 8002a52:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002a54:	4b3c      	ldr	r3, [pc, #240]	@ (8002b48 <lcd_init+0xfa0>)
 8002a56:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002a5a:	611a      	str	r2, [r3, #16]
}
 8002a5c:	bf00      	nop
        lcd_wr_regno(0xC0); /* Power control */
        lcd_wr_xdata(0x1B); /* VRH[5:0] */
 8002a5e:	201b      	movs	r0, #27
 8002a60:	f7fd ff64 	bl	800092c <lcd_wr_xdata>
 8002a64:	23c1      	movs	r3, #193	@ 0xc1
 8002a66:	f8a7 306a 	strh.w	r3, [r7, #106]	@ 0x6a
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002a6a:	4b37      	ldr	r3, [pc, #220]	@ (8002b48 <lcd_init+0xfa0>)
 8002a6c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002a70:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002a72:	4b35      	ldr	r3, [pc, #212]	@ (8002b48 <lcd_init+0xfa0>)
 8002a74:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002a78:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002a7a:	f8b7 306a 	ldrh.w	r3, [r7, #106]	@ 0x6a
 8002a7e:	b29a      	uxth	r2, r3
 8002a80:	4b32      	ldr	r3, [pc, #200]	@ (8002b4c <lcd_init+0xfa4>)
 8002a82:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002a84:	4b30      	ldr	r3, [pc, #192]	@ (8002b48 <lcd_init+0xfa0>)
 8002a86:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002a8a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002a8c:	4b2e      	ldr	r3, [pc, #184]	@ (8002b48 <lcd_init+0xfa0>)
 8002a8e:	2280      	movs	r2, #128	@ 0x80
 8002a90:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002a92:	4b2d      	ldr	r3, [pc, #180]	@ (8002b48 <lcd_init+0xfa0>)
 8002a94:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002a98:	611a      	str	r2, [r3, #16]
}
 8002a9a:	bf00      	nop
        lcd_wr_regno(0xC1); /* Power control */
        lcd_wr_xdata(0x01); /* SAP[2:0];BT[3:0] */
 8002a9c:	2001      	movs	r0, #1
 8002a9e:	f7fd ff45 	bl	800092c <lcd_wr_xdata>
 8002aa2:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002aa6:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8002aaa:	22c5      	movs	r2, #197	@ 0xc5
 8002aac:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002aae:	4b26      	ldr	r3, [pc, #152]	@ (8002b48 <lcd_init+0xfa0>)
 8002ab0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002ab4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002ab6:	4b24      	ldr	r3, [pc, #144]	@ (8002b48 <lcd_init+0xfa0>)
 8002ab8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002abc:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002abe:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002ac2:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8002ac6:	881b      	ldrh	r3, [r3, #0]
 8002ac8:	b29a      	uxth	r2, r3
 8002aca:	4b20      	ldr	r3, [pc, #128]	@ (8002b4c <lcd_init+0xfa4>)
 8002acc:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002ace:	4b1e      	ldr	r3, [pc, #120]	@ (8002b48 <lcd_init+0xfa0>)
 8002ad0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002ad4:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002ad6:	4b1c      	ldr	r3, [pc, #112]	@ (8002b48 <lcd_init+0xfa0>)
 8002ad8:	2280      	movs	r2, #128	@ 0x80
 8002ada:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002adc:	4b1a      	ldr	r3, [pc, #104]	@ (8002b48 <lcd_init+0xfa0>)
 8002ade:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002ae2:	611a      	str	r2, [r3, #16]
}
 8002ae4:	bf00      	nop
        lcd_wr_regno(0xC5); /* VCM control */
        lcd_wr_xdata(0x30); /* 3F */
 8002ae6:	2030      	movs	r0, #48	@ 0x30
 8002ae8:	f7fd ff20 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x30); /* 3C */
 8002aec:	2030      	movs	r0, #48	@ 0x30
 8002aee:	f7fd ff1d 	bl	800092c <lcd_wr_xdata>
 8002af2:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002af6:	f5a3 7381 	sub.w	r3, r3, #258	@ 0x102
 8002afa:	22c7      	movs	r2, #199	@ 0xc7
 8002afc:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002afe:	4b12      	ldr	r3, [pc, #72]	@ (8002b48 <lcd_init+0xfa0>)
 8002b00:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002b04:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002b06:	4b10      	ldr	r3, [pc, #64]	@ (8002b48 <lcd_init+0xfa0>)
 8002b08:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002b0c:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002b0e:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002b12:	f5a3 7381 	sub.w	r3, r3, #258	@ 0x102
 8002b16:	881b      	ldrh	r3, [r3, #0]
 8002b18:	b29a      	uxth	r2, r3
 8002b1a:	4b0c      	ldr	r3, [pc, #48]	@ (8002b4c <lcd_init+0xfa4>)
 8002b1c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002b1e:	4b0a      	ldr	r3, [pc, #40]	@ (8002b48 <lcd_init+0xfa0>)
 8002b20:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002b24:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002b26:	4b08      	ldr	r3, [pc, #32]	@ (8002b48 <lcd_init+0xfa0>)
 8002b28:	2280      	movs	r2, #128	@ 0x80
 8002b2a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002b2c:	4b06      	ldr	r3, [pc, #24]	@ (8002b48 <lcd_init+0xfa0>)
 8002b2e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002b32:	611a      	str	r2, [r3, #16]
}
 8002b34:	bf00      	nop
        lcd_wr_regno(0xC7); /* VCM control2 */
        lcd_wr_xdata(0XB7);
 8002b36:	20b7      	movs	r0, #183	@ 0xb7
 8002b38:	f7fd fef8 	bl	800092c <lcd_wr_xdata>
 8002b3c:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002b40:	e006      	b.n	8002b50 <lcd_init+0xfa8>
 8002b42:	bf00      	nop
 8002b44:	2000002c 	.word	0x2000002c
 8002b48:	40011000 	.word	0x40011000
 8002b4c:	40010c00 	.word	0x40010c00
 8002b50:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8002b54:	2236      	movs	r2, #54	@ 0x36
 8002b56:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002b58:	4bc1      	ldr	r3, [pc, #772]	@ (8002e60 <lcd_init+0x12b8>)
 8002b5a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002b5e:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002b60:	4bbf      	ldr	r3, [pc, #764]	@ (8002e60 <lcd_init+0x12b8>)
 8002b62:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002b66:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002b68:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002b6c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8002b70:	881b      	ldrh	r3, [r3, #0]
 8002b72:	b29a      	uxth	r2, r3
 8002b74:	4bbb      	ldr	r3, [pc, #748]	@ (8002e64 <lcd_init+0x12bc>)
 8002b76:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002b78:	4bb9      	ldr	r3, [pc, #740]	@ (8002e60 <lcd_init+0x12b8>)
 8002b7a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002b7e:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002b80:	4bb7      	ldr	r3, [pc, #732]	@ (8002e60 <lcd_init+0x12b8>)
 8002b82:	2280      	movs	r2, #128	@ 0x80
 8002b84:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002b86:	4bb6      	ldr	r3, [pc, #728]	@ (8002e60 <lcd_init+0x12b8>)
 8002b88:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002b8c:	611a      	str	r2, [r3, #16]
}
 8002b8e:	bf00      	nop
        lcd_wr_regno(0x36); /*  Memory Access Control */
        lcd_wr_xdata(0x48);
 8002b90:	2048      	movs	r0, #72	@ 0x48
 8002b92:	f7fd fecb 	bl	800092c <lcd_wr_xdata>
 8002b96:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002b9a:	f5a3 7383 	sub.w	r3, r3, #262	@ 0x106
 8002b9e:	223a      	movs	r2, #58	@ 0x3a
 8002ba0:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002ba2:	4baf      	ldr	r3, [pc, #700]	@ (8002e60 <lcd_init+0x12b8>)
 8002ba4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002ba8:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002baa:	4bad      	ldr	r3, [pc, #692]	@ (8002e60 <lcd_init+0x12b8>)
 8002bac:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002bb0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002bb2:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002bb6:	f5a3 7383 	sub.w	r3, r3, #262	@ 0x106
 8002bba:	881b      	ldrh	r3, [r3, #0]
 8002bbc:	b29a      	uxth	r2, r3
 8002bbe:	4ba9      	ldr	r3, [pc, #676]	@ (8002e64 <lcd_init+0x12bc>)
 8002bc0:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002bc2:	4ba7      	ldr	r3, [pc, #668]	@ (8002e60 <lcd_init+0x12b8>)
 8002bc4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002bc8:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002bca:	4ba5      	ldr	r3, [pc, #660]	@ (8002e60 <lcd_init+0x12b8>)
 8002bcc:	2280      	movs	r2, #128	@ 0x80
 8002bce:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002bd0:	4ba3      	ldr	r3, [pc, #652]	@ (8002e60 <lcd_init+0x12b8>)
 8002bd2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002bd6:	611a      	str	r2, [r3, #16]
}
 8002bd8:	bf00      	nop
        lcd_wr_regno(0x3A);
        lcd_wr_xdata(0x55);
 8002bda:	2055      	movs	r0, #85	@ 0x55
 8002bdc:	f7fd fea6 	bl	800092c <lcd_wr_xdata>
 8002be0:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002be4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8002be8:	22b1      	movs	r2, #177	@ 0xb1
 8002bea:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002bec:	4b9c      	ldr	r3, [pc, #624]	@ (8002e60 <lcd_init+0x12b8>)
 8002bee:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002bf2:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002bf4:	4b9a      	ldr	r3, [pc, #616]	@ (8002e60 <lcd_init+0x12b8>)
 8002bf6:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002bfa:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002bfc:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002c00:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8002c04:	881b      	ldrh	r3, [r3, #0]
 8002c06:	b29a      	uxth	r2, r3
 8002c08:	4b96      	ldr	r3, [pc, #600]	@ (8002e64 <lcd_init+0x12bc>)
 8002c0a:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002c0c:	4b94      	ldr	r3, [pc, #592]	@ (8002e60 <lcd_init+0x12b8>)
 8002c0e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002c12:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002c14:	4b92      	ldr	r3, [pc, #584]	@ (8002e60 <lcd_init+0x12b8>)
 8002c16:	2280      	movs	r2, #128	@ 0x80
 8002c18:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002c1a:	4b91      	ldr	r3, [pc, #580]	@ (8002e60 <lcd_init+0x12b8>)
 8002c1c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002c20:	611a      	str	r2, [r3, #16]
}
 8002c22:	bf00      	nop
        lcd_wr_regno(0xB1);
        lcd_wr_xdata(0x00);
 8002c24:	2000      	movs	r0, #0
 8002c26:	f7fd fe81 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x1A);
 8002c2a:	201a      	movs	r0, #26
 8002c2c:	f7fd fe7e 	bl	800092c <lcd_wr_xdata>
 8002c30:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002c34:	f5a3 7385 	sub.w	r3, r3, #266	@ 0x10a
 8002c38:	22b6      	movs	r2, #182	@ 0xb6
 8002c3a:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002c3c:	4b88      	ldr	r3, [pc, #544]	@ (8002e60 <lcd_init+0x12b8>)
 8002c3e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002c42:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002c44:	4b86      	ldr	r3, [pc, #536]	@ (8002e60 <lcd_init+0x12b8>)
 8002c46:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002c4a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002c4c:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002c50:	f5a3 7385 	sub.w	r3, r3, #266	@ 0x10a
 8002c54:	881b      	ldrh	r3, [r3, #0]
 8002c56:	b29a      	uxth	r2, r3
 8002c58:	4b82      	ldr	r3, [pc, #520]	@ (8002e64 <lcd_init+0x12bc>)
 8002c5a:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002c5c:	4b80      	ldr	r3, [pc, #512]	@ (8002e60 <lcd_init+0x12b8>)
 8002c5e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002c62:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002c64:	4b7e      	ldr	r3, [pc, #504]	@ (8002e60 <lcd_init+0x12b8>)
 8002c66:	2280      	movs	r2, #128	@ 0x80
 8002c68:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002c6a:	4b7d      	ldr	r3, [pc, #500]	@ (8002e60 <lcd_init+0x12b8>)
 8002c6c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002c70:	611a      	str	r2, [r3, #16]
}
 8002c72:	bf00      	nop
        lcd_wr_regno(0xB6); /*  Display Function Control */
        lcd_wr_xdata(0x0A);
 8002c74:	200a      	movs	r0, #10
 8002c76:	f7fd fe59 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA2);
 8002c7a:	20a2      	movs	r0, #162	@ 0xa2
 8002c7c:	f7fd fe56 	bl	800092c <lcd_wr_xdata>
 8002c80:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002c84:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8002c88:	22f2      	movs	r2, #242	@ 0xf2
 8002c8a:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002c8c:	4b74      	ldr	r3, [pc, #464]	@ (8002e60 <lcd_init+0x12b8>)
 8002c8e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002c92:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002c94:	4b72      	ldr	r3, [pc, #456]	@ (8002e60 <lcd_init+0x12b8>)
 8002c96:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002c9a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002c9c:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002ca0:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8002ca4:	881b      	ldrh	r3, [r3, #0]
 8002ca6:	b29a      	uxth	r2, r3
 8002ca8:	4b6e      	ldr	r3, [pc, #440]	@ (8002e64 <lcd_init+0x12bc>)
 8002caa:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002cac:	4b6c      	ldr	r3, [pc, #432]	@ (8002e60 <lcd_init+0x12b8>)
 8002cae:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002cb2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002cb4:	4b6a      	ldr	r3, [pc, #424]	@ (8002e60 <lcd_init+0x12b8>)
 8002cb6:	2280      	movs	r2, #128	@ 0x80
 8002cb8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002cba:	4b69      	ldr	r3, [pc, #420]	@ (8002e60 <lcd_init+0x12b8>)
 8002cbc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002cc0:	611a      	str	r2, [r3, #16]
}
 8002cc2:	bf00      	nop
        lcd_wr_regno(0xF2); /*  3Gamma Function Disable */
        lcd_wr_xdata(0x00);
 8002cc4:	2000      	movs	r0, #0
 8002cc6:	f7fd fe31 	bl	800092c <lcd_wr_xdata>
 8002cca:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002cce:	f5a3 7387 	sub.w	r3, r3, #270	@ 0x10e
 8002cd2:	2226      	movs	r2, #38	@ 0x26
 8002cd4:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002cd6:	4b62      	ldr	r3, [pc, #392]	@ (8002e60 <lcd_init+0x12b8>)
 8002cd8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002cdc:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002cde:	4b60      	ldr	r3, [pc, #384]	@ (8002e60 <lcd_init+0x12b8>)
 8002ce0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002ce4:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002ce6:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002cea:	f5a3 7387 	sub.w	r3, r3, #270	@ 0x10e
 8002cee:	881b      	ldrh	r3, [r3, #0]
 8002cf0:	b29a      	uxth	r2, r3
 8002cf2:	4b5c      	ldr	r3, [pc, #368]	@ (8002e64 <lcd_init+0x12bc>)
 8002cf4:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002cf6:	4b5a      	ldr	r3, [pc, #360]	@ (8002e60 <lcd_init+0x12b8>)
 8002cf8:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002cfc:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002cfe:	4b58      	ldr	r3, [pc, #352]	@ (8002e60 <lcd_init+0x12b8>)
 8002d00:	2280      	movs	r2, #128	@ 0x80
 8002d02:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002d04:	4b56      	ldr	r3, [pc, #344]	@ (8002e60 <lcd_init+0x12b8>)
 8002d06:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002d0a:	611a      	str	r2, [r3, #16]
}
 8002d0c:	bf00      	nop
        lcd_wr_regno(0x26); /* Gamma curve selected */
        lcd_wr_xdata(0x01);
 8002d0e:	2001      	movs	r0, #1
 8002d10:	f7fd fe0c 	bl	800092c <lcd_wr_xdata>
 8002d14:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002d18:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 8002d1c:	22e0      	movs	r2, #224	@ 0xe0
 8002d1e:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002d20:	4b4f      	ldr	r3, [pc, #316]	@ (8002e60 <lcd_init+0x12b8>)
 8002d22:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002d26:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002d28:	4b4d      	ldr	r3, [pc, #308]	@ (8002e60 <lcd_init+0x12b8>)
 8002d2a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002d2e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002d30:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002d34:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 8002d38:	881b      	ldrh	r3, [r3, #0]
 8002d3a:	b29a      	uxth	r2, r3
 8002d3c:	4b49      	ldr	r3, [pc, #292]	@ (8002e64 <lcd_init+0x12bc>)
 8002d3e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002d40:	4b47      	ldr	r3, [pc, #284]	@ (8002e60 <lcd_init+0x12b8>)
 8002d42:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002d46:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002d48:	4b45      	ldr	r3, [pc, #276]	@ (8002e60 <lcd_init+0x12b8>)
 8002d4a:	2280      	movs	r2, #128	@ 0x80
 8002d4c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002d4e:	4b44      	ldr	r3, [pc, #272]	@ (8002e60 <lcd_init+0x12b8>)
 8002d50:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002d54:	611a      	str	r2, [r3, #16]
}
 8002d56:	bf00      	nop
        lcd_wr_regno(0xE0); /* Set Gamma */
        lcd_wr_xdata(0x0F);
 8002d58:	200f      	movs	r0, #15
 8002d5a:	f7fd fde7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x2A);
 8002d5e:	202a      	movs	r0, #42	@ 0x2a
 8002d60:	f7fd fde4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x28);
 8002d64:	2028      	movs	r0, #40	@ 0x28
 8002d66:	f7fd fde1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x08);
 8002d6a:	2008      	movs	r0, #8
 8002d6c:	f7fd fdde 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0E);
 8002d70:	200e      	movs	r0, #14
 8002d72:	f7fd fddb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x08);
 8002d76:	2008      	movs	r0, #8
 8002d78:	f7fd fdd8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x54);
 8002d7c:	2054      	movs	r0, #84	@ 0x54
 8002d7e:	f7fd fdd5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0XA9);
 8002d82:	20a9      	movs	r0, #169	@ 0xa9
 8002d84:	f7fd fdd2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x43);
 8002d88:	2043      	movs	r0, #67	@ 0x43
 8002d8a:	f7fd fdcf 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0A);
 8002d8e:	200a      	movs	r0, #10
 8002d90:	f7fd fdcc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0F);
 8002d94:	200f      	movs	r0, #15
 8002d96:	f7fd fdc9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8002d9a:	2000      	movs	r0, #0
 8002d9c:	f7fd fdc6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8002da0:	2000      	movs	r0, #0
 8002da2:	f7fd fdc3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8002da6:	2000      	movs	r0, #0
 8002da8:	f7fd fdc0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8002dac:	2000      	movs	r0, #0
 8002dae:	f7fd fdbd 	bl	800092c <lcd_wr_xdata>
 8002db2:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002db6:	f5a3 7389 	sub.w	r3, r3, #274	@ 0x112
 8002dba:	22e1      	movs	r2, #225	@ 0xe1
 8002dbc:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002dbe:	4b28      	ldr	r3, [pc, #160]	@ (8002e60 <lcd_init+0x12b8>)
 8002dc0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002dc4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002dc6:	4b26      	ldr	r3, [pc, #152]	@ (8002e60 <lcd_init+0x12b8>)
 8002dc8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002dcc:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002dce:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002dd2:	f5a3 7389 	sub.w	r3, r3, #274	@ 0x112
 8002dd6:	881b      	ldrh	r3, [r3, #0]
 8002dd8:	b29a      	uxth	r2, r3
 8002dda:	4b22      	ldr	r3, [pc, #136]	@ (8002e64 <lcd_init+0x12bc>)
 8002ddc:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002dde:	4b20      	ldr	r3, [pc, #128]	@ (8002e60 <lcd_init+0x12b8>)
 8002de0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002de4:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002de6:	4b1e      	ldr	r3, [pc, #120]	@ (8002e60 <lcd_init+0x12b8>)
 8002de8:	2280      	movs	r2, #128	@ 0x80
 8002dea:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002dec:	4b1c      	ldr	r3, [pc, #112]	@ (8002e60 <lcd_init+0x12b8>)
 8002dee:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002df2:	611a      	str	r2, [r3, #16]
}
 8002df4:	bf00      	nop
        lcd_wr_regno(0XE1); /* Set Gamma */
        lcd_wr_xdata(0x00);
 8002df6:	2000      	movs	r0, #0
 8002df8:	f7fd fd98 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x15);
 8002dfc:	2015      	movs	r0, #21
 8002dfe:	f7fd fd95 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x17);
 8002e02:	2017      	movs	r0, #23
 8002e04:	f7fd fd92 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x07);
 8002e08:	2007      	movs	r0, #7
 8002e0a:	f7fd fd8f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x11);
 8002e0e:	2011      	movs	r0, #17
 8002e10:	f7fd fd8c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x06);
 8002e14:	2006      	movs	r0, #6
 8002e16:	f7fd fd89 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x2B);
 8002e1a:	202b      	movs	r0, #43	@ 0x2b
 8002e1c:	f7fd fd86 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x56);
 8002e20:	2056      	movs	r0, #86	@ 0x56
 8002e22:	f7fd fd83 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x3C);
 8002e26:	203c      	movs	r0, #60	@ 0x3c
 8002e28:	f7fd fd80 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x05);
 8002e2c:	2005      	movs	r0, #5
 8002e2e:	f7fd fd7d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x10);
 8002e32:	2010      	movs	r0, #16
 8002e34:	f7fd fd7a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0F);
 8002e38:	200f      	movs	r0, #15
 8002e3a:	f7fd fd77 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x3F);
 8002e3e:	203f      	movs	r0, #63	@ 0x3f
 8002e40:	f7fd fd74 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x3F);
 8002e44:	203f      	movs	r0, #63	@ 0x3f
 8002e46:	f7fd fd71 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0F);
 8002e4a:	200f      	movs	r0, #15
 8002e4c:	f7fd fd6e 	bl	800092c <lcd_wr_xdata>
 8002e50:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002e54:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8002e58:	222b      	movs	r2, #43	@ 0x2b
 8002e5a:	801a      	strh	r2, [r3, #0]
 8002e5c:	e004      	b.n	8002e68 <lcd_init+0x12c0>
 8002e5e:	bf00      	nop
 8002e60:	40011000 	.word	0x40011000
 8002e64:	40010c00 	.word	0x40010c00
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002e68:	4b4e      	ldr	r3, [pc, #312]	@ (8002fa4 <lcd_init+0x13fc>)
 8002e6a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002e6e:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002e70:	4b4c      	ldr	r3, [pc, #304]	@ (8002fa4 <lcd_init+0x13fc>)
 8002e72:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002e76:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002e78:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002e7c:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8002e80:	881b      	ldrh	r3, [r3, #0]
 8002e82:	b29a      	uxth	r2, r3
 8002e84:	4b48      	ldr	r3, [pc, #288]	@ (8002fa8 <lcd_init+0x1400>)
 8002e86:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002e88:	4b46      	ldr	r3, [pc, #280]	@ (8002fa4 <lcd_init+0x13fc>)
 8002e8a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002e8e:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002e90:	4b44      	ldr	r3, [pc, #272]	@ (8002fa4 <lcd_init+0x13fc>)
 8002e92:	2280      	movs	r2, #128	@ 0x80
 8002e94:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002e96:	4b43      	ldr	r3, [pc, #268]	@ (8002fa4 <lcd_init+0x13fc>)
 8002e98:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002e9c:	611a      	str	r2, [r3, #16]
}
 8002e9e:	bf00      	nop
        lcd_wr_regno(0x2B);
        lcd_wr_xdata(0x00);
 8002ea0:	2000      	movs	r0, #0
 8002ea2:	f7fd fd43 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8002ea6:	2000      	movs	r0, #0
 8002ea8:	f7fd fd40 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01);
 8002eac:	2001      	movs	r0, #1
 8002eae:	f7fd fd3d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x3f);
 8002eb2:	203f      	movs	r0, #63	@ 0x3f
 8002eb4:	f7fd fd3a 	bl	800092c <lcd_wr_xdata>
 8002eb8:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002ebc:	f5a3 738b 	sub.w	r3, r3, #278	@ 0x116
 8002ec0:	222a      	movs	r2, #42	@ 0x2a
 8002ec2:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002ec4:	4b37      	ldr	r3, [pc, #220]	@ (8002fa4 <lcd_init+0x13fc>)
 8002ec6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002eca:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002ecc:	4b35      	ldr	r3, [pc, #212]	@ (8002fa4 <lcd_init+0x13fc>)
 8002ece:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002ed2:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002ed4:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002ed8:	f5a3 738b 	sub.w	r3, r3, #278	@ 0x116
 8002edc:	881b      	ldrh	r3, [r3, #0]
 8002ede:	b29a      	uxth	r2, r3
 8002ee0:	4b31      	ldr	r3, [pc, #196]	@ (8002fa8 <lcd_init+0x1400>)
 8002ee2:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002ee4:	4b2f      	ldr	r3, [pc, #188]	@ (8002fa4 <lcd_init+0x13fc>)
 8002ee6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002eea:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002eec:	4b2d      	ldr	r3, [pc, #180]	@ (8002fa4 <lcd_init+0x13fc>)
 8002eee:	2280      	movs	r2, #128	@ 0x80
 8002ef0:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002ef2:	4b2c      	ldr	r3, [pc, #176]	@ (8002fa4 <lcd_init+0x13fc>)
 8002ef4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002ef8:	611a      	str	r2, [r3, #16]
}
 8002efa:	bf00      	nop
        lcd_wr_regno(0x2A);
        lcd_wr_xdata(0x00);
 8002efc:	2000      	movs	r0, #0
 8002efe:	f7fd fd15 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8002f02:	2000      	movs	r0, #0
 8002f04:	f7fd fd12 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8002f08:	2000      	movs	r0, #0
 8002f0a:	f7fd fd0f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xef);
 8002f0e:	20ef      	movs	r0, #239	@ 0xef
 8002f10:	f7fd fd0c 	bl	800092c <lcd_wr_xdata>
 8002f14:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002f18:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8002f1c:	2211      	movs	r2, #17
 8002f1e:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002f20:	4b20      	ldr	r3, [pc, #128]	@ (8002fa4 <lcd_init+0x13fc>)
 8002f22:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002f26:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002f28:	4b1e      	ldr	r3, [pc, #120]	@ (8002fa4 <lcd_init+0x13fc>)
 8002f2a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002f2e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002f30:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002f34:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8002f38:	881b      	ldrh	r3, [r3, #0]
 8002f3a:	b29a      	uxth	r2, r3
 8002f3c:	4b1a      	ldr	r3, [pc, #104]	@ (8002fa8 <lcd_init+0x1400>)
 8002f3e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002f40:	4b18      	ldr	r3, [pc, #96]	@ (8002fa4 <lcd_init+0x13fc>)
 8002f42:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002f46:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002f48:	4b16      	ldr	r3, [pc, #88]	@ (8002fa4 <lcd_init+0x13fc>)
 8002f4a:	2280      	movs	r2, #128	@ 0x80
 8002f4c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002f4e:	4b15      	ldr	r3, [pc, #84]	@ (8002fa4 <lcd_init+0x13fc>)
 8002f50:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002f54:	611a      	str	r2, [r3, #16]
}
 8002f56:	bf00      	nop
        lcd_wr_regno(0x11); /* Exit Sleep */
        HAL_Delay(120);
 8002f58:	2078      	movs	r0, #120	@ 0x78
 8002f5a:	f004 faad 	bl	80074b8 <HAL_Delay>
 8002f5e:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002f62:	f5a3 738d 	sub.w	r3, r3, #282	@ 0x11a
 8002f66:	2229      	movs	r2, #41	@ 0x29
 8002f68:	801a      	strh	r2, [r3, #0]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002f6a:	4b0e      	ldr	r3, [pc, #56]	@ (8002fa4 <lcd_init+0x13fc>)
 8002f6c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002f70:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002f72:	4b0c      	ldr	r3, [pc, #48]	@ (8002fa4 <lcd_init+0x13fc>)
 8002f74:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002f78:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002f7a:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8002f7e:	f5a3 738d 	sub.w	r3, r3, #282	@ 0x11a
 8002f82:	881b      	ldrh	r3, [r3, #0]
 8002f84:	b29a      	uxth	r2, r3
 8002f86:	4b08      	ldr	r3, [pc, #32]	@ (8002fa8 <lcd_init+0x1400>)
 8002f88:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002f8a:	4b06      	ldr	r3, [pc, #24]	@ (8002fa4 <lcd_init+0x13fc>)
 8002f8c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002f90:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002f92:	4b04      	ldr	r3, [pc, #16]	@ (8002fa4 <lcd_init+0x13fc>)
 8002f94:	2280      	movs	r2, #128	@ 0x80
 8002f96:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002f98:	4b02      	ldr	r3, [pc, #8]	@ (8002fa4 <lcd_init+0x13fc>)
 8002f9a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002f9e:	611a      	str	r2, [r3, #16]
}
 8002fa0:	f003 bd4b 	b.w	8006a3a <lcd_init+0x4e92>
 8002fa4:	40011000 	.word	0x40011000
 8002fa8:	40010c00 	.word	0x40010c00
        lcd_wr_regno(0x29); /* display on */
    }
    else if (lcddev.id == 0x5310)
 8002fac:	4bbe      	ldr	r3, [pc, #760]	@ (80032a8 <lcd_init+0x1700>)
 8002fae:	889b      	ldrh	r3, [r3, #4]
 8002fb0:	f245 3210 	movw	r2, #21264	@ 0x5310
 8002fb4:	4293      	cmp	r3, r2
 8002fb6:	f041 846d 	bne.w	8004894 <lcd_init+0x2cec>
 8002fba:	23ed      	movs	r3, #237	@ 0xed
 8002fbc:	f8a7 30da 	strh.w	r3, [r7, #218]	@ 0xda
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8002fc0:	4bba      	ldr	r3, [pc, #744]	@ (80032ac <lcd_init+0x1704>)
 8002fc2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8002fc6:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8002fc8:	4bb8      	ldr	r3, [pc, #736]	@ (80032ac <lcd_init+0x1704>)
 8002fca:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8002fce:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8002fd0:	f8b7 30da 	ldrh.w	r3, [r7, #218]	@ 0xda
 8002fd4:	b29a      	uxth	r2, r3
 8002fd6:	4bb6      	ldr	r3, [pc, #728]	@ (80032b0 <lcd_init+0x1708>)
 8002fd8:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8002fda:	4bb4      	ldr	r3, [pc, #720]	@ (80032ac <lcd_init+0x1704>)
 8002fdc:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8002fe0:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8002fe2:	4bb2      	ldr	r3, [pc, #712]	@ (80032ac <lcd_init+0x1704>)
 8002fe4:	2280      	movs	r2, #128	@ 0x80
 8002fe6:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8002fe8:	4bb0      	ldr	r3, [pc, #704]	@ (80032ac <lcd_init+0x1704>)
 8002fea:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002fee:	611a      	str	r2, [r3, #16]
}
 8002ff0:	bf00      	nop
    {
        //lcd_ex_nt35310_reginit();   /* ִ��NT35310��ʼ�� */
        lcd_wr_regno(0xED);
        lcd_wr_xdata(0x01);
 8002ff2:	2001      	movs	r0, #1
 8002ff4:	f7fd fc9a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xFE);
 8002ff8:	20fe      	movs	r0, #254	@ 0xfe
 8002ffa:	f7fd fc97 	bl	800092c <lcd_wr_xdata>
 8002ffe:	23ee      	movs	r3, #238	@ 0xee
 8003000:	f8a7 30d8 	strh.w	r3, [r7, #216]	@ 0xd8
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003004:	4ba9      	ldr	r3, [pc, #676]	@ (80032ac <lcd_init+0x1704>)
 8003006:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800300a:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800300c:	4ba7      	ldr	r3, [pc, #668]	@ (80032ac <lcd_init+0x1704>)
 800300e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003012:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003014:	f8b7 30d8 	ldrh.w	r3, [r7, #216]	@ 0xd8
 8003018:	b29a      	uxth	r2, r3
 800301a:	4ba5      	ldr	r3, [pc, #660]	@ (80032b0 <lcd_init+0x1708>)
 800301c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800301e:	4ba3      	ldr	r3, [pc, #652]	@ (80032ac <lcd_init+0x1704>)
 8003020:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003024:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003026:	4ba1      	ldr	r3, [pc, #644]	@ (80032ac <lcd_init+0x1704>)
 8003028:	2280      	movs	r2, #128	@ 0x80
 800302a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800302c:	4b9f      	ldr	r3, [pc, #636]	@ (80032ac <lcd_init+0x1704>)
 800302e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003032:	611a      	str	r2, [r3, #16]
}
 8003034:	bf00      	nop

        lcd_wr_regno(0xEE);
        lcd_wr_xdata(0xDE);
 8003036:	20de      	movs	r0, #222	@ 0xde
 8003038:	f7fd fc78 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x21);
 800303c:	2021      	movs	r0, #33	@ 0x21
 800303e:	f7fd fc75 	bl	800092c <lcd_wr_xdata>
 8003042:	23f1      	movs	r3, #241	@ 0xf1
 8003044:	f8a7 30d6 	strh.w	r3, [r7, #214]	@ 0xd6
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003048:	4b98      	ldr	r3, [pc, #608]	@ (80032ac <lcd_init+0x1704>)
 800304a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800304e:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003050:	4b96      	ldr	r3, [pc, #600]	@ (80032ac <lcd_init+0x1704>)
 8003052:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003056:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003058:	f8b7 30d6 	ldrh.w	r3, [r7, #214]	@ 0xd6
 800305c:	b29a      	uxth	r2, r3
 800305e:	4b94      	ldr	r3, [pc, #592]	@ (80032b0 <lcd_init+0x1708>)
 8003060:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003062:	4b92      	ldr	r3, [pc, #584]	@ (80032ac <lcd_init+0x1704>)
 8003064:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003068:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800306a:	4b90      	ldr	r3, [pc, #576]	@ (80032ac <lcd_init+0x1704>)
 800306c:	2280      	movs	r2, #128	@ 0x80
 800306e:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003070:	4b8e      	ldr	r3, [pc, #568]	@ (80032ac <lcd_init+0x1704>)
 8003072:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003076:	611a      	str	r2, [r3, #16]
}
 8003078:	bf00      	nop

        lcd_wr_regno(0xF1);
        lcd_wr_xdata(0x01);
 800307a:	2001      	movs	r0, #1
 800307c:	f7fd fc56 	bl	800092c <lcd_wr_xdata>
 8003080:	23df      	movs	r3, #223	@ 0xdf
 8003082:	f8a7 30d4 	strh.w	r3, [r7, #212]	@ 0xd4
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003086:	4b89      	ldr	r3, [pc, #548]	@ (80032ac <lcd_init+0x1704>)
 8003088:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800308c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800308e:	4b87      	ldr	r3, [pc, #540]	@ (80032ac <lcd_init+0x1704>)
 8003090:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003094:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003096:	f8b7 30d4 	ldrh.w	r3, [r7, #212]	@ 0xd4
 800309a:	b29a      	uxth	r2, r3
 800309c:	4b84      	ldr	r3, [pc, #528]	@ (80032b0 <lcd_init+0x1708>)
 800309e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80030a0:	4b82      	ldr	r3, [pc, #520]	@ (80032ac <lcd_init+0x1704>)
 80030a2:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80030a6:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80030a8:	4b80      	ldr	r3, [pc, #512]	@ (80032ac <lcd_init+0x1704>)
 80030aa:	2280      	movs	r2, #128	@ 0x80
 80030ac:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80030ae:	4b7f      	ldr	r3, [pc, #508]	@ (80032ac <lcd_init+0x1704>)
 80030b0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80030b4:	611a      	str	r2, [r3, #16]
}
 80030b6:	bf00      	nop
        lcd_wr_regno(0xDF);
        lcd_wr_xdata(0x10);
 80030b8:	2010      	movs	r0, #16
 80030ba:	f7fd fc37 	bl	800092c <lcd_wr_xdata>
 80030be:	23c4      	movs	r3, #196	@ 0xc4
 80030c0:	f8a7 30d2 	strh.w	r3, [r7, #210]	@ 0xd2
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80030c4:	4b79      	ldr	r3, [pc, #484]	@ (80032ac <lcd_init+0x1704>)
 80030c6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80030ca:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80030cc:	4b77      	ldr	r3, [pc, #476]	@ (80032ac <lcd_init+0x1704>)
 80030ce:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80030d2:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80030d4:	f8b7 30d2 	ldrh.w	r3, [r7, #210]	@ 0xd2
 80030d8:	b29a      	uxth	r2, r3
 80030da:	4b75      	ldr	r3, [pc, #468]	@ (80032b0 <lcd_init+0x1708>)
 80030dc:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80030de:	4b73      	ldr	r3, [pc, #460]	@ (80032ac <lcd_init+0x1704>)
 80030e0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80030e4:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80030e6:	4b71      	ldr	r3, [pc, #452]	@ (80032ac <lcd_init+0x1704>)
 80030e8:	2280      	movs	r2, #128	@ 0x80
 80030ea:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80030ec:	4b6f      	ldr	r3, [pc, #444]	@ (80032ac <lcd_init+0x1704>)
 80030ee:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80030f2:	611a      	str	r2, [r3, #16]
}
 80030f4:	bf00      	nop

        /* VCOMvoltage */
        lcd_wr_regno(0xC4);
        lcd_wr_xdata(0x8F);  /* 5f */
 80030f6:	208f      	movs	r0, #143	@ 0x8f
 80030f8:	f7fd fc18 	bl	800092c <lcd_wr_xdata>
 80030fc:	23c6      	movs	r3, #198	@ 0xc6
 80030fe:	f8a7 30d0 	strh.w	r3, [r7, #208]	@ 0xd0
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003102:	4b6a      	ldr	r3, [pc, #424]	@ (80032ac <lcd_init+0x1704>)
 8003104:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003108:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800310a:	4b68      	ldr	r3, [pc, #416]	@ (80032ac <lcd_init+0x1704>)
 800310c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003110:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003112:	f8b7 30d0 	ldrh.w	r3, [r7, #208]	@ 0xd0
 8003116:	b29a      	uxth	r2, r3
 8003118:	4b65      	ldr	r3, [pc, #404]	@ (80032b0 <lcd_init+0x1708>)
 800311a:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800311c:	4b63      	ldr	r3, [pc, #396]	@ (80032ac <lcd_init+0x1704>)
 800311e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003122:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003124:	4b61      	ldr	r3, [pc, #388]	@ (80032ac <lcd_init+0x1704>)
 8003126:	2280      	movs	r2, #128	@ 0x80
 8003128:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800312a:	4b60      	ldr	r3, [pc, #384]	@ (80032ac <lcd_init+0x1704>)
 800312c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003130:	611a      	str	r2, [r3, #16]
}
 8003132:	bf00      	nop

        lcd_wr_regno(0xC6);
        lcd_wr_xdata(0x00);
 8003134:	2000      	movs	r0, #0
 8003136:	f7fd fbf9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xE2);
 800313a:	20e2      	movs	r0, #226	@ 0xe2
 800313c:	f7fd fbf6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xE2);
 8003140:	20e2      	movs	r0, #226	@ 0xe2
 8003142:	f7fd fbf3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xE2);
 8003146:	20e2      	movs	r0, #226	@ 0xe2
 8003148:	f7fd fbf0 	bl	800092c <lcd_wr_xdata>
 800314c:	23bf      	movs	r3, #191	@ 0xbf
 800314e:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003152:	4b56      	ldr	r3, [pc, #344]	@ (80032ac <lcd_init+0x1704>)
 8003154:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003158:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800315a:	4b54      	ldr	r3, [pc, #336]	@ (80032ac <lcd_init+0x1704>)
 800315c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003160:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003162:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8003166:	b29a      	uxth	r2, r3
 8003168:	4b51      	ldr	r3, [pc, #324]	@ (80032b0 <lcd_init+0x1708>)
 800316a:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800316c:	4b4f      	ldr	r3, [pc, #316]	@ (80032ac <lcd_init+0x1704>)
 800316e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003172:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003174:	4b4d      	ldr	r3, [pc, #308]	@ (80032ac <lcd_init+0x1704>)
 8003176:	2280      	movs	r2, #128	@ 0x80
 8003178:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800317a:	4b4c      	ldr	r3, [pc, #304]	@ (80032ac <lcd_init+0x1704>)
 800317c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003180:	611a      	str	r2, [r3, #16]
}
 8003182:	bf00      	nop
        lcd_wr_regno(0xBF);
        lcd_wr_xdata(0xAA);
 8003184:	20aa      	movs	r0, #170	@ 0xaa
 8003186:	f7fd fbd1 	bl	800092c <lcd_wr_xdata>
 800318a:	23b0      	movs	r3, #176	@ 0xb0
 800318c:	f8a7 30cc 	strh.w	r3, [r7, #204]	@ 0xcc
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003190:	4b46      	ldr	r3, [pc, #280]	@ (80032ac <lcd_init+0x1704>)
 8003192:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003196:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003198:	4b44      	ldr	r3, [pc, #272]	@ (80032ac <lcd_init+0x1704>)
 800319a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800319e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80031a0:	f8b7 30cc 	ldrh.w	r3, [r7, #204]	@ 0xcc
 80031a4:	b29a      	uxth	r2, r3
 80031a6:	4b42      	ldr	r3, [pc, #264]	@ (80032b0 <lcd_init+0x1708>)
 80031a8:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80031aa:	4b40      	ldr	r3, [pc, #256]	@ (80032ac <lcd_init+0x1704>)
 80031ac:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80031b0:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80031b2:	4b3e      	ldr	r3, [pc, #248]	@ (80032ac <lcd_init+0x1704>)
 80031b4:	2280      	movs	r2, #128	@ 0x80
 80031b6:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80031b8:	4b3c      	ldr	r3, [pc, #240]	@ (80032ac <lcd_init+0x1704>)
 80031ba:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80031be:	611a      	str	r2, [r3, #16]
}
 80031c0:	bf00      	nop

        lcd_wr_regno(0xB0);
        lcd_wr_xdata(0x0D);
 80031c2:	200d      	movs	r0, #13
 80031c4:	f7fd fbb2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80031c8:	2000      	movs	r0, #0
 80031ca:	f7fd fbaf 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0D);
 80031ce:	200d      	movs	r0, #13
 80031d0:	f7fd fbac 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80031d4:	2000      	movs	r0, #0
 80031d6:	f7fd fba9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x11);
 80031da:	2011      	movs	r0, #17
 80031dc:	f7fd fba6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80031e0:	2000      	movs	r0, #0
 80031e2:	f7fd fba3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x19);
 80031e6:	2019      	movs	r0, #25
 80031e8:	f7fd fba0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80031ec:	2000      	movs	r0, #0
 80031ee:	f7fd fb9d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x21);
 80031f2:	2021      	movs	r0, #33	@ 0x21
 80031f4:	f7fd fb9a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80031f8:	2000      	movs	r0, #0
 80031fa:	f7fd fb97 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x2D);
 80031fe:	202d      	movs	r0, #45	@ 0x2d
 8003200:	f7fd fb94 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003204:	2000      	movs	r0, #0
 8003206:	f7fd fb91 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x3D);
 800320a:	203d      	movs	r0, #61	@ 0x3d
 800320c:	f7fd fb8e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003210:	2000      	movs	r0, #0
 8003212:	f7fd fb8b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x5D);
 8003216:	205d      	movs	r0, #93	@ 0x5d
 8003218:	f7fd fb88 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800321c:	2000      	movs	r0, #0
 800321e:	f7fd fb85 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x5D);
 8003222:	205d      	movs	r0, #93	@ 0x5d
 8003224:	f7fd fb82 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003228:	2000      	movs	r0, #0
 800322a:	f7fd fb7f 	bl	800092c <lcd_wr_xdata>
 800322e:	23b1      	movs	r3, #177	@ 0xb1
 8003230:	f8a7 30ca 	strh.w	r3, [r7, #202]	@ 0xca
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003234:	4b1d      	ldr	r3, [pc, #116]	@ (80032ac <lcd_init+0x1704>)
 8003236:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800323a:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800323c:	4b1b      	ldr	r3, [pc, #108]	@ (80032ac <lcd_init+0x1704>)
 800323e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003242:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003244:	f8b7 30ca 	ldrh.w	r3, [r7, #202]	@ 0xca
 8003248:	b29a      	uxth	r2, r3
 800324a:	4b19      	ldr	r3, [pc, #100]	@ (80032b0 <lcd_init+0x1708>)
 800324c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800324e:	4b17      	ldr	r3, [pc, #92]	@ (80032ac <lcd_init+0x1704>)
 8003250:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003254:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003256:	4b15      	ldr	r3, [pc, #84]	@ (80032ac <lcd_init+0x1704>)
 8003258:	2280      	movs	r2, #128	@ 0x80
 800325a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800325c:	4b13      	ldr	r3, [pc, #76]	@ (80032ac <lcd_init+0x1704>)
 800325e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003262:	611a      	str	r2, [r3, #16]
}
 8003264:	bf00      	nop

        lcd_wr_regno(0xB1);
        lcd_wr_xdata(0x80);
 8003266:	2080      	movs	r0, #128	@ 0x80
 8003268:	f7fd fb60 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800326c:	2000      	movs	r0, #0
 800326e:	f7fd fb5d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x8B);
 8003272:	208b      	movs	r0, #139	@ 0x8b
 8003274:	f7fd fb5a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003278:	2000      	movs	r0, #0
 800327a:	f7fd fb57 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x96);
 800327e:	2096      	movs	r0, #150	@ 0x96
 8003280:	f7fd fb54 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003284:	2000      	movs	r0, #0
 8003286:	f7fd fb51 	bl	800092c <lcd_wr_xdata>
 800328a:	23b2      	movs	r3, #178	@ 0xb2
 800328c:	f8a7 30c8 	strh.w	r3, [r7, #200]	@ 0xc8
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003290:	4b06      	ldr	r3, [pc, #24]	@ (80032ac <lcd_init+0x1704>)
 8003292:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003296:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003298:	4b04      	ldr	r3, [pc, #16]	@ (80032ac <lcd_init+0x1704>)
 800329a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800329e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80032a0:	f8b7 30c8 	ldrh.w	r3, [r7, #200]	@ 0xc8
 80032a4:	b29a      	uxth	r2, r3
 80032a6:	e005      	b.n	80032b4 <lcd_init+0x170c>
 80032a8:	2000002c 	.word	0x2000002c
 80032ac:	40011000 	.word	0x40011000
 80032b0:	40010c00 	.word	0x40010c00
 80032b4:	4bd0      	ldr	r3, [pc, #832]	@ (80035f8 <lcd_init+0x1a50>)
 80032b6:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80032b8:	4bd0      	ldr	r3, [pc, #832]	@ (80035fc <lcd_init+0x1a54>)
 80032ba:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80032be:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80032c0:	4bce      	ldr	r3, [pc, #824]	@ (80035fc <lcd_init+0x1a54>)
 80032c2:	2280      	movs	r2, #128	@ 0x80
 80032c4:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80032c6:	4bcd      	ldr	r3, [pc, #820]	@ (80035fc <lcd_init+0x1a54>)
 80032c8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80032cc:	611a      	str	r2, [r3, #16]
}
 80032ce:	bf00      	nop

        lcd_wr_regno(0xB2);
        lcd_wr_xdata(0x00);
 80032d0:	2000      	movs	r0, #0
 80032d2:	f7fd fb2b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80032d6:	2000      	movs	r0, #0
 80032d8:	f7fd fb28 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x02);
 80032dc:	2002      	movs	r0, #2
 80032de:	f7fd fb25 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80032e2:	2000      	movs	r0, #0
 80032e4:	f7fd fb22 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x03);
 80032e8:	2003      	movs	r0, #3
 80032ea:	f7fd fb1f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80032ee:	2000      	movs	r0, #0
 80032f0:	f7fd fb1c 	bl	800092c <lcd_wr_xdata>
 80032f4:	23b3      	movs	r3, #179	@ 0xb3
 80032f6:	f8a7 30c6 	strh.w	r3, [r7, #198]	@ 0xc6
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80032fa:	4bc0      	ldr	r3, [pc, #768]	@ (80035fc <lcd_init+0x1a54>)
 80032fc:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003300:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003302:	4bbe      	ldr	r3, [pc, #760]	@ (80035fc <lcd_init+0x1a54>)
 8003304:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003308:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800330a:	f8b7 30c6 	ldrh.w	r3, [r7, #198]	@ 0xc6
 800330e:	b29a      	uxth	r2, r3
 8003310:	4bb9      	ldr	r3, [pc, #740]	@ (80035f8 <lcd_init+0x1a50>)
 8003312:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003314:	4bb9      	ldr	r3, [pc, #740]	@ (80035fc <lcd_init+0x1a54>)
 8003316:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800331a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800331c:	4bb7      	ldr	r3, [pc, #732]	@ (80035fc <lcd_init+0x1a54>)
 800331e:	2280      	movs	r2, #128	@ 0x80
 8003320:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003322:	4bb6      	ldr	r3, [pc, #728]	@ (80035fc <lcd_init+0x1a54>)
 8003324:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003328:	611a      	str	r2, [r3, #16]
}
 800332a:	bf00      	nop

        lcd_wr_regno(0xB3);
        lcd_wr_xdata(0x00);
 800332c:	2000      	movs	r0, #0
 800332e:	f7fd fafd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003332:	2000      	movs	r0, #0
 8003334:	f7fd fafa 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003338:	2000      	movs	r0, #0
 800333a:	f7fd faf7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800333e:	2000      	movs	r0, #0
 8003340:	f7fd faf4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003344:	2000      	movs	r0, #0
 8003346:	f7fd faf1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800334a:	2000      	movs	r0, #0
 800334c:	f7fd faee 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003350:	2000      	movs	r0, #0
 8003352:	f7fd faeb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003356:	2000      	movs	r0, #0
 8003358:	f7fd fae8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800335c:	2000      	movs	r0, #0
 800335e:	f7fd fae5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003362:	2000      	movs	r0, #0
 8003364:	f7fd fae2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003368:	2000      	movs	r0, #0
 800336a:	f7fd fadf 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800336e:	2000      	movs	r0, #0
 8003370:	f7fd fadc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003374:	2000      	movs	r0, #0
 8003376:	f7fd fad9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800337a:	2000      	movs	r0, #0
 800337c:	f7fd fad6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003380:	2000      	movs	r0, #0
 8003382:	f7fd fad3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003386:	2000      	movs	r0, #0
 8003388:	f7fd fad0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800338c:	2000      	movs	r0, #0
 800338e:	f7fd facd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003392:	2000      	movs	r0, #0
 8003394:	f7fd faca 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003398:	2000      	movs	r0, #0
 800339a:	f7fd fac7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800339e:	2000      	movs	r0, #0
 80033a0:	f7fd fac4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80033a4:	2000      	movs	r0, #0
 80033a6:	f7fd fac1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80033aa:	2000      	movs	r0, #0
 80033ac:	f7fd fabe 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80033b0:	2000      	movs	r0, #0
 80033b2:	f7fd fabb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80033b6:	2000      	movs	r0, #0
 80033b8:	f7fd fab8 	bl	800092c <lcd_wr_xdata>
 80033bc:	23b4      	movs	r3, #180	@ 0xb4
 80033be:	f8a7 30c4 	strh.w	r3, [r7, #196]	@ 0xc4
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80033c2:	4b8e      	ldr	r3, [pc, #568]	@ (80035fc <lcd_init+0x1a54>)
 80033c4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80033c8:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80033ca:	4b8c      	ldr	r3, [pc, #560]	@ (80035fc <lcd_init+0x1a54>)
 80033cc:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80033d0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80033d2:	f8b7 30c4 	ldrh.w	r3, [r7, #196]	@ 0xc4
 80033d6:	b29a      	uxth	r2, r3
 80033d8:	4b87      	ldr	r3, [pc, #540]	@ (80035f8 <lcd_init+0x1a50>)
 80033da:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80033dc:	4b87      	ldr	r3, [pc, #540]	@ (80035fc <lcd_init+0x1a54>)
 80033de:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80033e2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80033e4:	4b85      	ldr	r3, [pc, #532]	@ (80035fc <lcd_init+0x1a54>)
 80033e6:	2280      	movs	r2, #128	@ 0x80
 80033e8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80033ea:	4b84      	ldr	r3, [pc, #528]	@ (80035fc <lcd_init+0x1a54>)
 80033ec:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80033f0:	611a      	str	r2, [r3, #16]
}
 80033f2:	bf00      	nop

        lcd_wr_regno(0xB4);
        lcd_wr_xdata(0x8B);
 80033f4:	208b      	movs	r0, #139	@ 0x8b
 80033f6:	f7fd fa99 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80033fa:	2000      	movs	r0, #0
 80033fc:	f7fd fa96 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x96);
 8003400:	2096      	movs	r0, #150	@ 0x96
 8003402:	f7fd fa93 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003406:	2000      	movs	r0, #0
 8003408:	f7fd fa90 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA1);
 800340c:	20a1      	movs	r0, #161	@ 0xa1
 800340e:	f7fd fa8d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003412:	2000      	movs	r0, #0
 8003414:	f7fd fa8a 	bl	800092c <lcd_wr_xdata>
 8003418:	23b5      	movs	r3, #181	@ 0xb5
 800341a:	f8a7 30c2 	strh.w	r3, [r7, #194]	@ 0xc2
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800341e:	4b77      	ldr	r3, [pc, #476]	@ (80035fc <lcd_init+0x1a54>)
 8003420:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003424:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003426:	4b75      	ldr	r3, [pc, #468]	@ (80035fc <lcd_init+0x1a54>)
 8003428:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800342c:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800342e:	f8b7 30c2 	ldrh.w	r3, [r7, #194]	@ 0xc2
 8003432:	b29a      	uxth	r2, r3
 8003434:	4b70      	ldr	r3, [pc, #448]	@ (80035f8 <lcd_init+0x1a50>)
 8003436:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003438:	4b70      	ldr	r3, [pc, #448]	@ (80035fc <lcd_init+0x1a54>)
 800343a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800343e:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003440:	4b6e      	ldr	r3, [pc, #440]	@ (80035fc <lcd_init+0x1a54>)
 8003442:	2280      	movs	r2, #128	@ 0x80
 8003444:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003446:	4b6d      	ldr	r3, [pc, #436]	@ (80035fc <lcd_init+0x1a54>)
 8003448:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800344c:	611a      	str	r2, [r3, #16]
}
 800344e:	bf00      	nop

        lcd_wr_regno(0xB5);
        lcd_wr_xdata(0x02);
 8003450:	2002      	movs	r0, #2
 8003452:	f7fd fa6b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003456:	2000      	movs	r0, #0
 8003458:	f7fd fa68 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x03);
 800345c:	2003      	movs	r0, #3
 800345e:	f7fd fa65 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003462:	2000      	movs	r0, #0
 8003464:	f7fd fa62 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x04);
 8003468:	2004      	movs	r0, #4
 800346a:	f7fd fa5f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800346e:	2000      	movs	r0, #0
 8003470:	f7fd fa5c 	bl	800092c <lcd_wr_xdata>
 8003474:	23b6      	movs	r3, #182	@ 0xb6
 8003476:	f8a7 30c0 	strh.w	r3, [r7, #192]	@ 0xc0
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800347a:	4b60      	ldr	r3, [pc, #384]	@ (80035fc <lcd_init+0x1a54>)
 800347c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003480:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003482:	4b5e      	ldr	r3, [pc, #376]	@ (80035fc <lcd_init+0x1a54>)
 8003484:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003488:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800348a:	f8b7 30c0 	ldrh.w	r3, [r7, #192]	@ 0xc0
 800348e:	b29a      	uxth	r2, r3
 8003490:	4b59      	ldr	r3, [pc, #356]	@ (80035f8 <lcd_init+0x1a50>)
 8003492:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003494:	4b59      	ldr	r3, [pc, #356]	@ (80035fc <lcd_init+0x1a54>)
 8003496:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800349a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800349c:	4b57      	ldr	r3, [pc, #348]	@ (80035fc <lcd_init+0x1a54>)
 800349e:	2280      	movs	r2, #128	@ 0x80
 80034a0:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80034a2:	4b56      	ldr	r3, [pc, #344]	@ (80035fc <lcd_init+0x1a54>)
 80034a4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80034a8:	611a      	str	r2, [r3, #16]
}
 80034aa:	bf00      	nop

        lcd_wr_regno(0xB6);
        lcd_wr_xdata(0x00);
 80034ac:	2000      	movs	r0, #0
 80034ae:	f7fd fa3d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80034b2:	2000      	movs	r0, #0
 80034b4:	f7fd fa3a 	bl	800092c <lcd_wr_xdata>
 80034b8:	23b7      	movs	r3, #183	@ 0xb7
 80034ba:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80034be:	4b4f      	ldr	r3, [pc, #316]	@ (80035fc <lcd_init+0x1a54>)
 80034c0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80034c4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80034c6:	4b4d      	ldr	r3, [pc, #308]	@ (80035fc <lcd_init+0x1a54>)
 80034c8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80034cc:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80034ce:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 80034d2:	b29a      	uxth	r2, r3
 80034d4:	4b48      	ldr	r3, [pc, #288]	@ (80035f8 <lcd_init+0x1a50>)
 80034d6:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80034d8:	4b48      	ldr	r3, [pc, #288]	@ (80035fc <lcd_init+0x1a54>)
 80034da:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80034de:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80034e0:	4b46      	ldr	r3, [pc, #280]	@ (80035fc <lcd_init+0x1a54>)
 80034e2:	2280      	movs	r2, #128	@ 0x80
 80034e4:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80034e6:	4b45      	ldr	r3, [pc, #276]	@ (80035fc <lcd_init+0x1a54>)
 80034e8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80034ec:	611a      	str	r2, [r3, #16]
}
 80034ee:	bf00      	nop

        lcd_wr_regno(0xB7);
        lcd_wr_xdata(0x00);
 80034f0:	2000      	movs	r0, #0
 80034f2:	f7fd fa1b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80034f6:	2000      	movs	r0, #0
 80034f8:	f7fd fa18 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x3F);
 80034fc:	203f      	movs	r0, #63	@ 0x3f
 80034fe:	f7fd fa15 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003502:	2000      	movs	r0, #0
 8003504:	f7fd fa12 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x5E);
 8003508:	205e      	movs	r0, #94	@ 0x5e
 800350a:	f7fd fa0f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800350e:	2000      	movs	r0, #0
 8003510:	f7fd fa0c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x64);
 8003514:	2064      	movs	r0, #100	@ 0x64
 8003516:	f7fd fa09 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800351a:	2000      	movs	r0, #0
 800351c:	f7fd fa06 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x8C);
 8003520:	208c      	movs	r0, #140	@ 0x8c
 8003522:	f7fd fa03 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003526:	2000      	movs	r0, #0
 8003528:	f7fd fa00 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xAC);
 800352c:	20ac      	movs	r0, #172	@ 0xac
 800352e:	f7fd f9fd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003532:	2000      	movs	r0, #0
 8003534:	f7fd f9fa 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xDC);
 8003538:	20dc      	movs	r0, #220	@ 0xdc
 800353a:	f7fd f9f7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800353e:	2000      	movs	r0, #0
 8003540:	f7fd f9f4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x70);
 8003544:	2070      	movs	r0, #112	@ 0x70
 8003546:	f7fd f9f1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800354a:	2000      	movs	r0, #0
 800354c:	f7fd f9ee 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x90);
 8003550:	2090      	movs	r0, #144	@ 0x90
 8003552:	f7fd f9eb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003556:	2000      	movs	r0, #0
 8003558:	f7fd f9e8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xEB);
 800355c:	20eb      	movs	r0, #235	@ 0xeb
 800355e:	f7fd f9e5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003562:	2000      	movs	r0, #0
 8003564:	f7fd f9e2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xDC);
 8003568:	20dc      	movs	r0, #220	@ 0xdc
 800356a:	f7fd f9df 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800356e:	2000      	movs	r0, #0
 8003570:	f7fd f9dc 	bl	800092c <lcd_wr_xdata>
 8003574:	23b8      	movs	r3, #184	@ 0xb8
 8003576:	f8a7 30bc 	strh.w	r3, [r7, #188]	@ 0xbc
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800357a:	4b20      	ldr	r3, [pc, #128]	@ (80035fc <lcd_init+0x1a54>)
 800357c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003580:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003582:	4b1e      	ldr	r3, [pc, #120]	@ (80035fc <lcd_init+0x1a54>)
 8003584:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003588:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800358a:	f8b7 30bc 	ldrh.w	r3, [r7, #188]	@ 0xbc
 800358e:	b29a      	uxth	r2, r3
 8003590:	4b19      	ldr	r3, [pc, #100]	@ (80035f8 <lcd_init+0x1a50>)
 8003592:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003594:	4b19      	ldr	r3, [pc, #100]	@ (80035fc <lcd_init+0x1a54>)
 8003596:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800359a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800359c:	4b17      	ldr	r3, [pc, #92]	@ (80035fc <lcd_init+0x1a54>)
 800359e:	2280      	movs	r2, #128	@ 0x80
 80035a0:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80035a2:	4b16      	ldr	r3, [pc, #88]	@ (80035fc <lcd_init+0x1a54>)
 80035a4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80035a8:	611a      	str	r2, [r3, #16]
}
 80035aa:	bf00      	nop

        lcd_wr_regno(0xB8);
        lcd_wr_xdata(0x00);
 80035ac:	2000      	movs	r0, #0
 80035ae:	f7fd f9bd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80035b2:	2000      	movs	r0, #0
 80035b4:	f7fd f9ba 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80035b8:	2000      	movs	r0, #0
 80035ba:	f7fd f9b7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80035be:	2000      	movs	r0, #0
 80035c0:	f7fd f9b4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80035c4:	2000      	movs	r0, #0
 80035c6:	f7fd f9b1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80035ca:	2000      	movs	r0, #0
 80035cc:	f7fd f9ae 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80035d0:	2000      	movs	r0, #0
 80035d2:	f7fd f9ab 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80035d6:	2000      	movs	r0, #0
 80035d8:	f7fd f9a8 	bl	800092c <lcd_wr_xdata>
 80035dc:	23ba      	movs	r3, #186	@ 0xba
 80035de:	f8a7 30ba 	strh.w	r3, [r7, #186]	@ 0xba
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80035e2:	4b06      	ldr	r3, [pc, #24]	@ (80035fc <lcd_init+0x1a54>)
 80035e4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80035e8:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80035ea:	4b04      	ldr	r3, [pc, #16]	@ (80035fc <lcd_init+0x1a54>)
 80035ec:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80035f0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80035f2:	f8b7 30ba 	ldrh.w	r3, [r7, #186]	@ 0xba
 80035f6:	e003      	b.n	8003600 <lcd_init+0x1a58>
 80035f8:	40010c00 	.word	0x40010c00
 80035fc:	40011000 	.word	0x40011000
 8003600:	b29a      	uxth	r2, r3
 8003602:	4bd9      	ldr	r3, [pc, #868]	@ (8003968 <lcd_init+0x1dc0>)
 8003604:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003606:	4bd9      	ldr	r3, [pc, #868]	@ (800396c <lcd_init+0x1dc4>)
 8003608:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800360c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800360e:	4bd7      	ldr	r3, [pc, #860]	@ (800396c <lcd_init+0x1dc4>)
 8003610:	2280      	movs	r2, #128	@ 0x80
 8003612:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003614:	4bd5      	ldr	r3, [pc, #852]	@ (800396c <lcd_init+0x1dc4>)
 8003616:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800361a:	611a      	str	r2, [r3, #16]
}
 800361c:	bf00      	nop

        lcd_wr_regno(0xBA);
        lcd_wr_xdata(0x24);
 800361e:	2024      	movs	r0, #36	@ 0x24
 8003620:	f7fd f984 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003624:	2000      	movs	r0, #0
 8003626:	f7fd f981 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800362a:	2000      	movs	r0, #0
 800362c:	f7fd f97e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003630:	2000      	movs	r0, #0
 8003632:	f7fd f97b 	bl	800092c <lcd_wr_xdata>
 8003636:	23c1      	movs	r3, #193	@ 0xc1
 8003638:	f8a7 30b8 	strh.w	r3, [r7, #184]	@ 0xb8
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800363c:	4bcb      	ldr	r3, [pc, #812]	@ (800396c <lcd_init+0x1dc4>)
 800363e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003642:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003644:	4bc9      	ldr	r3, [pc, #804]	@ (800396c <lcd_init+0x1dc4>)
 8003646:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800364a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800364c:	f8b7 30b8 	ldrh.w	r3, [r7, #184]	@ 0xb8
 8003650:	b29a      	uxth	r2, r3
 8003652:	4bc5      	ldr	r3, [pc, #788]	@ (8003968 <lcd_init+0x1dc0>)
 8003654:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003656:	4bc5      	ldr	r3, [pc, #788]	@ (800396c <lcd_init+0x1dc4>)
 8003658:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800365c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800365e:	4bc3      	ldr	r3, [pc, #780]	@ (800396c <lcd_init+0x1dc4>)
 8003660:	2280      	movs	r2, #128	@ 0x80
 8003662:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003664:	4bc1      	ldr	r3, [pc, #772]	@ (800396c <lcd_init+0x1dc4>)
 8003666:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800366a:	611a      	str	r2, [r3, #16]
}
 800366c:	bf00      	nop

        lcd_wr_regno(0xC1);
        lcd_wr_xdata(0x20);
 800366e:	2020      	movs	r0, #32
 8003670:	f7fd f95c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003674:	2000      	movs	r0, #0
 8003676:	f7fd f959 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x54);
 800367a:	2054      	movs	r0, #84	@ 0x54
 800367c:	f7fd f956 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003680:	2000      	movs	r0, #0
 8003682:	f7fd f953 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xFF);
 8003686:	20ff      	movs	r0, #255	@ 0xff
 8003688:	f7fd f950 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800368c:	2000      	movs	r0, #0
 800368e:	f7fd f94d 	bl	800092c <lcd_wr_xdata>
 8003692:	23c2      	movs	r3, #194	@ 0xc2
 8003694:	f8a7 30b6 	strh.w	r3, [r7, #182]	@ 0xb6
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003698:	4bb4      	ldr	r3, [pc, #720]	@ (800396c <lcd_init+0x1dc4>)
 800369a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800369e:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80036a0:	4bb2      	ldr	r3, [pc, #712]	@ (800396c <lcd_init+0x1dc4>)
 80036a2:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80036a6:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80036a8:	f8b7 30b6 	ldrh.w	r3, [r7, #182]	@ 0xb6
 80036ac:	b29a      	uxth	r2, r3
 80036ae:	4bae      	ldr	r3, [pc, #696]	@ (8003968 <lcd_init+0x1dc0>)
 80036b0:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80036b2:	4bae      	ldr	r3, [pc, #696]	@ (800396c <lcd_init+0x1dc4>)
 80036b4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80036b8:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80036ba:	4bac      	ldr	r3, [pc, #688]	@ (800396c <lcd_init+0x1dc4>)
 80036bc:	2280      	movs	r2, #128	@ 0x80
 80036be:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80036c0:	4baa      	ldr	r3, [pc, #680]	@ (800396c <lcd_init+0x1dc4>)
 80036c2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80036c6:	611a      	str	r2, [r3, #16]
}
 80036c8:	bf00      	nop

        lcd_wr_regno(0xC2);
        lcd_wr_xdata(0x0A);
 80036ca:	200a      	movs	r0, #10
 80036cc:	f7fd f92e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80036d0:	2000      	movs	r0, #0
 80036d2:	f7fd f92b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x04);
 80036d6:	2004      	movs	r0, #4
 80036d8:	f7fd f928 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80036dc:	2000      	movs	r0, #0
 80036de:	f7fd f925 	bl	800092c <lcd_wr_xdata>
 80036e2:	23c3      	movs	r3, #195	@ 0xc3
 80036e4:	f8a7 30b4 	strh.w	r3, [r7, #180]	@ 0xb4
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80036e8:	4ba0      	ldr	r3, [pc, #640]	@ (800396c <lcd_init+0x1dc4>)
 80036ea:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80036ee:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80036f0:	4b9e      	ldr	r3, [pc, #632]	@ (800396c <lcd_init+0x1dc4>)
 80036f2:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80036f6:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80036f8:	f8b7 30b4 	ldrh.w	r3, [r7, #180]	@ 0xb4
 80036fc:	b29a      	uxth	r2, r3
 80036fe:	4b9a      	ldr	r3, [pc, #616]	@ (8003968 <lcd_init+0x1dc0>)
 8003700:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003702:	4b9a      	ldr	r3, [pc, #616]	@ (800396c <lcd_init+0x1dc4>)
 8003704:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003708:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800370a:	4b98      	ldr	r3, [pc, #608]	@ (800396c <lcd_init+0x1dc4>)
 800370c:	2280      	movs	r2, #128	@ 0x80
 800370e:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003710:	4b96      	ldr	r3, [pc, #600]	@ (800396c <lcd_init+0x1dc4>)
 8003712:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003716:	611a      	str	r2, [r3, #16]
}
 8003718:	bf00      	nop

        lcd_wr_regno(0xC3);
        lcd_wr_xdata(0x3C);
 800371a:	203c      	movs	r0, #60	@ 0x3c
 800371c:	f7fd f906 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003720:	2000      	movs	r0, #0
 8003722:	f7fd f903 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x3A);
 8003726:	203a      	movs	r0, #58	@ 0x3a
 8003728:	f7fd f900 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800372c:	2000      	movs	r0, #0
 800372e:	f7fd f8fd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x39);
 8003732:	2039      	movs	r0, #57	@ 0x39
 8003734:	f7fd f8fa 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003738:	2000      	movs	r0, #0
 800373a:	f7fd f8f7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x37);
 800373e:	2037      	movs	r0, #55	@ 0x37
 8003740:	f7fd f8f4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003744:	2000      	movs	r0, #0
 8003746:	f7fd f8f1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x3C);
 800374a:	203c      	movs	r0, #60	@ 0x3c
 800374c:	f7fd f8ee 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003750:	2000      	movs	r0, #0
 8003752:	f7fd f8eb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x36);
 8003756:	2036      	movs	r0, #54	@ 0x36
 8003758:	f7fd f8e8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800375c:	2000      	movs	r0, #0
 800375e:	f7fd f8e5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x32);
 8003762:	2032      	movs	r0, #50	@ 0x32
 8003764:	f7fd f8e2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003768:	2000      	movs	r0, #0
 800376a:	f7fd f8df 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x2F);
 800376e:	202f      	movs	r0, #47	@ 0x2f
 8003770:	f7fd f8dc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003774:	2000      	movs	r0, #0
 8003776:	f7fd f8d9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x2C);
 800377a:	202c      	movs	r0, #44	@ 0x2c
 800377c:	f7fd f8d6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003780:	2000      	movs	r0, #0
 8003782:	f7fd f8d3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x29);
 8003786:	2029      	movs	r0, #41	@ 0x29
 8003788:	f7fd f8d0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800378c:	2000      	movs	r0, #0
 800378e:	f7fd f8cd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x26);
 8003792:	2026      	movs	r0, #38	@ 0x26
 8003794:	f7fd f8ca 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003798:	2000      	movs	r0, #0
 800379a:	f7fd f8c7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x24);
 800379e:	2024      	movs	r0, #36	@ 0x24
 80037a0:	f7fd f8c4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80037a4:	2000      	movs	r0, #0
 80037a6:	f7fd f8c1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x24);
 80037aa:	2024      	movs	r0, #36	@ 0x24
 80037ac:	f7fd f8be 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80037b0:	2000      	movs	r0, #0
 80037b2:	f7fd f8bb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x23);
 80037b6:	2023      	movs	r0, #35	@ 0x23
 80037b8:	f7fd f8b8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80037bc:	2000      	movs	r0, #0
 80037be:	f7fd f8b5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x3C);
 80037c2:	203c      	movs	r0, #60	@ 0x3c
 80037c4:	f7fd f8b2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80037c8:	2000      	movs	r0, #0
 80037ca:	f7fd f8af 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x36);
 80037ce:	2036      	movs	r0, #54	@ 0x36
 80037d0:	f7fd f8ac 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80037d4:	2000      	movs	r0, #0
 80037d6:	f7fd f8a9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x32);
 80037da:	2032      	movs	r0, #50	@ 0x32
 80037dc:	f7fd f8a6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80037e0:	2000      	movs	r0, #0
 80037e2:	f7fd f8a3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x2F);
 80037e6:	202f      	movs	r0, #47	@ 0x2f
 80037e8:	f7fd f8a0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80037ec:	2000      	movs	r0, #0
 80037ee:	f7fd f89d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x2C);
 80037f2:	202c      	movs	r0, #44	@ 0x2c
 80037f4:	f7fd f89a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80037f8:	2000      	movs	r0, #0
 80037fa:	f7fd f897 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x29);
 80037fe:	2029      	movs	r0, #41	@ 0x29
 8003800:	f7fd f894 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003804:	2000      	movs	r0, #0
 8003806:	f7fd f891 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x26);
 800380a:	2026      	movs	r0, #38	@ 0x26
 800380c:	f7fd f88e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003810:	2000      	movs	r0, #0
 8003812:	f7fd f88b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x24);
 8003816:	2024      	movs	r0, #36	@ 0x24
 8003818:	f7fd f888 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800381c:	2000      	movs	r0, #0
 800381e:	f7fd f885 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x24);
 8003822:	2024      	movs	r0, #36	@ 0x24
 8003824:	f7fd f882 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003828:	2000      	movs	r0, #0
 800382a:	f7fd f87f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x23);
 800382e:	2023      	movs	r0, #35	@ 0x23
 8003830:	f7fd f87c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003834:	2000      	movs	r0, #0
 8003836:	f7fd f879 	bl	800092c <lcd_wr_xdata>
 800383a:	23c4      	movs	r3, #196	@ 0xc4
 800383c:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003840:	4b4a      	ldr	r3, [pc, #296]	@ (800396c <lcd_init+0x1dc4>)
 8003842:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003846:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003848:	4b48      	ldr	r3, [pc, #288]	@ (800396c <lcd_init+0x1dc4>)
 800384a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800384e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003850:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8003854:	b29a      	uxth	r2, r3
 8003856:	4b44      	ldr	r3, [pc, #272]	@ (8003968 <lcd_init+0x1dc0>)
 8003858:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800385a:	4b44      	ldr	r3, [pc, #272]	@ (800396c <lcd_init+0x1dc4>)
 800385c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003860:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003862:	4b42      	ldr	r3, [pc, #264]	@ (800396c <lcd_init+0x1dc4>)
 8003864:	2280      	movs	r2, #128	@ 0x80
 8003866:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003868:	4b40      	ldr	r3, [pc, #256]	@ (800396c <lcd_init+0x1dc4>)
 800386a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800386e:	611a      	str	r2, [r3, #16]
}
 8003870:	bf00      	nop

        lcd_wr_regno(0xC4);
        lcd_wr_xdata(0x62);
 8003872:	2062      	movs	r0, #98	@ 0x62
 8003874:	f7fd f85a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003878:	2000      	movs	r0, #0
 800387a:	f7fd f857 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x05);
 800387e:	2005      	movs	r0, #5
 8003880:	f7fd f854 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003884:	2000      	movs	r0, #0
 8003886:	f7fd f851 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x84);
 800388a:	2084      	movs	r0, #132	@ 0x84
 800388c:	f7fd f84e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003890:	2000      	movs	r0, #0
 8003892:	f7fd f84b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xF0);
 8003896:	20f0      	movs	r0, #240	@ 0xf0
 8003898:	f7fd f848 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800389c:	2000      	movs	r0, #0
 800389e:	f7fd f845 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x18);
 80038a2:	2018      	movs	r0, #24
 80038a4:	f7fd f842 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80038a8:	2000      	movs	r0, #0
 80038aa:	f7fd f83f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA4);
 80038ae:	20a4      	movs	r0, #164	@ 0xa4
 80038b0:	f7fd f83c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80038b4:	2000      	movs	r0, #0
 80038b6:	f7fd f839 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x18);
 80038ba:	2018      	movs	r0, #24
 80038bc:	f7fd f836 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80038c0:	2000      	movs	r0, #0
 80038c2:	f7fd f833 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x50);
 80038c6:	2050      	movs	r0, #80	@ 0x50
 80038c8:	f7fd f830 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80038cc:	2000      	movs	r0, #0
 80038ce:	f7fd f82d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0C);
 80038d2:	200c      	movs	r0, #12
 80038d4:	f7fd f82a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80038d8:	2000      	movs	r0, #0
 80038da:	f7fd f827 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x17);
 80038de:	2017      	movs	r0, #23
 80038e0:	f7fd f824 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80038e4:	2000      	movs	r0, #0
 80038e6:	f7fd f821 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x95);
 80038ea:	2095      	movs	r0, #149	@ 0x95
 80038ec:	f7fd f81e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80038f0:	2000      	movs	r0, #0
 80038f2:	f7fd f81b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xF3);
 80038f6:	20f3      	movs	r0, #243	@ 0xf3
 80038f8:	f7fd f818 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80038fc:	2000      	movs	r0, #0
 80038fe:	f7fd f815 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xE6);
 8003902:	20e6      	movs	r0, #230	@ 0xe6
 8003904:	f7fd f812 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003908:	2000      	movs	r0, #0
 800390a:	f7fd f80f 	bl	800092c <lcd_wr_xdata>
 800390e:	23c5      	movs	r3, #197	@ 0xc5
 8003910:	f8a7 30b0 	strh.w	r3, [r7, #176]	@ 0xb0
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003914:	4b15      	ldr	r3, [pc, #84]	@ (800396c <lcd_init+0x1dc4>)
 8003916:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800391a:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800391c:	4b13      	ldr	r3, [pc, #76]	@ (800396c <lcd_init+0x1dc4>)
 800391e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003922:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003924:	f8b7 30b0 	ldrh.w	r3, [r7, #176]	@ 0xb0
 8003928:	b29a      	uxth	r2, r3
 800392a:	4b0f      	ldr	r3, [pc, #60]	@ (8003968 <lcd_init+0x1dc0>)
 800392c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800392e:	4b0f      	ldr	r3, [pc, #60]	@ (800396c <lcd_init+0x1dc4>)
 8003930:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003934:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003936:	4b0d      	ldr	r3, [pc, #52]	@ (800396c <lcd_init+0x1dc4>)
 8003938:	2280      	movs	r2, #128	@ 0x80
 800393a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800393c:	4b0b      	ldr	r3, [pc, #44]	@ (800396c <lcd_init+0x1dc4>)
 800393e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003942:	611a      	str	r2, [r3, #16]
}
 8003944:	bf00      	nop

        lcd_wr_regno(0xC5);
        lcd_wr_xdata(0x32);
 8003946:	2032      	movs	r0, #50	@ 0x32
 8003948:	f7fc fff0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800394c:	2000      	movs	r0, #0
 800394e:	f7fc ffed 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x44);
 8003952:	2044      	movs	r0, #68	@ 0x44
 8003954:	f7fc ffea 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003958:	2000      	movs	r0, #0
 800395a:	f7fc ffe7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x65);
 800395e:	2065      	movs	r0, #101	@ 0x65
 8003960:	f7fc ffe4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003964:	2000      	movs	r0, #0
 8003966:	e003      	b.n	8003970 <lcd_init+0x1dc8>
 8003968:	40010c00 	.word	0x40010c00
 800396c:	40011000 	.word	0x40011000
 8003970:	f7fc ffdc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x76);
 8003974:	2076      	movs	r0, #118	@ 0x76
 8003976:	f7fc ffd9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800397a:	2000      	movs	r0, #0
 800397c:	f7fc ffd6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x88);
 8003980:	2088      	movs	r0, #136	@ 0x88
 8003982:	f7fc ffd3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003986:	2000      	movs	r0, #0
 8003988:	f7fc ffd0 	bl	800092c <lcd_wr_xdata>
 800398c:	23c6      	movs	r3, #198	@ 0xc6
 800398e:	f8a7 30ae 	strh.w	r3, [r7, #174]	@ 0xae
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003992:	4bd7      	ldr	r3, [pc, #860]	@ (8003cf0 <lcd_init+0x2148>)
 8003994:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003998:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800399a:	4bd5      	ldr	r3, [pc, #852]	@ (8003cf0 <lcd_init+0x2148>)
 800399c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80039a0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80039a2:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	@ 0xae
 80039a6:	b29a      	uxth	r2, r3
 80039a8:	4bd2      	ldr	r3, [pc, #840]	@ (8003cf4 <lcd_init+0x214c>)
 80039aa:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80039ac:	4bd0      	ldr	r3, [pc, #832]	@ (8003cf0 <lcd_init+0x2148>)
 80039ae:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80039b2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80039b4:	4bce      	ldr	r3, [pc, #824]	@ (8003cf0 <lcd_init+0x2148>)
 80039b6:	2280      	movs	r2, #128	@ 0x80
 80039b8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80039ba:	4bcd      	ldr	r3, [pc, #820]	@ (8003cf0 <lcd_init+0x2148>)
 80039bc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80039c0:	611a      	str	r2, [r3, #16]
}
 80039c2:	bf00      	nop

        lcd_wr_regno(0xC6);
        lcd_wr_xdata(0x20);
 80039c4:	2020      	movs	r0, #32
 80039c6:	f7fc ffb1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80039ca:	2000      	movs	r0, #0
 80039cc:	f7fc ffae 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x17);
 80039d0:	2017      	movs	r0, #23
 80039d2:	f7fc ffab 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80039d6:	2000      	movs	r0, #0
 80039d8:	f7fc ffa8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01);
 80039dc:	2001      	movs	r0, #1
 80039de:	f7fc ffa5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80039e2:	2000      	movs	r0, #0
 80039e4:	f7fc ffa2 	bl	800092c <lcd_wr_xdata>
 80039e8:	23c7      	movs	r3, #199	@ 0xc7
 80039ea:	f8a7 30ac 	strh.w	r3, [r7, #172]	@ 0xac
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80039ee:	4bc0      	ldr	r3, [pc, #768]	@ (8003cf0 <lcd_init+0x2148>)
 80039f0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80039f4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80039f6:	4bbe      	ldr	r3, [pc, #760]	@ (8003cf0 <lcd_init+0x2148>)
 80039f8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80039fc:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80039fe:	f8b7 30ac 	ldrh.w	r3, [r7, #172]	@ 0xac
 8003a02:	b29a      	uxth	r2, r3
 8003a04:	4bbb      	ldr	r3, [pc, #748]	@ (8003cf4 <lcd_init+0x214c>)
 8003a06:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003a08:	4bb9      	ldr	r3, [pc, #740]	@ (8003cf0 <lcd_init+0x2148>)
 8003a0a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003a0e:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003a10:	4bb7      	ldr	r3, [pc, #732]	@ (8003cf0 <lcd_init+0x2148>)
 8003a12:	2280      	movs	r2, #128	@ 0x80
 8003a14:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003a16:	4bb6      	ldr	r3, [pc, #728]	@ (8003cf0 <lcd_init+0x2148>)
 8003a18:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003a1c:	611a      	str	r2, [r3, #16]
}
 8003a1e:	bf00      	nop

        lcd_wr_regno(0xC7);
        lcd_wr_xdata(0x00);
 8003a20:	2000      	movs	r0, #0
 8003a22:	f7fc ff83 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003a26:	2000      	movs	r0, #0
 8003a28:	f7fc ff80 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003a2c:	2000      	movs	r0, #0
 8003a2e:	f7fc ff7d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003a32:	2000      	movs	r0, #0
 8003a34:	f7fc ff7a 	bl	800092c <lcd_wr_xdata>
 8003a38:	23c8      	movs	r3, #200	@ 0xc8
 8003a3a:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003a3e:	4bac      	ldr	r3, [pc, #688]	@ (8003cf0 <lcd_init+0x2148>)
 8003a40:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003a44:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003a46:	4baa      	ldr	r3, [pc, #680]	@ (8003cf0 <lcd_init+0x2148>)
 8003a48:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003a4c:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003a4e:	f8b7 30aa 	ldrh.w	r3, [r7, #170]	@ 0xaa
 8003a52:	b29a      	uxth	r2, r3
 8003a54:	4ba7      	ldr	r3, [pc, #668]	@ (8003cf4 <lcd_init+0x214c>)
 8003a56:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003a58:	4ba5      	ldr	r3, [pc, #660]	@ (8003cf0 <lcd_init+0x2148>)
 8003a5a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003a5e:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003a60:	4ba3      	ldr	r3, [pc, #652]	@ (8003cf0 <lcd_init+0x2148>)
 8003a62:	2280      	movs	r2, #128	@ 0x80
 8003a64:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003a66:	4ba2      	ldr	r3, [pc, #648]	@ (8003cf0 <lcd_init+0x2148>)
 8003a68:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003a6c:	611a      	str	r2, [r3, #16]
}
 8003a6e:	bf00      	nop

        lcd_wr_regno(0xC8);
        lcd_wr_xdata(0x00);
 8003a70:	2000      	movs	r0, #0
 8003a72:	f7fc ff5b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003a76:	2000      	movs	r0, #0
 8003a78:	f7fc ff58 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003a7c:	2000      	movs	r0, #0
 8003a7e:	f7fc ff55 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003a82:	2000      	movs	r0, #0
 8003a84:	f7fc ff52 	bl	800092c <lcd_wr_xdata>
 8003a88:	23c9      	movs	r3, #201	@ 0xc9
 8003a8a:	f8a7 30a8 	strh.w	r3, [r7, #168]	@ 0xa8
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003a8e:	4b98      	ldr	r3, [pc, #608]	@ (8003cf0 <lcd_init+0x2148>)
 8003a90:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003a94:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003a96:	4b96      	ldr	r3, [pc, #600]	@ (8003cf0 <lcd_init+0x2148>)
 8003a98:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003a9c:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003a9e:	f8b7 30a8 	ldrh.w	r3, [r7, #168]	@ 0xa8
 8003aa2:	b29a      	uxth	r2, r3
 8003aa4:	4b93      	ldr	r3, [pc, #588]	@ (8003cf4 <lcd_init+0x214c>)
 8003aa6:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003aa8:	4b91      	ldr	r3, [pc, #580]	@ (8003cf0 <lcd_init+0x2148>)
 8003aaa:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003aae:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003ab0:	4b8f      	ldr	r3, [pc, #572]	@ (8003cf0 <lcd_init+0x2148>)
 8003ab2:	2280      	movs	r2, #128	@ 0x80
 8003ab4:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003ab6:	4b8e      	ldr	r3, [pc, #568]	@ (8003cf0 <lcd_init+0x2148>)
 8003ab8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003abc:	611a      	str	r2, [r3, #16]
}
 8003abe:	bf00      	nop

        lcd_wr_regno(0xC9);
        lcd_wr_xdata(0x00);
 8003ac0:	2000      	movs	r0, #0
 8003ac2:	f7fc ff33 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ac6:	2000      	movs	r0, #0
 8003ac8:	f7fc ff30 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003acc:	2000      	movs	r0, #0
 8003ace:	f7fc ff2d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ad2:	2000      	movs	r0, #0
 8003ad4:	f7fc ff2a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ad8:	2000      	movs	r0, #0
 8003ada:	f7fc ff27 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ade:	2000      	movs	r0, #0
 8003ae0:	f7fc ff24 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ae4:	2000      	movs	r0, #0
 8003ae6:	f7fc ff21 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003aea:	2000      	movs	r0, #0
 8003aec:	f7fc ff1e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003af0:	2000      	movs	r0, #0
 8003af2:	f7fc ff1b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003af6:	2000      	movs	r0, #0
 8003af8:	f7fc ff18 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003afc:	2000      	movs	r0, #0
 8003afe:	f7fc ff15 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003b02:	2000      	movs	r0, #0
 8003b04:	f7fc ff12 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003b08:	2000      	movs	r0, #0
 8003b0a:	f7fc ff0f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003b0e:	2000      	movs	r0, #0
 8003b10:	f7fc ff0c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003b14:	2000      	movs	r0, #0
 8003b16:	f7fc ff09 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003b1a:	2000      	movs	r0, #0
 8003b1c:	f7fc ff06 	bl	800092c <lcd_wr_xdata>
 8003b20:	23e0      	movs	r3, #224	@ 0xe0
 8003b22:	f8a7 30a6 	strh.w	r3, [r7, #166]	@ 0xa6
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003b26:	4b72      	ldr	r3, [pc, #456]	@ (8003cf0 <lcd_init+0x2148>)
 8003b28:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003b2c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003b2e:	4b70      	ldr	r3, [pc, #448]	@ (8003cf0 <lcd_init+0x2148>)
 8003b30:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003b34:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003b36:	f8b7 30a6 	ldrh.w	r3, [r7, #166]	@ 0xa6
 8003b3a:	b29a      	uxth	r2, r3
 8003b3c:	4b6d      	ldr	r3, [pc, #436]	@ (8003cf4 <lcd_init+0x214c>)
 8003b3e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003b40:	4b6b      	ldr	r3, [pc, #428]	@ (8003cf0 <lcd_init+0x2148>)
 8003b42:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003b46:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003b48:	4b69      	ldr	r3, [pc, #420]	@ (8003cf0 <lcd_init+0x2148>)
 8003b4a:	2280      	movs	r2, #128	@ 0x80
 8003b4c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003b4e:	4b68      	ldr	r3, [pc, #416]	@ (8003cf0 <lcd_init+0x2148>)
 8003b50:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003b54:	611a      	str	r2, [r3, #16]
}
 8003b56:	bf00      	nop

        lcd_wr_regno(0xE0);
        lcd_wr_xdata(0x16);
 8003b58:	2016      	movs	r0, #22
 8003b5a:	f7fc fee7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003b5e:	2000      	movs	r0, #0
 8003b60:	f7fc fee4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x1C);
 8003b64:	201c      	movs	r0, #28
 8003b66:	f7fc fee1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003b6a:	2000      	movs	r0, #0
 8003b6c:	f7fc fede 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x21);
 8003b70:	2021      	movs	r0, #33	@ 0x21
 8003b72:	f7fc fedb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003b76:	2000      	movs	r0, #0
 8003b78:	f7fc fed8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x36);
 8003b7c:	2036      	movs	r0, #54	@ 0x36
 8003b7e:	f7fc fed5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003b82:	2000      	movs	r0, #0
 8003b84:	f7fc fed2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x46);
 8003b88:	2046      	movs	r0, #70	@ 0x46
 8003b8a:	f7fc fecf 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003b8e:	2000      	movs	r0, #0
 8003b90:	f7fc fecc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x52);
 8003b94:	2052      	movs	r0, #82	@ 0x52
 8003b96:	f7fc fec9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003b9a:	2000      	movs	r0, #0
 8003b9c:	f7fc fec6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x64);
 8003ba0:	2064      	movs	r0, #100	@ 0x64
 8003ba2:	f7fc fec3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ba6:	2000      	movs	r0, #0
 8003ba8:	f7fc fec0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x7A);
 8003bac:	207a      	movs	r0, #122	@ 0x7a
 8003bae:	f7fc febd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003bb2:	2000      	movs	r0, #0
 8003bb4:	f7fc feba 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x8B);
 8003bb8:	208b      	movs	r0, #139	@ 0x8b
 8003bba:	f7fc feb7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003bbe:	2000      	movs	r0, #0
 8003bc0:	f7fc feb4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x99);
 8003bc4:	2099      	movs	r0, #153	@ 0x99
 8003bc6:	f7fc feb1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003bca:	2000      	movs	r0, #0
 8003bcc:	f7fc feae 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA8);
 8003bd0:	20a8      	movs	r0, #168	@ 0xa8
 8003bd2:	f7fc feab 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003bd6:	2000      	movs	r0, #0
 8003bd8:	f7fc fea8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xB9);
 8003bdc:	20b9      	movs	r0, #185	@ 0xb9
 8003bde:	f7fc fea5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003be2:	2000      	movs	r0, #0
 8003be4:	f7fc fea2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xC4);
 8003be8:	20c4      	movs	r0, #196	@ 0xc4
 8003bea:	f7fc fe9f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003bee:	2000      	movs	r0, #0
 8003bf0:	f7fc fe9c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xCA);
 8003bf4:	20ca      	movs	r0, #202	@ 0xca
 8003bf6:	f7fc fe99 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003bfa:	2000      	movs	r0, #0
 8003bfc:	f7fc fe96 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xD2);
 8003c00:	20d2      	movs	r0, #210	@ 0xd2
 8003c02:	f7fc fe93 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003c06:	2000      	movs	r0, #0
 8003c08:	f7fc fe90 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xD9);
 8003c0c:	20d9      	movs	r0, #217	@ 0xd9
 8003c0e:	f7fc fe8d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003c12:	2000      	movs	r0, #0
 8003c14:	f7fc fe8a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xE0);
 8003c18:	20e0      	movs	r0, #224	@ 0xe0
 8003c1a:	f7fc fe87 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003c1e:	2000      	movs	r0, #0
 8003c20:	f7fc fe84 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xF3);
 8003c24:	20f3      	movs	r0, #243	@ 0xf3
 8003c26:	f7fc fe81 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003c2a:	2000      	movs	r0, #0
 8003c2c:	f7fc fe7e 	bl	800092c <lcd_wr_xdata>
 8003c30:	23e1      	movs	r3, #225	@ 0xe1
 8003c32:	f8a7 30a4 	strh.w	r3, [r7, #164]	@ 0xa4
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003c36:	4b2e      	ldr	r3, [pc, #184]	@ (8003cf0 <lcd_init+0x2148>)
 8003c38:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003c3c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003c3e:	4b2c      	ldr	r3, [pc, #176]	@ (8003cf0 <lcd_init+0x2148>)
 8003c40:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003c44:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003c46:	f8b7 30a4 	ldrh.w	r3, [r7, #164]	@ 0xa4
 8003c4a:	b29a      	uxth	r2, r3
 8003c4c:	4b29      	ldr	r3, [pc, #164]	@ (8003cf4 <lcd_init+0x214c>)
 8003c4e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003c50:	4b27      	ldr	r3, [pc, #156]	@ (8003cf0 <lcd_init+0x2148>)
 8003c52:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003c56:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003c58:	4b25      	ldr	r3, [pc, #148]	@ (8003cf0 <lcd_init+0x2148>)
 8003c5a:	2280      	movs	r2, #128	@ 0x80
 8003c5c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003c5e:	4b24      	ldr	r3, [pc, #144]	@ (8003cf0 <lcd_init+0x2148>)
 8003c60:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003c64:	611a      	str	r2, [r3, #16]
}
 8003c66:	bf00      	nop

        lcd_wr_regno(0xE1);
        lcd_wr_xdata(0x16);
 8003c68:	2016      	movs	r0, #22
 8003c6a:	f7fc fe5f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003c6e:	2000      	movs	r0, #0
 8003c70:	f7fc fe5c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x1C);
 8003c74:	201c      	movs	r0, #28
 8003c76:	f7fc fe59 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003c7a:	2000      	movs	r0, #0
 8003c7c:	f7fc fe56 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x22);
 8003c80:	2022      	movs	r0, #34	@ 0x22
 8003c82:	f7fc fe53 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003c86:	2000      	movs	r0, #0
 8003c88:	f7fc fe50 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x36);
 8003c8c:	2036      	movs	r0, #54	@ 0x36
 8003c8e:	f7fc fe4d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003c92:	2000      	movs	r0, #0
 8003c94:	f7fc fe4a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x45);
 8003c98:	2045      	movs	r0, #69	@ 0x45
 8003c9a:	f7fc fe47 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003c9e:	2000      	movs	r0, #0
 8003ca0:	f7fc fe44 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x52);
 8003ca4:	2052      	movs	r0, #82	@ 0x52
 8003ca6:	f7fc fe41 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003caa:	2000      	movs	r0, #0
 8003cac:	f7fc fe3e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x64);
 8003cb0:	2064      	movs	r0, #100	@ 0x64
 8003cb2:	f7fc fe3b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003cb6:	2000      	movs	r0, #0
 8003cb8:	f7fc fe38 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x7A);
 8003cbc:	207a      	movs	r0, #122	@ 0x7a
 8003cbe:	f7fc fe35 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003cc2:	2000      	movs	r0, #0
 8003cc4:	f7fc fe32 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x8B);
 8003cc8:	208b      	movs	r0, #139	@ 0x8b
 8003cca:	f7fc fe2f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003cce:	2000      	movs	r0, #0
 8003cd0:	f7fc fe2c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x99);
 8003cd4:	2099      	movs	r0, #153	@ 0x99
 8003cd6:	f7fc fe29 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003cda:	2000      	movs	r0, #0
 8003cdc:	f7fc fe26 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA8);
 8003ce0:	20a8      	movs	r0, #168	@ 0xa8
 8003ce2:	f7fc fe23 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ce6:	2000      	movs	r0, #0
 8003ce8:	f7fc fe20 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xB9);
 8003cec:	20b9      	movs	r0, #185	@ 0xb9
 8003cee:	e003      	b.n	8003cf8 <lcd_init+0x2150>
 8003cf0:	40011000 	.word	0x40011000
 8003cf4:	40010c00 	.word	0x40010c00
 8003cf8:	f7fc fe18 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003cfc:	2000      	movs	r0, #0
 8003cfe:	f7fc fe15 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xC4);
 8003d02:	20c4      	movs	r0, #196	@ 0xc4
 8003d04:	f7fc fe12 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003d08:	2000      	movs	r0, #0
 8003d0a:	f7fc fe0f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xCA);
 8003d0e:	20ca      	movs	r0, #202	@ 0xca
 8003d10:	f7fc fe0c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003d14:	2000      	movs	r0, #0
 8003d16:	f7fc fe09 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xD2);
 8003d1a:	20d2      	movs	r0, #210	@ 0xd2
 8003d1c:	f7fc fe06 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003d20:	2000      	movs	r0, #0
 8003d22:	f7fc fe03 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xD8);
 8003d26:	20d8      	movs	r0, #216	@ 0xd8
 8003d28:	f7fc fe00 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003d2c:	2000      	movs	r0, #0
 8003d2e:	f7fc fdfd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xE0);
 8003d32:	20e0      	movs	r0, #224	@ 0xe0
 8003d34:	f7fc fdfa 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003d38:	2000      	movs	r0, #0
 8003d3a:	f7fc fdf7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xF3);
 8003d3e:	20f3      	movs	r0, #243	@ 0xf3
 8003d40:	f7fc fdf4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003d44:	2000      	movs	r0, #0
 8003d46:	f7fc fdf1 	bl	800092c <lcd_wr_xdata>
 8003d4a:	23e2      	movs	r3, #226	@ 0xe2
 8003d4c:	f8a7 30a2 	strh.w	r3, [r7, #162]	@ 0xa2
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003d50:	4be3      	ldr	r3, [pc, #908]	@ (80040e0 <lcd_init+0x2538>)
 8003d52:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003d56:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003d58:	4be1      	ldr	r3, [pc, #900]	@ (80040e0 <lcd_init+0x2538>)
 8003d5a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003d5e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003d60:	f8b7 30a2 	ldrh.w	r3, [r7, #162]	@ 0xa2
 8003d64:	b29a      	uxth	r2, r3
 8003d66:	4bdf      	ldr	r3, [pc, #892]	@ (80040e4 <lcd_init+0x253c>)
 8003d68:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003d6a:	4bdd      	ldr	r3, [pc, #884]	@ (80040e0 <lcd_init+0x2538>)
 8003d6c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003d70:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003d72:	4bdb      	ldr	r3, [pc, #876]	@ (80040e0 <lcd_init+0x2538>)
 8003d74:	2280      	movs	r2, #128	@ 0x80
 8003d76:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003d78:	4bd9      	ldr	r3, [pc, #868]	@ (80040e0 <lcd_init+0x2538>)
 8003d7a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003d7e:	611a      	str	r2, [r3, #16]
}
 8003d80:	bf00      	nop

        lcd_wr_regno(0xE2);
        lcd_wr_xdata(0x05);
 8003d82:	2005      	movs	r0, #5
 8003d84:	f7fc fdd2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003d88:	2000      	movs	r0, #0
 8003d8a:	f7fc fdcf 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0B);
 8003d8e:	200b      	movs	r0, #11
 8003d90:	f7fc fdcc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003d94:	2000      	movs	r0, #0
 8003d96:	f7fc fdc9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x1B);
 8003d9a:	201b      	movs	r0, #27
 8003d9c:	f7fc fdc6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003da0:	2000      	movs	r0, #0
 8003da2:	f7fc fdc3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x34);
 8003da6:	2034      	movs	r0, #52	@ 0x34
 8003da8:	f7fc fdc0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003dac:	2000      	movs	r0, #0
 8003dae:	f7fc fdbd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x44);
 8003db2:	2044      	movs	r0, #68	@ 0x44
 8003db4:	f7fc fdba 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003db8:	2000      	movs	r0, #0
 8003dba:	f7fc fdb7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x4F);
 8003dbe:	204f      	movs	r0, #79	@ 0x4f
 8003dc0:	f7fc fdb4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003dc4:	2000      	movs	r0, #0
 8003dc6:	f7fc fdb1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x61);
 8003dca:	2061      	movs	r0, #97	@ 0x61
 8003dcc:	f7fc fdae 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003dd0:	2000      	movs	r0, #0
 8003dd2:	f7fc fdab 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x79);
 8003dd6:	2079      	movs	r0, #121	@ 0x79
 8003dd8:	f7fc fda8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ddc:	2000      	movs	r0, #0
 8003dde:	f7fc fda5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x88);
 8003de2:	2088      	movs	r0, #136	@ 0x88
 8003de4:	f7fc fda2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003de8:	2000      	movs	r0, #0
 8003dea:	f7fc fd9f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x97);
 8003dee:	2097      	movs	r0, #151	@ 0x97
 8003df0:	f7fc fd9c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003df4:	2000      	movs	r0, #0
 8003df6:	f7fc fd99 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA6);
 8003dfa:	20a6      	movs	r0, #166	@ 0xa6
 8003dfc:	f7fc fd96 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003e00:	2000      	movs	r0, #0
 8003e02:	f7fc fd93 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xB7);
 8003e06:	20b7      	movs	r0, #183	@ 0xb7
 8003e08:	f7fc fd90 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003e0c:	2000      	movs	r0, #0
 8003e0e:	f7fc fd8d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xC2);
 8003e12:	20c2      	movs	r0, #194	@ 0xc2
 8003e14:	f7fc fd8a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003e18:	2000      	movs	r0, #0
 8003e1a:	f7fc fd87 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xC7);
 8003e1e:	20c7      	movs	r0, #199	@ 0xc7
 8003e20:	f7fc fd84 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003e24:	2000      	movs	r0, #0
 8003e26:	f7fc fd81 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xD1);
 8003e2a:	20d1      	movs	r0, #209	@ 0xd1
 8003e2c:	f7fc fd7e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003e30:	2000      	movs	r0, #0
 8003e32:	f7fc fd7b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xD6);
 8003e36:	20d6      	movs	r0, #214	@ 0xd6
 8003e38:	f7fc fd78 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003e3c:	2000      	movs	r0, #0
 8003e3e:	f7fc fd75 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xDD);
 8003e42:	20dd      	movs	r0, #221	@ 0xdd
 8003e44:	f7fc fd72 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003e48:	2000      	movs	r0, #0
 8003e4a:	f7fc fd6f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xF3);
 8003e4e:	20f3      	movs	r0, #243	@ 0xf3
 8003e50:	f7fc fd6c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003e54:	2000      	movs	r0, #0
 8003e56:	f7fc fd69 	bl	800092c <lcd_wr_xdata>
 8003e5a:	23e3      	movs	r3, #227	@ 0xe3
 8003e5c:	f8a7 30a0 	strh.w	r3, [r7, #160]	@ 0xa0
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003e60:	4b9f      	ldr	r3, [pc, #636]	@ (80040e0 <lcd_init+0x2538>)
 8003e62:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003e66:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003e68:	4b9d      	ldr	r3, [pc, #628]	@ (80040e0 <lcd_init+0x2538>)
 8003e6a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003e6e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003e70:	f8b7 30a0 	ldrh.w	r3, [r7, #160]	@ 0xa0
 8003e74:	b29a      	uxth	r2, r3
 8003e76:	4b9b      	ldr	r3, [pc, #620]	@ (80040e4 <lcd_init+0x253c>)
 8003e78:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003e7a:	4b99      	ldr	r3, [pc, #612]	@ (80040e0 <lcd_init+0x2538>)
 8003e7c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003e80:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003e82:	4b97      	ldr	r3, [pc, #604]	@ (80040e0 <lcd_init+0x2538>)
 8003e84:	2280      	movs	r2, #128	@ 0x80
 8003e86:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003e88:	4b95      	ldr	r3, [pc, #596]	@ (80040e0 <lcd_init+0x2538>)
 8003e8a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003e8e:	611a      	str	r2, [r3, #16]
}
 8003e90:	bf00      	nop
        lcd_wr_regno(0xE3);
        lcd_wr_xdata(0x05);
 8003e92:	2005      	movs	r0, #5
 8003e94:	f7fc fd4a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003e98:	2000      	movs	r0, #0
 8003e9a:	f7fc fd47 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA);
 8003e9e:	200a      	movs	r0, #10
 8003ea0:	f7fc fd44 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ea4:	2000      	movs	r0, #0
 8003ea6:	f7fc fd41 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x1C);
 8003eaa:	201c      	movs	r0, #28
 8003eac:	f7fc fd3e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003eb0:	2000      	movs	r0, #0
 8003eb2:	f7fc fd3b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x33);
 8003eb6:	2033      	movs	r0, #51	@ 0x33
 8003eb8:	f7fc fd38 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ebc:	2000      	movs	r0, #0
 8003ebe:	f7fc fd35 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x44);
 8003ec2:	2044      	movs	r0, #68	@ 0x44
 8003ec4:	f7fc fd32 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ec8:	2000      	movs	r0, #0
 8003eca:	f7fc fd2f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x50);
 8003ece:	2050      	movs	r0, #80	@ 0x50
 8003ed0:	f7fc fd2c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ed4:	2000      	movs	r0, #0
 8003ed6:	f7fc fd29 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x62);
 8003eda:	2062      	movs	r0, #98	@ 0x62
 8003edc:	f7fc fd26 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ee0:	2000      	movs	r0, #0
 8003ee2:	f7fc fd23 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x78);
 8003ee6:	2078      	movs	r0, #120	@ 0x78
 8003ee8:	f7fc fd20 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003eec:	2000      	movs	r0, #0
 8003eee:	f7fc fd1d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x88);
 8003ef2:	2088      	movs	r0, #136	@ 0x88
 8003ef4:	f7fc fd1a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ef8:	2000      	movs	r0, #0
 8003efa:	f7fc fd17 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x97);
 8003efe:	2097      	movs	r0, #151	@ 0x97
 8003f00:	f7fc fd14 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003f04:	2000      	movs	r0, #0
 8003f06:	f7fc fd11 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA6);
 8003f0a:	20a6      	movs	r0, #166	@ 0xa6
 8003f0c:	f7fc fd0e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003f10:	2000      	movs	r0, #0
 8003f12:	f7fc fd0b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xB7);
 8003f16:	20b7      	movs	r0, #183	@ 0xb7
 8003f18:	f7fc fd08 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003f1c:	2000      	movs	r0, #0
 8003f1e:	f7fc fd05 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xC2);
 8003f22:	20c2      	movs	r0, #194	@ 0xc2
 8003f24:	f7fc fd02 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003f28:	2000      	movs	r0, #0
 8003f2a:	f7fc fcff 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xC7);
 8003f2e:	20c7      	movs	r0, #199	@ 0xc7
 8003f30:	f7fc fcfc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003f34:	2000      	movs	r0, #0
 8003f36:	f7fc fcf9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xD1);
 8003f3a:	20d1      	movs	r0, #209	@ 0xd1
 8003f3c:	f7fc fcf6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003f40:	2000      	movs	r0, #0
 8003f42:	f7fc fcf3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xD5);
 8003f46:	20d5      	movs	r0, #213	@ 0xd5
 8003f48:	f7fc fcf0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003f4c:	2000      	movs	r0, #0
 8003f4e:	f7fc fced 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xDD);
 8003f52:	20dd      	movs	r0, #221	@ 0xdd
 8003f54:	f7fc fcea 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003f58:	2000      	movs	r0, #0
 8003f5a:	f7fc fce7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xF3);
 8003f5e:	20f3      	movs	r0, #243	@ 0xf3
 8003f60:	f7fc fce4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003f64:	2000      	movs	r0, #0
 8003f66:	f7fc fce1 	bl	800092c <lcd_wr_xdata>
 8003f6a:	23e4      	movs	r3, #228	@ 0xe4
 8003f6c:	f8a7 309e 	strh.w	r3, [r7, #158]	@ 0x9e
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8003f70:	4b5b      	ldr	r3, [pc, #364]	@ (80040e0 <lcd_init+0x2538>)
 8003f72:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003f76:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8003f78:	4b59      	ldr	r3, [pc, #356]	@ (80040e0 <lcd_init+0x2538>)
 8003f7a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8003f7e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8003f80:	f8b7 309e 	ldrh.w	r3, [r7, #158]	@ 0x9e
 8003f84:	b29a      	uxth	r2, r3
 8003f86:	4b57      	ldr	r3, [pc, #348]	@ (80040e4 <lcd_init+0x253c>)
 8003f88:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8003f8a:	4b55      	ldr	r3, [pc, #340]	@ (80040e0 <lcd_init+0x2538>)
 8003f8c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8003f90:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8003f92:	4b53      	ldr	r3, [pc, #332]	@ (80040e0 <lcd_init+0x2538>)
 8003f94:	2280      	movs	r2, #128	@ 0x80
 8003f96:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8003f98:	4b51      	ldr	r3, [pc, #324]	@ (80040e0 <lcd_init+0x2538>)
 8003f9a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003f9e:	611a      	str	r2, [r3, #16]
}
 8003fa0:	bf00      	nop

        lcd_wr_regno(0xE4);
        lcd_wr_xdata(0x01);
 8003fa2:	2001      	movs	r0, #1
 8003fa4:	f7fc fcc2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003fa8:	2000      	movs	r0, #0
 8003faa:	f7fc fcbf 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01);
 8003fae:	2001      	movs	r0, #1
 8003fb0:	f7fc fcbc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003fb4:	2000      	movs	r0, #0
 8003fb6:	f7fc fcb9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x02);
 8003fba:	2002      	movs	r0, #2
 8003fbc:	f7fc fcb6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003fc0:	2000      	movs	r0, #0
 8003fc2:	f7fc fcb3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x2A);
 8003fc6:	202a      	movs	r0, #42	@ 0x2a
 8003fc8:	f7fc fcb0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003fcc:	2000      	movs	r0, #0
 8003fce:	f7fc fcad 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x3C);
 8003fd2:	203c      	movs	r0, #60	@ 0x3c
 8003fd4:	f7fc fcaa 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003fd8:	2000      	movs	r0, #0
 8003fda:	f7fc fca7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x4B);
 8003fde:	204b      	movs	r0, #75	@ 0x4b
 8003fe0:	f7fc fca4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003fe4:	2000      	movs	r0, #0
 8003fe6:	f7fc fca1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x5D);
 8003fea:	205d      	movs	r0, #93	@ 0x5d
 8003fec:	f7fc fc9e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ff0:	2000      	movs	r0, #0
 8003ff2:	f7fc fc9b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x74);
 8003ff6:	2074      	movs	r0, #116	@ 0x74
 8003ff8:	f7fc fc98 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8003ffc:	2000      	movs	r0, #0
 8003ffe:	f7fc fc95 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x84);
 8004002:	2084      	movs	r0, #132	@ 0x84
 8004004:	f7fc fc92 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004008:	2000      	movs	r0, #0
 800400a:	f7fc fc8f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x93);
 800400e:	2093      	movs	r0, #147	@ 0x93
 8004010:	f7fc fc8c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004014:	2000      	movs	r0, #0
 8004016:	f7fc fc89 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA2);
 800401a:	20a2      	movs	r0, #162	@ 0xa2
 800401c:	f7fc fc86 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004020:	2000      	movs	r0, #0
 8004022:	f7fc fc83 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xB3);
 8004026:	20b3      	movs	r0, #179	@ 0xb3
 8004028:	f7fc fc80 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800402c:	2000      	movs	r0, #0
 800402e:	f7fc fc7d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xBE);
 8004032:	20be      	movs	r0, #190	@ 0xbe
 8004034:	f7fc fc7a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004038:	2000      	movs	r0, #0
 800403a:	f7fc fc77 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xC4);
 800403e:	20c4      	movs	r0, #196	@ 0xc4
 8004040:	f7fc fc74 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004044:	2000      	movs	r0, #0
 8004046:	f7fc fc71 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xCD);
 800404a:	20cd      	movs	r0, #205	@ 0xcd
 800404c:	f7fc fc6e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004050:	2000      	movs	r0, #0
 8004052:	f7fc fc6b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xD3);
 8004056:	20d3      	movs	r0, #211	@ 0xd3
 8004058:	f7fc fc68 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800405c:	2000      	movs	r0, #0
 800405e:	f7fc fc65 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xDD);
 8004062:	20dd      	movs	r0, #221	@ 0xdd
 8004064:	f7fc fc62 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004068:	2000      	movs	r0, #0
 800406a:	f7fc fc5f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xF3);
 800406e:	20f3      	movs	r0, #243	@ 0xf3
 8004070:	f7fc fc5c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004074:	2000      	movs	r0, #0
 8004076:	f7fc fc59 	bl	800092c <lcd_wr_xdata>
 800407a:	23e5      	movs	r3, #229	@ 0xe5
 800407c:	f8a7 309c 	strh.w	r3, [r7, #156]	@ 0x9c
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004080:	4b17      	ldr	r3, [pc, #92]	@ (80040e0 <lcd_init+0x2538>)
 8004082:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004086:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004088:	4b15      	ldr	r3, [pc, #84]	@ (80040e0 <lcd_init+0x2538>)
 800408a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800408e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004090:	f8b7 309c 	ldrh.w	r3, [r7, #156]	@ 0x9c
 8004094:	b29a      	uxth	r2, r3
 8004096:	4b13      	ldr	r3, [pc, #76]	@ (80040e4 <lcd_init+0x253c>)
 8004098:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800409a:	4b11      	ldr	r3, [pc, #68]	@ (80040e0 <lcd_init+0x2538>)
 800409c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80040a0:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80040a2:	4b0f      	ldr	r3, [pc, #60]	@ (80040e0 <lcd_init+0x2538>)
 80040a4:	2280      	movs	r2, #128	@ 0x80
 80040a6:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80040a8:	4b0d      	ldr	r3, [pc, #52]	@ (80040e0 <lcd_init+0x2538>)
 80040aa:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80040ae:	611a      	str	r2, [r3, #16]
}
 80040b0:	bf00      	nop
        lcd_wr_regno(0xE5);
        lcd_wr_xdata(0x00);
 80040b2:	2000      	movs	r0, #0
 80040b4:	f7fc fc3a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80040b8:	2000      	movs	r0, #0
 80040ba:	f7fc fc37 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80040be:	2000      	movs	r0, #0
 80040c0:	f7fc fc34 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80040c4:	2000      	movs	r0, #0
 80040c6:	f7fc fc31 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x02);
 80040ca:	2002      	movs	r0, #2
 80040cc:	f7fc fc2e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80040d0:	2000      	movs	r0, #0
 80040d2:	f7fc fc2b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x29);
 80040d6:	2029      	movs	r0, #41	@ 0x29
 80040d8:	f7fc fc28 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80040dc:	2000      	movs	r0, #0
 80040de:	e003      	b.n	80040e8 <lcd_init+0x2540>
 80040e0:	40011000 	.word	0x40011000
 80040e4:	40010c00 	.word	0x40010c00
 80040e8:	f7fc fc20 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x3C);
 80040ec:	203c      	movs	r0, #60	@ 0x3c
 80040ee:	f7fc fc1d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80040f2:	2000      	movs	r0, #0
 80040f4:	f7fc fc1a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x4B);
 80040f8:	204b      	movs	r0, #75	@ 0x4b
 80040fa:	f7fc fc17 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80040fe:	2000      	movs	r0, #0
 8004100:	f7fc fc14 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x5D);
 8004104:	205d      	movs	r0, #93	@ 0x5d
 8004106:	f7fc fc11 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800410a:	2000      	movs	r0, #0
 800410c:	f7fc fc0e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x74);
 8004110:	2074      	movs	r0, #116	@ 0x74
 8004112:	f7fc fc0b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004116:	2000      	movs	r0, #0
 8004118:	f7fc fc08 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x84);
 800411c:	2084      	movs	r0, #132	@ 0x84
 800411e:	f7fc fc05 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004122:	2000      	movs	r0, #0
 8004124:	f7fc fc02 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x93);
 8004128:	2093      	movs	r0, #147	@ 0x93
 800412a:	f7fc fbff 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800412e:	2000      	movs	r0, #0
 8004130:	f7fc fbfc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA2);
 8004134:	20a2      	movs	r0, #162	@ 0xa2
 8004136:	f7fc fbf9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800413a:	2000      	movs	r0, #0
 800413c:	f7fc fbf6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xB3);
 8004140:	20b3      	movs	r0, #179	@ 0xb3
 8004142:	f7fc fbf3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004146:	2000      	movs	r0, #0
 8004148:	f7fc fbf0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xBE);
 800414c:	20be      	movs	r0, #190	@ 0xbe
 800414e:	f7fc fbed 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004152:	2000      	movs	r0, #0
 8004154:	f7fc fbea 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xC4);
 8004158:	20c4      	movs	r0, #196	@ 0xc4
 800415a:	f7fc fbe7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800415e:	2000      	movs	r0, #0
 8004160:	f7fc fbe4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xCD);
 8004164:	20cd      	movs	r0, #205	@ 0xcd
 8004166:	f7fc fbe1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800416a:	2000      	movs	r0, #0
 800416c:	f7fc fbde 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xD3);
 8004170:	20d3      	movs	r0, #211	@ 0xd3
 8004172:	f7fc fbdb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004176:	2000      	movs	r0, #0
 8004178:	f7fc fbd8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xDC);
 800417c:	20dc      	movs	r0, #220	@ 0xdc
 800417e:	f7fc fbd5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004182:	2000      	movs	r0, #0
 8004184:	f7fc fbd2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xF3);
 8004188:	20f3      	movs	r0, #243	@ 0xf3
 800418a:	f7fc fbcf 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800418e:	2000      	movs	r0, #0
 8004190:	f7fc fbcc 	bl	800092c <lcd_wr_xdata>
 8004194:	23e6      	movs	r3, #230	@ 0xe6
 8004196:	f8a7 309a 	strh.w	r3, [r7, #154]	@ 0x9a
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800419a:	4bde      	ldr	r3, [pc, #888]	@ (8004514 <lcd_init+0x296c>)
 800419c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80041a0:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80041a2:	4bdc      	ldr	r3, [pc, #880]	@ (8004514 <lcd_init+0x296c>)
 80041a4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80041a8:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80041aa:	f8b7 309a 	ldrh.w	r3, [r7, #154]	@ 0x9a
 80041ae:	b29a      	uxth	r2, r3
 80041b0:	4bd9      	ldr	r3, [pc, #868]	@ (8004518 <lcd_init+0x2970>)
 80041b2:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80041b4:	4bd7      	ldr	r3, [pc, #860]	@ (8004514 <lcd_init+0x296c>)
 80041b6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80041ba:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80041bc:	4bd5      	ldr	r3, [pc, #852]	@ (8004514 <lcd_init+0x296c>)
 80041be:	2280      	movs	r2, #128	@ 0x80
 80041c0:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80041c2:	4bd4      	ldr	r3, [pc, #848]	@ (8004514 <lcd_init+0x296c>)
 80041c4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80041c8:	611a      	str	r2, [r3, #16]
}
 80041ca:	bf00      	nop

        lcd_wr_regno(0xE6);
        lcd_wr_xdata(0x11);
 80041cc:	2011      	movs	r0, #17
 80041ce:	f7fc fbad 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80041d2:	2000      	movs	r0, #0
 80041d4:	f7fc fbaa 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x34);
 80041d8:	2034      	movs	r0, #52	@ 0x34
 80041da:	f7fc fba7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80041de:	2000      	movs	r0, #0
 80041e0:	f7fc fba4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x56);
 80041e4:	2056      	movs	r0, #86	@ 0x56
 80041e6:	f7fc fba1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80041ea:	2000      	movs	r0, #0
 80041ec:	f7fc fb9e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x76);
 80041f0:	2076      	movs	r0, #118	@ 0x76
 80041f2:	f7fc fb9b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80041f6:	2000      	movs	r0, #0
 80041f8:	f7fc fb98 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x77);
 80041fc:	2077      	movs	r0, #119	@ 0x77
 80041fe:	f7fc fb95 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004202:	2000      	movs	r0, #0
 8004204:	f7fc fb92 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x66);
 8004208:	2066      	movs	r0, #102	@ 0x66
 800420a:	f7fc fb8f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800420e:	2000      	movs	r0, #0
 8004210:	f7fc fb8c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x88);
 8004214:	2088      	movs	r0, #136	@ 0x88
 8004216:	f7fc fb89 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800421a:	2000      	movs	r0, #0
 800421c:	f7fc fb86 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x99);
 8004220:	2099      	movs	r0, #153	@ 0x99
 8004222:	f7fc fb83 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004226:	2000      	movs	r0, #0
 8004228:	f7fc fb80 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xBB);
 800422c:	20bb      	movs	r0, #187	@ 0xbb
 800422e:	f7fc fb7d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004232:	2000      	movs	r0, #0
 8004234:	f7fc fb7a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x99);
 8004238:	2099      	movs	r0, #153	@ 0x99
 800423a:	f7fc fb77 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800423e:	2000      	movs	r0, #0
 8004240:	f7fc fb74 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x66);
 8004244:	2066      	movs	r0, #102	@ 0x66
 8004246:	f7fc fb71 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800424a:	2000      	movs	r0, #0
 800424c:	f7fc fb6e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x55);
 8004250:	2055      	movs	r0, #85	@ 0x55
 8004252:	f7fc fb6b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004256:	2000      	movs	r0, #0
 8004258:	f7fc fb68 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x55);
 800425c:	2055      	movs	r0, #85	@ 0x55
 800425e:	f7fc fb65 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004262:	2000      	movs	r0, #0
 8004264:	f7fc fb62 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x45);
 8004268:	2045      	movs	r0, #69	@ 0x45
 800426a:	f7fc fb5f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800426e:	2000      	movs	r0, #0
 8004270:	f7fc fb5c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x43);
 8004274:	2043      	movs	r0, #67	@ 0x43
 8004276:	f7fc fb59 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800427a:	2000      	movs	r0, #0
 800427c:	f7fc fb56 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x44);
 8004280:	2044      	movs	r0, #68	@ 0x44
 8004282:	f7fc fb53 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004286:	2000      	movs	r0, #0
 8004288:	f7fc fb50 	bl	800092c <lcd_wr_xdata>
 800428c:	23e7      	movs	r3, #231	@ 0xe7
 800428e:	f8a7 3098 	strh.w	r3, [r7, #152]	@ 0x98
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004292:	4ba0      	ldr	r3, [pc, #640]	@ (8004514 <lcd_init+0x296c>)
 8004294:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004298:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800429a:	4b9e      	ldr	r3, [pc, #632]	@ (8004514 <lcd_init+0x296c>)
 800429c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80042a0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80042a2:	f8b7 3098 	ldrh.w	r3, [r7, #152]	@ 0x98
 80042a6:	b29a      	uxth	r2, r3
 80042a8:	4b9b      	ldr	r3, [pc, #620]	@ (8004518 <lcd_init+0x2970>)
 80042aa:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80042ac:	4b99      	ldr	r3, [pc, #612]	@ (8004514 <lcd_init+0x296c>)
 80042ae:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80042b2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80042b4:	4b97      	ldr	r3, [pc, #604]	@ (8004514 <lcd_init+0x296c>)
 80042b6:	2280      	movs	r2, #128	@ 0x80
 80042b8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80042ba:	4b96      	ldr	r3, [pc, #600]	@ (8004514 <lcd_init+0x296c>)
 80042bc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80042c0:	611a      	str	r2, [r3, #16]
}
 80042c2:	bf00      	nop

        lcd_wr_regno(0xE7);
        lcd_wr_xdata(0x32);
 80042c4:	2032      	movs	r0, #50	@ 0x32
 80042c6:	f7fc fb31 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80042ca:	2000      	movs	r0, #0
 80042cc:	f7fc fb2e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x55);
 80042d0:	2055      	movs	r0, #85	@ 0x55
 80042d2:	f7fc fb2b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80042d6:	2000      	movs	r0, #0
 80042d8:	f7fc fb28 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x76);
 80042dc:	2076      	movs	r0, #118	@ 0x76
 80042de:	f7fc fb25 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80042e2:	2000      	movs	r0, #0
 80042e4:	f7fc fb22 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x66);
 80042e8:	2066      	movs	r0, #102	@ 0x66
 80042ea:	f7fc fb1f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80042ee:	2000      	movs	r0, #0
 80042f0:	f7fc fb1c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x67);
 80042f4:	2067      	movs	r0, #103	@ 0x67
 80042f6:	f7fc fb19 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80042fa:	2000      	movs	r0, #0
 80042fc:	f7fc fb16 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x67);
 8004300:	2067      	movs	r0, #103	@ 0x67
 8004302:	f7fc fb13 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004306:	2000      	movs	r0, #0
 8004308:	f7fc fb10 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x87);
 800430c:	2087      	movs	r0, #135	@ 0x87
 800430e:	f7fc fb0d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004312:	2000      	movs	r0, #0
 8004314:	f7fc fb0a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x99);
 8004318:	2099      	movs	r0, #153	@ 0x99
 800431a:	f7fc fb07 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800431e:	2000      	movs	r0, #0
 8004320:	f7fc fb04 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xBB);
 8004324:	20bb      	movs	r0, #187	@ 0xbb
 8004326:	f7fc fb01 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800432a:	2000      	movs	r0, #0
 800432c:	f7fc fafe 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x99);
 8004330:	2099      	movs	r0, #153	@ 0x99
 8004332:	f7fc fafb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004336:	2000      	movs	r0, #0
 8004338:	f7fc faf8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x77);
 800433c:	2077      	movs	r0, #119	@ 0x77
 800433e:	f7fc faf5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004342:	2000      	movs	r0, #0
 8004344:	f7fc faf2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x44);
 8004348:	2044      	movs	r0, #68	@ 0x44
 800434a:	f7fc faef 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800434e:	2000      	movs	r0, #0
 8004350:	f7fc faec 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x56);
 8004354:	2056      	movs	r0, #86	@ 0x56
 8004356:	f7fc fae9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800435a:	2000      	movs	r0, #0
 800435c:	f7fc fae6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x23);
 8004360:	2023      	movs	r0, #35	@ 0x23
 8004362:	f7fc fae3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004366:	2000      	movs	r0, #0
 8004368:	f7fc fae0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x33);
 800436c:	2033      	movs	r0, #51	@ 0x33
 800436e:	f7fc fadd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004372:	2000      	movs	r0, #0
 8004374:	f7fc fada 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x45);
 8004378:	2045      	movs	r0, #69	@ 0x45
 800437a:	f7fc fad7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800437e:	2000      	movs	r0, #0
 8004380:	f7fc fad4 	bl	800092c <lcd_wr_xdata>
 8004384:	23e8      	movs	r3, #232	@ 0xe8
 8004386:	f8a7 3096 	strh.w	r3, [r7, #150]	@ 0x96
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800438a:	4b62      	ldr	r3, [pc, #392]	@ (8004514 <lcd_init+0x296c>)
 800438c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004390:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004392:	4b60      	ldr	r3, [pc, #384]	@ (8004514 <lcd_init+0x296c>)
 8004394:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004398:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800439a:	f8b7 3096 	ldrh.w	r3, [r7, #150]	@ 0x96
 800439e:	b29a      	uxth	r2, r3
 80043a0:	4b5d      	ldr	r3, [pc, #372]	@ (8004518 <lcd_init+0x2970>)
 80043a2:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80043a4:	4b5b      	ldr	r3, [pc, #364]	@ (8004514 <lcd_init+0x296c>)
 80043a6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80043aa:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80043ac:	4b59      	ldr	r3, [pc, #356]	@ (8004514 <lcd_init+0x296c>)
 80043ae:	2280      	movs	r2, #128	@ 0x80
 80043b0:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80043b2:	4b58      	ldr	r3, [pc, #352]	@ (8004514 <lcd_init+0x296c>)
 80043b4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80043b8:	611a      	str	r2, [r3, #16]
}
 80043ba:	bf00      	nop

        lcd_wr_regno(0xE8);
        lcd_wr_xdata(0x00);
 80043bc:	2000      	movs	r0, #0
 80043be:	f7fc fab5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80043c2:	2000      	movs	r0, #0
 80043c4:	f7fc fab2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x99);
 80043c8:	2099      	movs	r0, #153	@ 0x99
 80043ca:	f7fc faaf 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80043ce:	2000      	movs	r0, #0
 80043d0:	f7fc faac 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x87);
 80043d4:	2087      	movs	r0, #135	@ 0x87
 80043d6:	f7fc faa9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80043da:	2000      	movs	r0, #0
 80043dc:	f7fc faa6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x88);
 80043e0:	2088      	movs	r0, #136	@ 0x88
 80043e2:	f7fc faa3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80043e6:	2000      	movs	r0, #0
 80043e8:	f7fc faa0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x77);
 80043ec:	2077      	movs	r0, #119	@ 0x77
 80043ee:	f7fc fa9d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80043f2:	2000      	movs	r0, #0
 80043f4:	f7fc fa9a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x66);
 80043f8:	2066      	movs	r0, #102	@ 0x66
 80043fa:	f7fc fa97 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80043fe:	2000      	movs	r0, #0
 8004400:	f7fc fa94 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x88);
 8004404:	2088      	movs	r0, #136	@ 0x88
 8004406:	f7fc fa91 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800440a:	2000      	movs	r0, #0
 800440c:	f7fc fa8e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xAA);
 8004410:	20aa      	movs	r0, #170	@ 0xaa
 8004412:	f7fc fa8b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004416:	2000      	movs	r0, #0
 8004418:	f7fc fa88 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xBB);
 800441c:	20bb      	movs	r0, #187	@ 0xbb
 800441e:	f7fc fa85 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004422:	2000      	movs	r0, #0
 8004424:	f7fc fa82 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x99);
 8004428:	2099      	movs	r0, #153	@ 0x99
 800442a:	f7fc fa7f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800442e:	2000      	movs	r0, #0
 8004430:	f7fc fa7c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x66);
 8004434:	2066      	movs	r0, #102	@ 0x66
 8004436:	f7fc fa79 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800443a:	2000      	movs	r0, #0
 800443c:	f7fc fa76 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x55);
 8004440:	2055      	movs	r0, #85	@ 0x55
 8004442:	f7fc fa73 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004446:	2000      	movs	r0, #0
 8004448:	f7fc fa70 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x55);
 800444c:	2055      	movs	r0, #85	@ 0x55
 800444e:	f7fc fa6d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004452:	2000      	movs	r0, #0
 8004454:	f7fc fa6a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x44);
 8004458:	2044      	movs	r0, #68	@ 0x44
 800445a:	f7fc fa67 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800445e:	2000      	movs	r0, #0
 8004460:	f7fc fa64 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x44);
 8004464:	2044      	movs	r0, #68	@ 0x44
 8004466:	f7fc fa61 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800446a:	2000      	movs	r0, #0
 800446c:	f7fc fa5e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x55);
 8004470:	2055      	movs	r0, #85	@ 0x55
 8004472:	f7fc fa5b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004476:	2000      	movs	r0, #0
 8004478:	f7fc fa58 	bl	800092c <lcd_wr_xdata>
 800447c:	23e9      	movs	r3, #233	@ 0xe9
 800447e:	f8a7 3094 	strh.w	r3, [r7, #148]	@ 0x94
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004482:	4b24      	ldr	r3, [pc, #144]	@ (8004514 <lcd_init+0x296c>)
 8004484:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004488:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800448a:	4b22      	ldr	r3, [pc, #136]	@ (8004514 <lcd_init+0x296c>)
 800448c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004490:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004492:	f8b7 3094 	ldrh.w	r3, [r7, #148]	@ 0x94
 8004496:	b29a      	uxth	r2, r3
 8004498:	4b1f      	ldr	r3, [pc, #124]	@ (8004518 <lcd_init+0x2970>)
 800449a:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800449c:	4b1d      	ldr	r3, [pc, #116]	@ (8004514 <lcd_init+0x296c>)
 800449e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80044a2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80044a4:	4b1b      	ldr	r3, [pc, #108]	@ (8004514 <lcd_init+0x296c>)
 80044a6:	2280      	movs	r2, #128	@ 0x80
 80044a8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80044aa:	4b1a      	ldr	r3, [pc, #104]	@ (8004514 <lcd_init+0x296c>)
 80044ac:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80044b0:	611a      	str	r2, [r3, #16]
}
 80044b2:	bf00      	nop

        lcd_wr_regno(0xE9);
        lcd_wr_xdata(0xAA);
 80044b4:	20aa      	movs	r0, #170	@ 0xaa
 80044b6:	f7fc fa39 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80044ba:	2000      	movs	r0, #0
 80044bc:	f7fc fa36 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80044c0:	2000      	movs	r0, #0
 80044c2:	f7fc fa33 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80044c6:	2000      	movs	r0, #0
 80044c8:	f7fc fa30 	bl	800092c <lcd_wr_xdata>
 80044cc:	2300      	movs	r3, #0
 80044ce:	f8a7 3092 	strh.w	r3, [r7, #146]	@ 0x92
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80044d2:	4b10      	ldr	r3, [pc, #64]	@ (8004514 <lcd_init+0x296c>)
 80044d4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80044d8:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80044da:	4b0e      	ldr	r3, [pc, #56]	@ (8004514 <lcd_init+0x296c>)
 80044dc:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80044e0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80044e2:	f8b7 3092 	ldrh.w	r3, [r7, #146]	@ 0x92
 80044e6:	b29a      	uxth	r2, r3
 80044e8:	4b0b      	ldr	r3, [pc, #44]	@ (8004518 <lcd_init+0x2970>)
 80044ea:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80044ec:	4b09      	ldr	r3, [pc, #36]	@ (8004514 <lcd_init+0x296c>)
 80044ee:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80044f2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80044f4:	4b07      	ldr	r3, [pc, #28]	@ (8004514 <lcd_init+0x296c>)
 80044f6:	2280      	movs	r2, #128	@ 0x80
 80044f8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80044fa:	4b06      	ldr	r3, [pc, #24]	@ (8004514 <lcd_init+0x296c>)
 80044fc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004500:	611a      	str	r2, [r3, #16]
}
 8004502:	bf00      	nop

        lcd_wr_regno(0x00);
        lcd_wr_xdata(0xAA);
 8004504:	20aa      	movs	r0, #170	@ 0xaa
 8004506:	f7fc fa11 	bl	800092c <lcd_wr_xdata>
 800450a:	23cf      	movs	r3, #207	@ 0xcf
 800450c:	f8a7 3090 	strh.w	r3, [r7, #144]	@ 0x90
 8004510:	e004      	b.n	800451c <lcd_init+0x2974>
 8004512:	bf00      	nop
 8004514:	40011000 	.word	0x40011000
 8004518:	40010c00 	.word	0x40010c00
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800451c:	4bbc      	ldr	r3, [pc, #752]	@ (8004810 <lcd_init+0x2c68>)
 800451e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004522:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004524:	4bba      	ldr	r3, [pc, #744]	@ (8004810 <lcd_init+0x2c68>)
 8004526:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800452a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800452c:	f8b7 3090 	ldrh.w	r3, [r7, #144]	@ 0x90
 8004530:	b29a      	uxth	r2, r3
 8004532:	4bb8      	ldr	r3, [pc, #736]	@ (8004814 <lcd_init+0x2c6c>)
 8004534:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004536:	4bb6      	ldr	r3, [pc, #728]	@ (8004810 <lcd_init+0x2c68>)
 8004538:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800453c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800453e:	4bb4      	ldr	r3, [pc, #720]	@ (8004810 <lcd_init+0x2c68>)
 8004540:	2280      	movs	r2, #128	@ 0x80
 8004542:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004544:	4bb2      	ldr	r3, [pc, #712]	@ (8004810 <lcd_init+0x2c68>)
 8004546:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800454a:	611a      	str	r2, [r3, #16]
}
 800454c:	bf00      	nop

        lcd_wr_regno(0xCF);
        lcd_wr_xdata(0x00);
 800454e:	2000      	movs	r0, #0
 8004550:	f7fc f9ec 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004554:	2000      	movs	r0, #0
 8004556:	f7fc f9e9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800455a:	2000      	movs	r0, #0
 800455c:	f7fc f9e6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004560:	2000      	movs	r0, #0
 8004562:	f7fc f9e3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004566:	2000      	movs	r0, #0
 8004568:	f7fc f9e0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800456c:	2000      	movs	r0, #0
 800456e:	f7fc f9dd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004572:	2000      	movs	r0, #0
 8004574:	f7fc f9da 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004578:	2000      	movs	r0, #0
 800457a:	f7fc f9d7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800457e:	2000      	movs	r0, #0
 8004580:	f7fc f9d4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004584:	2000      	movs	r0, #0
 8004586:	f7fc f9d1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800458a:	2000      	movs	r0, #0
 800458c:	f7fc f9ce 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004590:	2000      	movs	r0, #0
 8004592:	f7fc f9cb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004596:	2000      	movs	r0, #0
 8004598:	f7fc f9c8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800459c:	2000      	movs	r0, #0
 800459e:	f7fc f9c5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80045a2:	2000      	movs	r0, #0
 80045a4:	f7fc f9c2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80045a8:	2000      	movs	r0, #0
 80045aa:	f7fc f9bf 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80045ae:	2000      	movs	r0, #0
 80045b0:	f7fc f9bc 	bl	800092c <lcd_wr_xdata>
 80045b4:	23f0      	movs	r3, #240	@ 0xf0
 80045b6:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80045ba:	4b95      	ldr	r3, [pc, #596]	@ (8004810 <lcd_init+0x2c68>)
 80045bc:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80045c0:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80045c2:	4b93      	ldr	r3, [pc, #588]	@ (8004810 <lcd_init+0x2c68>)
 80045c4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80045c8:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80045ca:	f8b7 308e 	ldrh.w	r3, [r7, #142]	@ 0x8e
 80045ce:	b29a      	uxth	r2, r3
 80045d0:	4b90      	ldr	r3, [pc, #576]	@ (8004814 <lcd_init+0x2c6c>)
 80045d2:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80045d4:	4b8e      	ldr	r3, [pc, #568]	@ (8004810 <lcd_init+0x2c68>)
 80045d6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80045da:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80045dc:	4b8c      	ldr	r3, [pc, #560]	@ (8004810 <lcd_init+0x2c68>)
 80045de:	2280      	movs	r2, #128	@ 0x80
 80045e0:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80045e2:	4b8b      	ldr	r3, [pc, #556]	@ (8004810 <lcd_init+0x2c68>)
 80045e4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80045e8:	611a      	str	r2, [r3, #16]
}
 80045ea:	bf00      	nop

        lcd_wr_regno(0xF0);
        lcd_wr_xdata(0x00);
 80045ec:	2000      	movs	r0, #0
 80045ee:	f7fc f99d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x50);
 80045f2:	2050      	movs	r0, #80	@ 0x50
 80045f4:	f7fc f99a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80045f8:	2000      	movs	r0, #0
 80045fa:	f7fc f997 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80045fe:	2000      	movs	r0, #0
 8004600:	f7fc f994 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004604:	2000      	movs	r0, #0
 8004606:	f7fc f991 	bl	800092c <lcd_wr_xdata>
 800460a:	23f3      	movs	r3, #243	@ 0xf3
 800460c:	f8a7 308c 	strh.w	r3, [r7, #140]	@ 0x8c
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004610:	4b7f      	ldr	r3, [pc, #508]	@ (8004810 <lcd_init+0x2c68>)
 8004612:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004616:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004618:	4b7d      	ldr	r3, [pc, #500]	@ (8004810 <lcd_init+0x2c68>)
 800461a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800461e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004620:	f8b7 308c 	ldrh.w	r3, [r7, #140]	@ 0x8c
 8004624:	b29a      	uxth	r2, r3
 8004626:	4b7b      	ldr	r3, [pc, #492]	@ (8004814 <lcd_init+0x2c6c>)
 8004628:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800462a:	4b79      	ldr	r3, [pc, #484]	@ (8004810 <lcd_init+0x2c68>)
 800462c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004630:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004632:	4b77      	ldr	r3, [pc, #476]	@ (8004810 <lcd_init+0x2c68>)
 8004634:	2280      	movs	r2, #128	@ 0x80
 8004636:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004638:	4b75      	ldr	r3, [pc, #468]	@ (8004810 <lcd_init+0x2c68>)
 800463a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800463e:	611a      	str	r2, [r3, #16]
}
 8004640:	bf00      	nop

        lcd_wr_regno(0xF3);
        lcd_wr_xdata(0x00);
 8004642:	2000      	movs	r0, #0
 8004644:	f7fc f972 	bl	800092c <lcd_wr_xdata>
 8004648:	23f9      	movs	r3, #249	@ 0xf9
 800464a:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800464e:	4b70      	ldr	r3, [pc, #448]	@ (8004810 <lcd_init+0x2c68>)
 8004650:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004654:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004656:	4b6e      	ldr	r3, [pc, #440]	@ (8004810 <lcd_init+0x2c68>)
 8004658:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800465c:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800465e:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 8004662:	b29a      	uxth	r2, r3
 8004664:	4b6b      	ldr	r3, [pc, #428]	@ (8004814 <lcd_init+0x2c6c>)
 8004666:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004668:	4b69      	ldr	r3, [pc, #420]	@ (8004810 <lcd_init+0x2c68>)
 800466a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800466e:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004670:	4b67      	ldr	r3, [pc, #412]	@ (8004810 <lcd_init+0x2c68>)
 8004672:	2280      	movs	r2, #128	@ 0x80
 8004674:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004676:	4b66      	ldr	r3, [pc, #408]	@ (8004810 <lcd_init+0x2c68>)
 8004678:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800467c:	611a      	str	r2, [r3, #16]
}
 800467e:	bf00      	nop

        lcd_wr_regno(0xF9);
        lcd_wr_xdata(0x06);
 8004680:	2006      	movs	r0, #6
 8004682:	f7fc f953 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x10);
 8004686:	2010      	movs	r0, #16
 8004688:	f7fc f950 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x29);
 800468c:	2029      	movs	r0, #41	@ 0x29
 800468e:	f7fc f94d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004692:	2000      	movs	r0, #0
 8004694:	f7fc f94a 	bl	800092c <lcd_wr_xdata>
 8004698:	233a      	movs	r3, #58	@ 0x3a
 800469a:	f8a7 3088 	strh.w	r3, [r7, #136]	@ 0x88
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800469e:	4b5c      	ldr	r3, [pc, #368]	@ (8004810 <lcd_init+0x2c68>)
 80046a0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80046a4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80046a6:	4b5a      	ldr	r3, [pc, #360]	@ (8004810 <lcd_init+0x2c68>)
 80046a8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80046ac:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80046ae:	f8b7 3088 	ldrh.w	r3, [r7, #136]	@ 0x88
 80046b2:	b29a      	uxth	r2, r3
 80046b4:	4b57      	ldr	r3, [pc, #348]	@ (8004814 <lcd_init+0x2c6c>)
 80046b6:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80046b8:	4b55      	ldr	r3, [pc, #340]	@ (8004810 <lcd_init+0x2c68>)
 80046ba:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80046be:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80046c0:	4b53      	ldr	r3, [pc, #332]	@ (8004810 <lcd_init+0x2c68>)
 80046c2:	2280      	movs	r2, #128	@ 0x80
 80046c4:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80046c6:	4b52      	ldr	r3, [pc, #328]	@ (8004810 <lcd_init+0x2c68>)
 80046c8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80046cc:	611a      	str	r2, [r3, #16]
}
 80046ce:	bf00      	nop

        lcd_wr_regno(0x3A);
        lcd_wr_xdata(0x55);  /* 66 */
 80046d0:	2055      	movs	r0, #85	@ 0x55
 80046d2:	f7fc f92b 	bl	800092c <lcd_wr_xdata>
 80046d6:	2311      	movs	r3, #17
 80046d8:	f8a7 3086 	strh.w	r3, [r7, #134]	@ 0x86
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80046dc:	4b4c      	ldr	r3, [pc, #304]	@ (8004810 <lcd_init+0x2c68>)
 80046de:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80046e2:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80046e4:	4b4a      	ldr	r3, [pc, #296]	@ (8004810 <lcd_init+0x2c68>)
 80046e6:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80046ea:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80046ec:	f8b7 3086 	ldrh.w	r3, [r7, #134]	@ 0x86
 80046f0:	b29a      	uxth	r2, r3
 80046f2:	4b48      	ldr	r3, [pc, #288]	@ (8004814 <lcd_init+0x2c6c>)
 80046f4:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80046f6:	4b46      	ldr	r3, [pc, #280]	@ (8004810 <lcd_init+0x2c68>)
 80046f8:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80046fc:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80046fe:	4b44      	ldr	r3, [pc, #272]	@ (8004810 <lcd_init+0x2c68>)
 8004700:	2280      	movs	r2, #128	@ 0x80
 8004702:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004704:	4b42      	ldr	r3, [pc, #264]	@ (8004810 <lcd_init+0x2c68>)
 8004706:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800470a:	611a      	str	r2, [r3, #16]
}
 800470c:	bf00      	nop

        lcd_wr_regno(0x11);
        HAL_Delay(100);
 800470e:	2064      	movs	r0, #100	@ 0x64
 8004710:	f002 fed2 	bl	80074b8 <HAL_Delay>
 8004714:	2329      	movs	r3, #41	@ 0x29
 8004716:	f8a7 3084 	strh.w	r3, [r7, #132]	@ 0x84
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800471a:	4b3d      	ldr	r3, [pc, #244]	@ (8004810 <lcd_init+0x2c68>)
 800471c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004720:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004722:	4b3b      	ldr	r3, [pc, #236]	@ (8004810 <lcd_init+0x2c68>)
 8004724:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004728:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800472a:	f8b7 3084 	ldrh.w	r3, [r7, #132]	@ 0x84
 800472e:	b29a      	uxth	r2, r3
 8004730:	4b38      	ldr	r3, [pc, #224]	@ (8004814 <lcd_init+0x2c6c>)
 8004732:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004734:	4b36      	ldr	r3, [pc, #216]	@ (8004810 <lcd_init+0x2c68>)
 8004736:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800473a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800473c:	4b34      	ldr	r3, [pc, #208]	@ (8004810 <lcd_init+0x2c68>)
 800473e:	2280      	movs	r2, #128	@ 0x80
 8004740:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004742:	4b33      	ldr	r3, [pc, #204]	@ (8004810 <lcd_init+0x2c68>)
 8004744:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004748:	611a      	str	r2, [r3, #16]
}
 800474a:	bf00      	nop
 800474c:	2335      	movs	r3, #53	@ 0x35
 800474e:	f8a7 3082 	strh.w	r3, [r7, #130]	@ 0x82
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004752:	4b2f      	ldr	r3, [pc, #188]	@ (8004810 <lcd_init+0x2c68>)
 8004754:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004758:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800475a:	4b2d      	ldr	r3, [pc, #180]	@ (8004810 <lcd_init+0x2c68>)
 800475c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004760:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004762:	f8b7 3082 	ldrh.w	r3, [r7, #130]	@ 0x82
 8004766:	b29a      	uxth	r2, r3
 8004768:	4b2a      	ldr	r3, [pc, #168]	@ (8004814 <lcd_init+0x2c6c>)
 800476a:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800476c:	4b28      	ldr	r3, [pc, #160]	@ (8004810 <lcd_init+0x2c68>)
 800476e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004772:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004774:	4b26      	ldr	r3, [pc, #152]	@ (8004810 <lcd_init+0x2c68>)
 8004776:	2280      	movs	r2, #128	@ 0x80
 8004778:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800477a:	4b25      	ldr	r3, [pc, #148]	@ (8004810 <lcd_init+0x2c68>)
 800477c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004780:	611a      	str	r2, [r3, #16]
}
 8004782:	bf00      	nop
        lcd_wr_regno(0x29);
        lcd_wr_regno(0x35);
        lcd_wr_xdata(0x00);
 8004784:	2000      	movs	r0, #0
 8004786:	f7fc f8d1 	bl	800092c <lcd_wr_xdata>
 800478a:	2351      	movs	r3, #81	@ 0x51
 800478c:	f8a7 3080 	strh.w	r3, [r7, #128]	@ 0x80
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004790:	4b1f      	ldr	r3, [pc, #124]	@ (8004810 <lcd_init+0x2c68>)
 8004792:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004796:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004798:	4b1d      	ldr	r3, [pc, #116]	@ (8004810 <lcd_init+0x2c68>)
 800479a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800479e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80047a0:	f8b7 3080 	ldrh.w	r3, [r7, #128]	@ 0x80
 80047a4:	b29a      	uxth	r2, r3
 80047a6:	4b1b      	ldr	r3, [pc, #108]	@ (8004814 <lcd_init+0x2c6c>)
 80047a8:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80047aa:	4b19      	ldr	r3, [pc, #100]	@ (8004810 <lcd_init+0x2c68>)
 80047ac:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80047b0:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80047b2:	4b17      	ldr	r3, [pc, #92]	@ (8004810 <lcd_init+0x2c68>)
 80047b4:	2280      	movs	r2, #128	@ 0x80
 80047b6:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80047b8:	4b15      	ldr	r3, [pc, #84]	@ (8004810 <lcd_init+0x2c68>)
 80047ba:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80047be:	611a      	str	r2, [r3, #16]
}
 80047c0:	bf00      	nop

        lcd_wr_regno(0x51);
        lcd_wr_xdata(0xFF);
 80047c2:	20ff      	movs	r0, #255	@ 0xff
 80047c4:	f7fc f8b2 	bl	800092c <lcd_wr_xdata>
 80047c8:	2353      	movs	r3, #83	@ 0x53
 80047ca:	f8a7 307e 	strh.w	r3, [r7, #126]	@ 0x7e
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80047ce:	4b10      	ldr	r3, [pc, #64]	@ (8004810 <lcd_init+0x2c68>)
 80047d0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80047d4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80047d6:	4b0e      	ldr	r3, [pc, #56]	@ (8004810 <lcd_init+0x2c68>)
 80047d8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80047dc:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80047de:	f8b7 307e 	ldrh.w	r3, [r7, #126]	@ 0x7e
 80047e2:	b29a      	uxth	r2, r3
 80047e4:	4b0b      	ldr	r3, [pc, #44]	@ (8004814 <lcd_init+0x2c6c>)
 80047e6:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80047e8:	4b09      	ldr	r3, [pc, #36]	@ (8004810 <lcd_init+0x2c68>)
 80047ea:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80047ee:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80047f0:	4b07      	ldr	r3, [pc, #28]	@ (8004810 <lcd_init+0x2c68>)
 80047f2:	2280      	movs	r2, #128	@ 0x80
 80047f4:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80047f6:	4b06      	ldr	r3, [pc, #24]	@ (8004810 <lcd_init+0x2c68>)
 80047f8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80047fc:	611a      	str	r2, [r3, #16]
}
 80047fe:	bf00      	nop
        lcd_wr_regno(0x53);
        lcd_wr_xdata(0x2C);
 8004800:	202c      	movs	r0, #44	@ 0x2c
 8004802:	f7fc f893 	bl	800092c <lcd_wr_xdata>
 8004806:	2355      	movs	r3, #85	@ 0x55
 8004808:	f8a7 307c 	strh.w	r3, [r7, #124]	@ 0x7c
 800480c:	e004      	b.n	8004818 <lcd_init+0x2c70>
 800480e:	bf00      	nop
 8004810:	40011000 	.word	0x40011000
 8004814:	40010c00 	.word	0x40010c00
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004818:	4b1c      	ldr	r3, [pc, #112]	@ (800488c <lcd_init+0x2ce4>)
 800481a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800481e:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004820:	4b1a      	ldr	r3, [pc, #104]	@ (800488c <lcd_init+0x2ce4>)
 8004822:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004826:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004828:	f8b7 307c 	ldrh.w	r3, [r7, #124]	@ 0x7c
 800482c:	b29a      	uxth	r2, r3
 800482e:	4b18      	ldr	r3, [pc, #96]	@ (8004890 <lcd_init+0x2ce8>)
 8004830:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004832:	4b16      	ldr	r3, [pc, #88]	@ (800488c <lcd_init+0x2ce4>)
 8004834:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004838:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800483a:	4b14      	ldr	r3, [pc, #80]	@ (800488c <lcd_init+0x2ce4>)
 800483c:	2280      	movs	r2, #128	@ 0x80
 800483e:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004840:	4b12      	ldr	r3, [pc, #72]	@ (800488c <lcd_init+0x2ce4>)
 8004842:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004846:	611a      	str	r2, [r3, #16]
}
 8004848:	bf00      	nop
        lcd_wr_regno(0x55);
        lcd_wr_xdata(0x82);
 800484a:	2082      	movs	r0, #130	@ 0x82
 800484c:	f7fc f86e 	bl	800092c <lcd_wr_xdata>
 8004850:	232c      	movs	r3, #44	@ 0x2c
 8004852:	f8a7 307a 	strh.w	r3, [r7, #122]	@ 0x7a
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004856:	4b0d      	ldr	r3, [pc, #52]	@ (800488c <lcd_init+0x2ce4>)
 8004858:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800485c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800485e:	4b0b      	ldr	r3, [pc, #44]	@ (800488c <lcd_init+0x2ce4>)
 8004860:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004864:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004866:	f8b7 307a 	ldrh.w	r3, [r7, #122]	@ 0x7a
 800486a:	b29a      	uxth	r2, r3
 800486c:	4b08      	ldr	r3, [pc, #32]	@ (8004890 <lcd_init+0x2ce8>)
 800486e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004870:	4b06      	ldr	r3, [pc, #24]	@ (800488c <lcd_init+0x2ce4>)
 8004872:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004876:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004878:	4b04      	ldr	r3, [pc, #16]	@ (800488c <lcd_init+0x2ce4>)
 800487a:	2280      	movs	r2, #128	@ 0x80
 800487c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800487e:	4b03      	ldr	r3, [pc, #12]	@ (800488c <lcd_init+0x2ce4>)
 8004880:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004884:	611a      	str	r2, [r3, #16]
}
 8004886:	f002 b8d8 	b.w	8006a3a <lcd_init+0x4e92>
 800488a:	bf00      	nop
 800488c:	40011000 	.word	0x40011000
 8004890:	40010c00 	.word	0x40010c00
        lcd_wr_regno(0x2c);
    }
    else if (lcddev.id == 0x7796)
 8004894:	4bb4      	ldr	r3, [pc, #720]	@ (8004b68 <lcd_init+0x2fc0>)
 8004896:	889b      	ldrh	r3, [r3, #4]
 8004898:	f247 7296 	movw	r2, #30614	@ 0x7796
 800489c:	4293      	cmp	r3, r2
 800489e:	f040 82e3 	bne.w	8004e68 <lcd_init+0x32c0>
 80048a2:	2311      	movs	r3, #17
 80048a4:	f8a7 3102 	strh.w	r3, [r7, #258]	@ 0x102
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80048a8:	4bb0      	ldr	r3, [pc, #704]	@ (8004b6c <lcd_init+0x2fc4>)
 80048aa:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80048ae:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80048b0:	4bae      	ldr	r3, [pc, #696]	@ (8004b6c <lcd_init+0x2fc4>)
 80048b2:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80048b6:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80048b8:	f8b7 3102 	ldrh.w	r3, [r7, #258]	@ 0x102
 80048bc:	b29a      	uxth	r2, r3
 80048be:	4bac      	ldr	r3, [pc, #688]	@ (8004b70 <lcd_init+0x2fc8>)
 80048c0:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80048c2:	4baa      	ldr	r3, [pc, #680]	@ (8004b6c <lcd_init+0x2fc4>)
 80048c4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80048c8:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80048ca:	4ba8      	ldr	r3, [pc, #672]	@ (8004b6c <lcd_init+0x2fc4>)
 80048cc:	2280      	movs	r2, #128	@ 0x80
 80048ce:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80048d0:	4ba6      	ldr	r3, [pc, #664]	@ (8004b6c <lcd_init+0x2fc4>)
 80048d2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80048d6:	611a      	str	r2, [r3, #16]
}
 80048d8:	bf00      	nop
    {
       // lcd_ex_st7796_reginit();    /* ִ��ST7796��ʼ�� */
        lcd_wr_regno(0x11);

        HAL_Delay(120);
 80048da:	2078      	movs	r0, #120	@ 0x78
 80048dc:	f002 fdec 	bl	80074b8 <HAL_Delay>
 80048e0:	2336      	movs	r3, #54	@ 0x36
 80048e2:	f8a7 3100 	strh.w	r3, [r7, #256]	@ 0x100
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80048e6:	4ba1      	ldr	r3, [pc, #644]	@ (8004b6c <lcd_init+0x2fc4>)
 80048e8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80048ec:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80048ee:	4b9f      	ldr	r3, [pc, #636]	@ (8004b6c <lcd_init+0x2fc4>)
 80048f0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80048f4:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80048f6:	f8b7 3100 	ldrh.w	r3, [r7, #256]	@ 0x100
 80048fa:	b29a      	uxth	r2, r3
 80048fc:	4b9c      	ldr	r3, [pc, #624]	@ (8004b70 <lcd_init+0x2fc8>)
 80048fe:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004900:	4b9a      	ldr	r3, [pc, #616]	@ (8004b6c <lcd_init+0x2fc4>)
 8004902:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004906:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004908:	4b98      	ldr	r3, [pc, #608]	@ (8004b6c <lcd_init+0x2fc4>)
 800490a:	2280      	movs	r2, #128	@ 0x80
 800490c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800490e:	4b97      	ldr	r3, [pc, #604]	@ (8004b6c <lcd_init+0x2fc4>)
 8004910:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004914:	611a      	str	r2, [r3, #16]
}
 8004916:	bf00      	nop

        lcd_wr_regno(0x36); /* Memory Data Access Control MY,MX~~ */
        lcd_wr_xdata(0x48);
 8004918:	2048      	movs	r0, #72	@ 0x48
 800491a:	f7fc f807 	bl	800092c <lcd_wr_xdata>
 800491e:	233a      	movs	r3, #58	@ 0x3a
 8004920:	f8a7 30fe 	strh.w	r3, [r7, #254]	@ 0xfe
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004924:	4b91      	ldr	r3, [pc, #580]	@ (8004b6c <lcd_init+0x2fc4>)
 8004926:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800492a:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800492c:	4b8f      	ldr	r3, [pc, #572]	@ (8004b6c <lcd_init+0x2fc4>)
 800492e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004932:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004934:	f8b7 30fe 	ldrh.w	r3, [r7, #254]	@ 0xfe
 8004938:	b29a      	uxth	r2, r3
 800493a:	4b8d      	ldr	r3, [pc, #564]	@ (8004b70 <lcd_init+0x2fc8>)
 800493c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800493e:	4b8b      	ldr	r3, [pc, #556]	@ (8004b6c <lcd_init+0x2fc4>)
 8004940:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004944:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004946:	4b89      	ldr	r3, [pc, #548]	@ (8004b6c <lcd_init+0x2fc4>)
 8004948:	2280      	movs	r2, #128	@ 0x80
 800494a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800494c:	4b87      	ldr	r3, [pc, #540]	@ (8004b6c <lcd_init+0x2fc4>)
 800494e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004952:	611a      	str	r2, [r3, #16]
}
 8004954:	bf00      	nop

        lcd_wr_regno(0x3A);
        lcd_wr_xdata(0x55);
 8004956:	2055      	movs	r0, #85	@ 0x55
 8004958:	f7fb ffe8 	bl	800092c <lcd_wr_xdata>
 800495c:	23f0      	movs	r3, #240	@ 0xf0
 800495e:	f8a7 30fc 	strh.w	r3, [r7, #252]	@ 0xfc
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004962:	4b82      	ldr	r3, [pc, #520]	@ (8004b6c <lcd_init+0x2fc4>)
 8004964:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004968:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800496a:	4b80      	ldr	r3, [pc, #512]	@ (8004b6c <lcd_init+0x2fc4>)
 800496c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004970:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004972:	f8b7 30fc 	ldrh.w	r3, [r7, #252]	@ 0xfc
 8004976:	b29a      	uxth	r2, r3
 8004978:	4b7d      	ldr	r3, [pc, #500]	@ (8004b70 <lcd_init+0x2fc8>)
 800497a:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800497c:	4b7b      	ldr	r3, [pc, #492]	@ (8004b6c <lcd_init+0x2fc4>)
 800497e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004982:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004984:	4b79      	ldr	r3, [pc, #484]	@ (8004b6c <lcd_init+0x2fc4>)
 8004986:	2280      	movs	r2, #128	@ 0x80
 8004988:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800498a:	4b78      	ldr	r3, [pc, #480]	@ (8004b6c <lcd_init+0x2fc4>)
 800498c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004990:	611a      	str	r2, [r3, #16]
}
 8004992:	bf00      	nop

        lcd_wr_regno(0xF0);
        lcd_wr_xdata(0xC3);
 8004994:	20c3      	movs	r0, #195	@ 0xc3
 8004996:	f7fb ffc9 	bl	800092c <lcd_wr_xdata>
 800499a:	23f0      	movs	r3, #240	@ 0xf0
 800499c:	f8a7 30fa 	strh.w	r3, [r7, #250]	@ 0xfa
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80049a0:	4b72      	ldr	r3, [pc, #456]	@ (8004b6c <lcd_init+0x2fc4>)
 80049a2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80049a6:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80049a8:	4b70      	ldr	r3, [pc, #448]	@ (8004b6c <lcd_init+0x2fc4>)
 80049aa:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80049ae:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80049b0:	f8b7 30fa 	ldrh.w	r3, [r7, #250]	@ 0xfa
 80049b4:	b29a      	uxth	r2, r3
 80049b6:	4b6e      	ldr	r3, [pc, #440]	@ (8004b70 <lcd_init+0x2fc8>)
 80049b8:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80049ba:	4b6c      	ldr	r3, [pc, #432]	@ (8004b6c <lcd_init+0x2fc4>)
 80049bc:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80049c0:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80049c2:	4b6a      	ldr	r3, [pc, #424]	@ (8004b6c <lcd_init+0x2fc4>)
 80049c4:	2280      	movs	r2, #128	@ 0x80
 80049c6:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80049c8:	4b68      	ldr	r3, [pc, #416]	@ (8004b6c <lcd_init+0x2fc4>)
 80049ca:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80049ce:	611a      	str	r2, [r3, #16]
}
 80049d0:	bf00      	nop

        lcd_wr_regno(0xF0);
        lcd_wr_xdata(0x96);
 80049d2:	2096      	movs	r0, #150	@ 0x96
 80049d4:	f7fb ffaa 	bl	800092c <lcd_wr_xdata>
 80049d8:	23b4      	movs	r3, #180	@ 0xb4
 80049da:	f8a7 30f8 	strh.w	r3, [r7, #248]	@ 0xf8
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80049de:	4b63      	ldr	r3, [pc, #396]	@ (8004b6c <lcd_init+0x2fc4>)
 80049e0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80049e4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80049e6:	4b61      	ldr	r3, [pc, #388]	@ (8004b6c <lcd_init+0x2fc4>)
 80049e8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80049ec:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80049ee:	f8b7 30f8 	ldrh.w	r3, [r7, #248]	@ 0xf8
 80049f2:	b29a      	uxth	r2, r3
 80049f4:	4b5e      	ldr	r3, [pc, #376]	@ (8004b70 <lcd_init+0x2fc8>)
 80049f6:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80049f8:	4b5c      	ldr	r3, [pc, #368]	@ (8004b6c <lcd_init+0x2fc4>)
 80049fa:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80049fe:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004a00:	4b5a      	ldr	r3, [pc, #360]	@ (8004b6c <lcd_init+0x2fc4>)
 8004a02:	2280      	movs	r2, #128	@ 0x80
 8004a04:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004a06:	4b59      	ldr	r3, [pc, #356]	@ (8004b6c <lcd_init+0x2fc4>)
 8004a08:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004a0c:	611a      	str	r2, [r3, #16]
}
 8004a0e:	bf00      	nop

        lcd_wr_regno(0xB4);
        lcd_wr_xdata(0x01);
 8004a10:	2001      	movs	r0, #1
 8004a12:	f7fb ff8b 	bl	800092c <lcd_wr_xdata>
 8004a16:	23b6      	movs	r3, #182	@ 0xb6
 8004a18:	f8a7 30f6 	strh.w	r3, [r7, #246]	@ 0xf6
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004a1c:	4b53      	ldr	r3, [pc, #332]	@ (8004b6c <lcd_init+0x2fc4>)
 8004a1e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004a22:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004a24:	4b51      	ldr	r3, [pc, #324]	@ (8004b6c <lcd_init+0x2fc4>)
 8004a26:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004a2a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004a2c:	f8b7 30f6 	ldrh.w	r3, [r7, #246]	@ 0xf6
 8004a30:	b29a      	uxth	r2, r3
 8004a32:	4b4f      	ldr	r3, [pc, #316]	@ (8004b70 <lcd_init+0x2fc8>)
 8004a34:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004a36:	4b4d      	ldr	r3, [pc, #308]	@ (8004b6c <lcd_init+0x2fc4>)
 8004a38:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004a3c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004a3e:	4b4b      	ldr	r3, [pc, #300]	@ (8004b6c <lcd_init+0x2fc4>)
 8004a40:	2280      	movs	r2, #128	@ 0x80
 8004a42:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004a44:	4b49      	ldr	r3, [pc, #292]	@ (8004b6c <lcd_init+0x2fc4>)
 8004a46:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004a4a:	611a      	str	r2, [r3, #16]
}
 8004a4c:	bf00      	nop

        lcd_wr_regno(0xB6); /* Display Function Control */
        lcd_wr_xdata(0x0A);
 8004a4e:	200a      	movs	r0, #10
 8004a50:	f7fb ff6c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA2);
 8004a54:	20a2      	movs	r0, #162	@ 0xa2
 8004a56:	f7fb ff69 	bl	800092c <lcd_wr_xdata>
 8004a5a:	23b7      	movs	r3, #183	@ 0xb7
 8004a5c:	f8a7 30f4 	strh.w	r3, [r7, #244]	@ 0xf4
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004a60:	4b42      	ldr	r3, [pc, #264]	@ (8004b6c <lcd_init+0x2fc4>)
 8004a62:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004a66:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004a68:	4b40      	ldr	r3, [pc, #256]	@ (8004b6c <lcd_init+0x2fc4>)
 8004a6a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004a6e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004a70:	f8b7 30f4 	ldrh.w	r3, [r7, #244]	@ 0xf4
 8004a74:	b29a      	uxth	r2, r3
 8004a76:	4b3e      	ldr	r3, [pc, #248]	@ (8004b70 <lcd_init+0x2fc8>)
 8004a78:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004a7a:	4b3c      	ldr	r3, [pc, #240]	@ (8004b6c <lcd_init+0x2fc4>)
 8004a7c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004a80:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004a82:	4b3a      	ldr	r3, [pc, #232]	@ (8004b6c <lcd_init+0x2fc4>)
 8004a84:	2280      	movs	r2, #128	@ 0x80
 8004a86:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004a88:	4b38      	ldr	r3, [pc, #224]	@ (8004b6c <lcd_init+0x2fc4>)
 8004a8a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004a8e:	611a      	str	r2, [r3, #16]
}
 8004a90:	bf00      	nop

        lcd_wr_regno(0xB7);
        lcd_wr_xdata(0xC6);
 8004a92:	20c6      	movs	r0, #198	@ 0xc6
 8004a94:	f7fb ff4a 	bl	800092c <lcd_wr_xdata>
 8004a98:	23b9      	movs	r3, #185	@ 0xb9
 8004a9a:	f8a7 30f2 	strh.w	r3, [r7, #242]	@ 0xf2
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004a9e:	4b33      	ldr	r3, [pc, #204]	@ (8004b6c <lcd_init+0x2fc4>)
 8004aa0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004aa4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004aa6:	4b31      	ldr	r3, [pc, #196]	@ (8004b6c <lcd_init+0x2fc4>)
 8004aa8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004aac:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004aae:	f8b7 30f2 	ldrh.w	r3, [r7, #242]	@ 0xf2
 8004ab2:	b29a      	uxth	r2, r3
 8004ab4:	4b2e      	ldr	r3, [pc, #184]	@ (8004b70 <lcd_init+0x2fc8>)
 8004ab6:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004ab8:	4b2c      	ldr	r3, [pc, #176]	@ (8004b6c <lcd_init+0x2fc4>)
 8004aba:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004abe:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004ac0:	4b2a      	ldr	r3, [pc, #168]	@ (8004b6c <lcd_init+0x2fc4>)
 8004ac2:	2280      	movs	r2, #128	@ 0x80
 8004ac4:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004ac6:	4b29      	ldr	r3, [pc, #164]	@ (8004b6c <lcd_init+0x2fc4>)
 8004ac8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004acc:	611a      	str	r2, [r3, #16]
}
 8004ace:	bf00      	nop

        lcd_wr_regno(0xB9);
        lcd_wr_xdata(0x02);
 8004ad0:	2002      	movs	r0, #2
 8004ad2:	f7fb ff2b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xE0);
 8004ad6:	20e0      	movs	r0, #224	@ 0xe0
 8004ad8:	f7fb ff28 	bl	800092c <lcd_wr_xdata>
 8004adc:	23c0      	movs	r3, #192	@ 0xc0
 8004ade:	f8a7 30f0 	strh.w	r3, [r7, #240]	@ 0xf0
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004ae2:	4b22      	ldr	r3, [pc, #136]	@ (8004b6c <lcd_init+0x2fc4>)
 8004ae4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004ae8:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004aea:	4b20      	ldr	r3, [pc, #128]	@ (8004b6c <lcd_init+0x2fc4>)
 8004aec:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004af0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004af2:	f8b7 30f0 	ldrh.w	r3, [r7, #240]	@ 0xf0
 8004af6:	b29a      	uxth	r2, r3
 8004af8:	4b1d      	ldr	r3, [pc, #116]	@ (8004b70 <lcd_init+0x2fc8>)
 8004afa:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004afc:	4b1b      	ldr	r3, [pc, #108]	@ (8004b6c <lcd_init+0x2fc4>)
 8004afe:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004b02:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004b04:	4b19      	ldr	r3, [pc, #100]	@ (8004b6c <lcd_init+0x2fc4>)
 8004b06:	2280      	movs	r2, #128	@ 0x80
 8004b08:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004b0a:	4b18      	ldr	r3, [pc, #96]	@ (8004b6c <lcd_init+0x2fc4>)
 8004b0c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004b10:	611a      	str	r2, [r3, #16]
}
 8004b12:	bf00      	nop

        lcd_wr_regno(0xC0);
        lcd_wr_xdata(0x80);
 8004b14:	2080      	movs	r0, #128	@ 0x80
 8004b16:	f7fb ff09 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x16);
 8004b1a:	2016      	movs	r0, #22
 8004b1c:	f7fb ff06 	bl	800092c <lcd_wr_xdata>
 8004b20:	23c1      	movs	r3, #193	@ 0xc1
 8004b22:	f8a7 30ee 	strh.w	r3, [r7, #238]	@ 0xee
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004b26:	4b11      	ldr	r3, [pc, #68]	@ (8004b6c <lcd_init+0x2fc4>)
 8004b28:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004b2c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004b2e:	4b0f      	ldr	r3, [pc, #60]	@ (8004b6c <lcd_init+0x2fc4>)
 8004b30:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004b34:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004b36:	f8b7 30ee 	ldrh.w	r3, [r7, #238]	@ 0xee
 8004b3a:	b29a      	uxth	r2, r3
 8004b3c:	4b0c      	ldr	r3, [pc, #48]	@ (8004b70 <lcd_init+0x2fc8>)
 8004b3e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004b40:	4b0a      	ldr	r3, [pc, #40]	@ (8004b6c <lcd_init+0x2fc4>)
 8004b42:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004b46:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004b48:	4b08      	ldr	r3, [pc, #32]	@ (8004b6c <lcd_init+0x2fc4>)
 8004b4a:	2280      	movs	r2, #128	@ 0x80
 8004b4c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004b4e:	4b07      	ldr	r3, [pc, #28]	@ (8004b6c <lcd_init+0x2fc4>)
 8004b50:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004b54:	611a      	str	r2, [r3, #16]
}
 8004b56:	bf00      	nop

        lcd_wr_regno(0xC1);
        lcd_wr_xdata(0x19);
 8004b58:	2019      	movs	r0, #25
 8004b5a:	f7fb fee7 	bl	800092c <lcd_wr_xdata>
 8004b5e:	23c2      	movs	r3, #194	@ 0xc2
 8004b60:	f8a7 30ec 	strh.w	r3, [r7, #236]	@ 0xec
 8004b64:	e006      	b.n	8004b74 <lcd_init+0x2fcc>
 8004b66:	bf00      	nop
 8004b68:	2000002c 	.word	0x2000002c
 8004b6c:	40011000 	.word	0x40011000
 8004b70:	40010c00 	.word	0x40010c00
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004b74:	4bba      	ldr	r3, [pc, #744]	@ (8004e60 <lcd_init+0x32b8>)
 8004b76:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004b7a:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004b7c:	4bb8      	ldr	r3, [pc, #736]	@ (8004e60 <lcd_init+0x32b8>)
 8004b7e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004b82:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004b84:	f8b7 30ec 	ldrh.w	r3, [r7, #236]	@ 0xec
 8004b88:	b29a      	uxth	r2, r3
 8004b8a:	4bb6      	ldr	r3, [pc, #728]	@ (8004e64 <lcd_init+0x32bc>)
 8004b8c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004b8e:	4bb4      	ldr	r3, [pc, #720]	@ (8004e60 <lcd_init+0x32b8>)
 8004b90:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004b94:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004b96:	4bb2      	ldr	r3, [pc, #712]	@ (8004e60 <lcd_init+0x32b8>)
 8004b98:	2280      	movs	r2, #128	@ 0x80
 8004b9a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004b9c:	4bb0      	ldr	r3, [pc, #704]	@ (8004e60 <lcd_init+0x32b8>)
 8004b9e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004ba2:	611a      	str	r2, [r3, #16]
}
 8004ba4:	bf00      	nop

        lcd_wr_regno(0xC2);
        lcd_wr_xdata(0xA7);
 8004ba6:	20a7      	movs	r0, #167	@ 0xa7
 8004ba8:	f7fb fec0 	bl	800092c <lcd_wr_xdata>
 8004bac:	23c5      	movs	r3, #197	@ 0xc5
 8004bae:	f8a7 30ea 	strh.w	r3, [r7, #234]	@ 0xea
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004bb2:	4bab      	ldr	r3, [pc, #684]	@ (8004e60 <lcd_init+0x32b8>)
 8004bb4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004bb8:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004bba:	4ba9      	ldr	r3, [pc, #676]	@ (8004e60 <lcd_init+0x32b8>)
 8004bbc:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004bc0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004bc2:	f8b7 30ea 	ldrh.w	r3, [r7, #234]	@ 0xea
 8004bc6:	b29a      	uxth	r2, r3
 8004bc8:	4ba6      	ldr	r3, [pc, #664]	@ (8004e64 <lcd_init+0x32bc>)
 8004bca:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004bcc:	4ba4      	ldr	r3, [pc, #656]	@ (8004e60 <lcd_init+0x32b8>)
 8004bce:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004bd2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004bd4:	4ba2      	ldr	r3, [pc, #648]	@ (8004e60 <lcd_init+0x32b8>)
 8004bd6:	2280      	movs	r2, #128	@ 0x80
 8004bd8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004bda:	4ba1      	ldr	r3, [pc, #644]	@ (8004e60 <lcd_init+0x32b8>)
 8004bdc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004be0:	611a      	str	r2, [r3, #16]
}
 8004be2:	bf00      	nop

        lcd_wr_regno(0xC5);
        lcd_wr_xdata(0x16);
 8004be4:	2016      	movs	r0, #22
 8004be6:	f7fb fea1 	bl	800092c <lcd_wr_xdata>
 8004bea:	23e8      	movs	r3, #232	@ 0xe8
 8004bec:	f8a7 30e8 	strh.w	r3, [r7, #232]	@ 0xe8
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004bf0:	4b9b      	ldr	r3, [pc, #620]	@ (8004e60 <lcd_init+0x32b8>)
 8004bf2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004bf6:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004bf8:	4b99      	ldr	r3, [pc, #612]	@ (8004e60 <lcd_init+0x32b8>)
 8004bfa:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004bfe:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004c00:	f8b7 30e8 	ldrh.w	r3, [r7, #232]	@ 0xe8
 8004c04:	b29a      	uxth	r2, r3
 8004c06:	4b97      	ldr	r3, [pc, #604]	@ (8004e64 <lcd_init+0x32bc>)
 8004c08:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004c0a:	4b95      	ldr	r3, [pc, #596]	@ (8004e60 <lcd_init+0x32b8>)
 8004c0c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004c10:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004c12:	4b93      	ldr	r3, [pc, #588]	@ (8004e60 <lcd_init+0x32b8>)
 8004c14:	2280      	movs	r2, #128	@ 0x80
 8004c16:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004c18:	4b91      	ldr	r3, [pc, #580]	@ (8004e60 <lcd_init+0x32b8>)
 8004c1a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004c1e:	611a      	str	r2, [r3, #16]
}
 8004c20:	bf00      	nop

        lcd_wr_regno(0xE8);
        lcd_wr_xdata(0x40);
 8004c22:	2040      	movs	r0, #64	@ 0x40
 8004c24:	f7fb fe82 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x8A);
 8004c28:	208a      	movs	r0, #138	@ 0x8a
 8004c2a:	f7fb fe7f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004c2e:	2000      	movs	r0, #0
 8004c30:	f7fb fe7c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8004c34:	2000      	movs	r0, #0
 8004c36:	f7fb fe79 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x29);
 8004c3a:	2029      	movs	r0, #41	@ 0x29
 8004c3c:	f7fb fe76 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x19);
 8004c40:	2019      	movs	r0, #25
 8004c42:	f7fb fe73 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xA5);
 8004c46:	20a5      	movs	r0, #165	@ 0xa5
 8004c48:	f7fb fe70 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x33);
 8004c4c:	2033      	movs	r0, #51	@ 0x33
 8004c4e:	f7fb fe6d 	bl	800092c <lcd_wr_xdata>
 8004c52:	23e0      	movs	r3, #224	@ 0xe0
 8004c54:	f8a7 30e6 	strh.w	r3, [r7, #230]	@ 0xe6
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004c58:	4b81      	ldr	r3, [pc, #516]	@ (8004e60 <lcd_init+0x32b8>)
 8004c5a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004c5e:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004c60:	4b7f      	ldr	r3, [pc, #508]	@ (8004e60 <lcd_init+0x32b8>)
 8004c62:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004c66:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004c68:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	@ 0xe6
 8004c6c:	b29a      	uxth	r2, r3
 8004c6e:	4b7d      	ldr	r3, [pc, #500]	@ (8004e64 <lcd_init+0x32bc>)
 8004c70:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004c72:	4b7b      	ldr	r3, [pc, #492]	@ (8004e60 <lcd_init+0x32b8>)
 8004c74:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004c78:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004c7a:	4b79      	ldr	r3, [pc, #484]	@ (8004e60 <lcd_init+0x32b8>)
 8004c7c:	2280      	movs	r2, #128	@ 0x80
 8004c7e:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004c80:	4b77      	ldr	r3, [pc, #476]	@ (8004e60 <lcd_init+0x32b8>)
 8004c82:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004c86:	611a      	str	r2, [r3, #16]
}
 8004c88:	bf00      	nop

        lcd_wr_regno(0xE0);
        lcd_wr_xdata(0xF0);
 8004c8a:	20f0      	movs	r0, #240	@ 0xf0
 8004c8c:	f7fb fe4e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x07);
 8004c90:	2007      	movs	r0, #7
 8004c92:	f7fb fe4b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0D);
 8004c96:	200d      	movs	r0, #13
 8004c98:	f7fb fe48 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x04);
 8004c9c:	2004      	movs	r0, #4
 8004c9e:	f7fb fe45 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x05);
 8004ca2:	2005      	movs	r0, #5
 8004ca4:	f7fb fe42 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x14);
 8004ca8:	2014      	movs	r0, #20
 8004caa:	f7fb fe3f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x36);
 8004cae:	2036      	movs	r0, #54	@ 0x36
 8004cb0:	f7fb fe3c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x54);
 8004cb4:	2054      	movs	r0, #84	@ 0x54
 8004cb6:	f7fb fe39 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x4C);
 8004cba:	204c      	movs	r0, #76	@ 0x4c
 8004cbc:	f7fb fe36 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x38);
 8004cc0:	2038      	movs	r0, #56	@ 0x38
 8004cc2:	f7fb fe33 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x13);
 8004cc6:	2013      	movs	r0, #19
 8004cc8:	f7fb fe30 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x14);
 8004ccc:	2014      	movs	r0, #20
 8004cce:	f7fb fe2d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x2E);
 8004cd2:	202e      	movs	r0, #46	@ 0x2e
 8004cd4:	f7fb fe2a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x34);
 8004cd8:	2034      	movs	r0, #52	@ 0x34
 8004cda:	f7fb fe27 	bl	800092c <lcd_wr_xdata>
 8004cde:	23e1      	movs	r3, #225	@ 0xe1
 8004ce0:	f8a7 30e4 	strh.w	r3, [r7, #228]	@ 0xe4
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004ce4:	4b5e      	ldr	r3, [pc, #376]	@ (8004e60 <lcd_init+0x32b8>)
 8004ce6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004cea:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004cec:	4b5c      	ldr	r3, [pc, #368]	@ (8004e60 <lcd_init+0x32b8>)
 8004cee:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004cf2:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004cf4:	f8b7 30e4 	ldrh.w	r3, [r7, #228]	@ 0xe4
 8004cf8:	b29a      	uxth	r2, r3
 8004cfa:	4b5a      	ldr	r3, [pc, #360]	@ (8004e64 <lcd_init+0x32bc>)
 8004cfc:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004cfe:	4b58      	ldr	r3, [pc, #352]	@ (8004e60 <lcd_init+0x32b8>)
 8004d00:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004d04:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004d06:	4b56      	ldr	r3, [pc, #344]	@ (8004e60 <lcd_init+0x32b8>)
 8004d08:	2280      	movs	r2, #128	@ 0x80
 8004d0a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004d0c:	4b54      	ldr	r3, [pc, #336]	@ (8004e60 <lcd_init+0x32b8>)
 8004d0e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004d12:	611a      	str	r2, [r3, #16]
}
 8004d14:	bf00      	nop

        lcd_wr_regno(0xE1);
        lcd_wr_xdata(0xF0);
 8004d16:	20f0      	movs	r0, #240	@ 0xf0
 8004d18:	f7fb fe08 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x10);
 8004d1c:	2010      	movs	r0, #16
 8004d1e:	f7fb fe05 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x14);
 8004d22:	2014      	movs	r0, #20
 8004d24:	f7fb fe02 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0E);
 8004d28:	200e      	movs	r0, #14
 8004d2a:	f7fb fdff 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0C);
 8004d2e:	200c      	movs	r0, #12
 8004d30:	f7fb fdfc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x08);
 8004d34:	2008      	movs	r0, #8
 8004d36:	f7fb fdf9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x35);
 8004d3a:	2035      	movs	r0, #53	@ 0x35
 8004d3c:	f7fb fdf6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x44);
 8004d40:	2044      	movs	r0, #68	@ 0x44
 8004d42:	f7fb fdf3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x4C);
 8004d46:	204c      	movs	r0, #76	@ 0x4c
 8004d48:	f7fb fdf0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x26);
 8004d4c:	2026      	movs	r0, #38	@ 0x26
 8004d4e:	f7fb fded 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x10);
 8004d52:	2010      	movs	r0, #16
 8004d54:	f7fb fdea 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x12);
 8004d58:	2012      	movs	r0, #18
 8004d5a:	f7fb fde7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x2C);
 8004d5e:	202c      	movs	r0, #44	@ 0x2c
 8004d60:	f7fb fde4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x32);
 8004d64:	2032      	movs	r0, #50	@ 0x32
 8004d66:	f7fb fde1 	bl	800092c <lcd_wr_xdata>
 8004d6a:	23f0      	movs	r3, #240	@ 0xf0
 8004d6c:	f8a7 30e2 	strh.w	r3, [r7, #226]	@ 0xe2
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004d70:	4b3b      	ldr	r3, [pc, #236]	@ (8004e60 <lcd_init+0x32b8>)
 8004d72:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004d76:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004d78:	4b39      	ldr	r3, [pc, #228]	@ (8004e60 <lcd_init+0x32b8>)
 8004d7a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004d7e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004d80:	f8b7 30e2 	ldrh.w	r3, [r7, #226]	@ 0xe2
 8004d84:	b29a      	uxth	r2, r3
 8004d86:	4b37      	ldr	r3, [pc, #220]	@ (8004e64 <lcd_init+0x32bc>)
 8004d88:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004d8a:	4b35      	ldr	r3, [pc, #212]	@ (8004e60 <lcd_init+0x32b8>)
 8004d8c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004d90:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004d92:	4b33      	ldr	r3, [pc, #204]	@ (8004e60 <lcd_init+0x32b8>)
 8004d94:	2280      	movs	r2, #128	@ 0x80
 8004d96:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004d98:	4b31      	ldr	r3, [pc, #196]	@ (8004e60 <lcd_init+0x32b8>)
 8004d9a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004d9e:	611a      	str	r2, [r3, #16]
}
 8004da0:	bf00      	nop

        lcd_wr_regno(0xF0);
        lcd_wr_xdata(0x3C);
 8004da2:	203c      	movs	r0, #60	@ 0x3c
 8004da4:	f7fb fdc2 	bl	800092c <lcd_wr_xdata>
 8004da8:	23f0      	movs	r3, #240	@ 0xf0
 8004daa:	f8a7 30e0 	strh.w	r3, [r7, #224]	@ 0xe0
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004dae:	4b2c      	ldr	r3, [pc, #176]	@ (8004e60 <lcd_init+0x32b8>)
 8004db0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004db4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004db6:	4b2a      	ldr	r3, [pc, #168]	@ (8004e60 <lcd_init+0x32b8>)
 8004db8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004dbc:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004dbe:	f8b7 30e0 	ldrh.w	r3, [r7, #224]	@ 0xe0
 8004dc2:	b29a      	uxth	r2, r3
 8004dc4:	4b27      	ldr	r3, [pc, #156]	@ (8004e64 <lcd_init+0x32bc>)
 8004dc6:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004dc8:	4b25      	ldr	r3, [pc, #148]	@ (8004e60 <lcd_init+0x32b8>)
 8004dca:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004dce:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004dd0:	4b23      	ldr	r3, [pc, #140]	@ (8004e60 <lcd_init+0x32b8>)
 8004dd2:	2280      	movs	r2, #128	@ 0x80
 8004dd4:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004dd6:	4b22      	ldr	r3, [pc, #136]	@ (8004e60 <lcd_init+0x32b8>)
 8004dd8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004ddc:	611a      	str	r2, [r3, #16]
}
 8004dde:	bf00      	nop

        lcd_wr_regno(0xF0);
        lcd_wr_xdata(0x69);
 8004de0:	2069      	movs	r0, #105	@ 0x69
 8004de2:	f7fb fda3 	bl	800092c <lcd_wr_xdata>

        HAL_Delay(120);
 8004de6:	2078      	movs	r0, #120	@ 0x78
 8004de8:	f002 fb66 	bl	80074b8 <HAL_Delay>
 8004dec:	2321      	movs	r3, #33	@ 0x21
 8004dee:	f8a7 30de 	strh.w	r3, [r7, #222]	@ 0xde
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004df2:	4b1b      	ldr	r3, [pc, #108]	@ (8004e60 <lcd_init+0x32b8>)
 8004df4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004df8:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004dfa:	4b19      	ldr	r3, [pc, #100]	@ (8004e60 <lcd_init+0x32b8>)
 8004dfc:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004e00:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004e02:	f8b7 30de 	ldrh.w	r3, [r7, #222]	@ 0xde
 8004e06:	b29a      	uxth	r2, r3
 8004e08:	4b16      	ldr	r3, [pc, #88]	@ (8004e64 <lcd_init+0x32bc>)
 8004e0a:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004e0c:	4b14      	ldr	r3, [pc, #80]	@ (8004e60 <lcd_init+0x32b8>)
 8004e0e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004e12:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004e14:	4b12      	ldr	r3, [pc, #72]	@ (8004e60 <lcd_init+0x32b8>)
 8004e16:	2280      	movs	r2, #128	@ 0x80
 8004e18:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004e1a:	4b11      	ldr	r3, [pc, #68]	@ (8004e60 <lcd_init+0x32b8>)
 8004e1c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004e20:	611a      	str	r2, [r3, #16]
}
 8004e22:	bf00      	nop
 8004e24:	2329      	movs	r3, #41	@ 0x29
 8004e26:	f8a7 30dc 	strh.w	r3, [r7, #220]	@ 0xdc
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8004e2a:	4b0d      	ldr	r3, [pc, #52]	@ (8004e60 <lcd_init+0x32b8>)
 8004e2c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8004e30:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8004e32:	4b0b      	ldr	r3, [pc, #44]	@ (8004e60 <lcd_init+0x32b8>)
 8004e34:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004e38:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8004e3a:	f8b7 30dc 	ldrh.w	r3, [r7, #220]	@ 0xdc
 8004e3e:	b29a      	uxth	r2, r3
 8004e40:	4b08      	ldr	r3, [pc, #32]	@ (8004e64 <lcd_init+0x32bc>)
 8004e42:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8004e44:	4b06      	ldr	r3, [pc, #24]	@ (8004e60 <lcd_init+0x32b8>)
 8004e46:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8004e4a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8004e4c:	4b04      	ldr	r3, [pc, #16]	@ (8004e60 <lcd_init+0x32b8>)
 8004e4e:	2280      	movs	r2, #128	@ 0x80
 8004e50:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8004e52:	4b03      	ldr	r3, [pc, #12]	@ (8004e60 <lcd_init+0x32b8>)
 8004e54:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004e58:	611a      	str	r2, [r3, #16]
}
 8004e5a:	f001 bdee 	b.w	8006a3a <lcd_init+0x4e92>
 8004e5e:	bf00      	nop
 8004e60:	40011000 	.word	0x40011000
 8004e64:	40010c00 	.word	0x40010c00

        lcd_wr_regno(0x21);
        lcd_wr_regno(0x29);
    }
    else if (lcddev.id == 0x5510)
 8004e68:	4b03      	ldr	r3, [pc, #12]	@ (8004e78 <lcd_init+0x32d0>)
 8004e6a:	889b      	ldrh	r3, [r3, #4]
 8004e6c:	f245 5210 	movw	r2, #21776	@ 0x5510
 8004e70:	4293      	cmp	r3, r2
 8004e72:	f040 87b3 	bne.w	8005ddc <lcd_init+0x4234>
 8004e76:	e001      	b.n	8004e7c <lcd_init+0x32d4>
 8004e78:	2000002c 	.word	0x2000002c
    {
        //lcd_ex_nt35510_reginit();   /* ִ��NT35510��ʼ�� */

        lcd_write_reg(0xF000, 0x55);
 8004e7c:	2155      	movs	r1, #85	@ 0x55
 8004e7e:	f44f 4070 	mov.w	r0, #61440	@ 0xf000
 8004e82:	f7fb fd77 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xF001, 0xAA);
 8004e86:	21aa      	movs	r1, #170	@ 0xaa
 8004e88:	f24f 0001 	movw	r0, #61441	@ 0xf001
 8004e8c:	f7fb fd72 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xF002, 0x52);
 8004e90:	2152      	movs	r1, #82	@ 0x52
 8004e92:	f24f 0002 	movw	r0, #61442	@ 0xf002
 8004e96:	f7fb fd6d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xF003, 0x08);
 8004e9a:	2108      	movs	r1, #8
 8004e9c:	f24f 0003 	movw	r0, #61443	@ 0xf003
 8004ea0:	f7fb fd68 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xF004, 0x01);
 8004ea4:	2101      	movs	r1, #1
 8004ea6:	f24f 0004 	movw	r0, #61444	@ 0xf004
 8004eaa:	f7fb fd63 	bl	8000974 <lcd_write_reg>
        /* AVDD Set AVDD 5.2V */
        lcd_write_reg(0xB000, 0x0D);
 8004eae:	210d      	movs	r1, #13
 8004eb0:	f44f 4030 	mov.w	r0, #45056	@ 0xb000
 8004eb4:	f7fb fd5e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB001, 0x0D);
 8004eb8:	210d      	movs	r1, #13
 8004eba:	f24b 0001 	movw	r0, #45057	@ 0xb001
 8004ebe:	f7fb fd59 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB002, 0x0D);
 8004ec2:	210d      	movs	r1, #13
 8004ec4:	f24b 0002 	movw	r0, #45058	@ 0xb002
 8004ec8:	f7fb fd54 	bl	8000974 <lcd_write_reg>
        /* AVDD ratio */
        lcd_write_reg(0xB600, 0x34);
 8004ecc:	2134      	movs	r1, #52	@ 0x34
 8004ece:	f44f 4036 	mov.w	r0, #46592	@ 0xb600
 8004ed2:	f7fb fd4f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB601, 0x34);
 8004ed6:	2134      	movs	r1, #52	@ 0x34
 8004ed8:	f24b 6001 	movw	r0, #46593	@ 0xb601
 8004edc:	f7fb fd4a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB602, 0x34);
 8004ee0:	2134      	movs	r1, #52	@ 0x34
 8004ee2:	f24b 6002 	movw	r0, #46594	@ 0xb602
 8004ee6:	f7fb fd45 	bl	8000974 <lcd_write_reg>
        /* AVEE -5.2V */
        lcd_write_reg(0xB100, 0x0D);
 8004eea:	210d      	movs	r1, #13
 8004eec:	f44f 4031 	mov.w	r0, #45312	@ 0xb100
 8004ef0:	f7fb fd40 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB101, 0x0D);
 8004ef4:	210d      	movs	r1, #13
 8004ef6:	f24b 1001 	movw	r0, #45313	@ 0xb101
 8004efa:	f7fb fd3b 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB102, 0x0D);
 8004efe:	210d      	movs	r1, #13
 8004f00:	f24b 1002 	movw	r0, #45314	@ 0xb102
 8004f04:	f7fb fd36 	bl	8000974 <lcd_write_reg>
        /* AVEE ratio */
        lcd_write_reg(0xB700, 0x34);
 8004f08:	2134      	movs	r1, #52	@ 0x34
 8004f0a:	f44f 4037 	mov.w	r0, #46848	@ 0xb700
 8004f0e:	f7fb fd31 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB701, 0x34);
 8004f12:	2134      	movs	r1, #52	@ 0x34
 8004f14:	f24b 7001 	movw	r0, #46849	@ 0xb701
 8004f18:	f7fb fd2c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB702, 0x34);
 8004f1c:	2134      	movs	r1, #52	@ 0x34
 8004f1e:	f24b 7002 	movw	r0, #46850	@ 0xb702
 8004f22:	f7fb fd27 	bl	8000974 <lcd_write_reg>
        /* VCL -2.5V */
        lcd_write_reg(0xB200, 0x00);
 8004f26:	2100      	movs	r1, #0
 8004f28:	f44f 4032 	mov.w	r0, #45568	@ 0xb200
 8004f2c:	f7fb fd22 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB201, 0x00);
 8004f30:	2100      	movs	r1, #0
 8004f32:	f24b 2001 	movw	r0, #45569	@ 0xb201
 8004f36:	f7fb fd1d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB202, 0x00);
 8004f3a:	2100      	movs	r1, #0
 8004f3c:	f24b 2002 	movw	r0, #45570	@ 0xb202
 8004f40:	f7fb fd18 	bl	8000974 <lcd_write_reg>
        /* VCL ratio */
        lcd_write_reg(0xB800, 0x24);
 8004f44:	2124      	movs	r1, #36	@ 0x24
 8004f46:	f44f 4038 	mov.w	r0, #47104	@ 0xb800
 8004f4a:	f7fb fd13 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB801, 0x24);
 8004f4e:	2124      	movs	r1, #36	@ 0x24
 8004f50:	f64b 0001 	movw	r0, #47105	@ 0xb801
 8004f54:	f7fb fd0e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB802, 0x24);
 8004f58:	2124      	movs	r1, #36	@ 0x24
 8004f5a:	f64b 0002 	movw	r0, #47106	@ 0xb802
 8004f5e:	f7fb fd09 	bl	8000974 <lcd_write_reg>
        /* VGH 15V (Free pump) */
        lcd_write_reg(0xBF00, 0x01);
 8004f62:	2101      	movs	r1, #1
 8004f64:	f44f 403f 	mov.w	r0, #48896	@ 0xbf00
 8004f68:	f7fb fd04 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB300, 0x0F);
 8004f6c:	210f      	movs	r1, #15
 8004f6e:	f44f 4033 	mov.w	r0, #45824	@ 0xb300
 8004f72:	f7fb fcff 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB301, 0x0F);
 8004f76:	210f      	movs	r1, #15
 8004f78:	f24b 3001 	movw	r0, #45825	@ 0xb301
 8004f7c:	f7fb fcfa 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB302, 0x0F);
 8004f80:	210f      	movs	r1, #15
 8004f82:	f24b 3002 	movw	r0, #45826	@ 0xb302
 8004f86:	f7fb fcf5 	bl	8000974 <lcd_write_reg>
        /* VGH ratio */
        lcd_write_reg(0xB900, 0x34);
 8004f8a:	2134      	movs	r1, #52	@ 0x34
 8004f8c:	f44f 4039 	mov.w	r0, #47360	@ 0xb900
 8004f90:	f7fb fcf0 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB901, 0x34);
 8004f94:	2134      	movs	r1, #52	@ 0x34
 8004f96:	f64b 1001 	movw	r0, #47361	@ 0xb901
 8004f9a:	f7fb fceb 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB902, 0x34);
 8004f9e:	2134      	movs	r1, #52	@ 0x34
 8004fa0:	f64b 1002 	movw	r0, #47362	@ 0xb902
 8004fa4:	f7fb fce6 	bl	8000974 <lcd_write_reg>
        /* VGL_REG -10V */
        lcd_write_reg(0xB500, 0x08);
 8004fa8:	2108      	movs	r1, #8
 8004faa:	f44f 4035 	mov.w	r0, #46336	@ 0xb500
 8004fae:	f7fb fce1 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB501, 0x08);
 8004fb2:	2108      	movs	r1, #8
 8004fb4:	f24b 5001 	movw	r0, #46337	@ 0xb501
 8004fb8:	f7fb fcdc 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB502, 0x08);
 8004fbc:	2108      	movs	r1, #8
 8004fbe:	f24b 5002 	movw	r0, #46338	@ 0xb502
 8004fc2:	f7fb fcd7 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xC200, 0x03);
 8004fc6:	2103      	movs	r1, #3
 8004fc8:	f44f 4042 	mov.w	r0, #49664	@ 0xc200
 8004fcc:	f7fb fcd2 	bl	8000974 <lcd_write_reg>
        /* VGLX ratio */
        lcd_write_reg(0xBA00, 0x24);
 8004fd0:	2124      	movs	r1, #36	@ 0x24
 8004fd2:	f44f 403a 	mov.w	r0, #47616	@ 0xba00
 8004fd6:	f7fb fccd 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xBA01, 0x24);
 8004fda:	2124      	movs	r1, #36	@ 0x24
 8004fdc:	f64b 2001 	movw	r0, #47617	@ 0xba01
 8004fe0:	f7fb fcc8 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xBA02, 0x24);
 8004fe4:	2124      	movs	r1, #36	@ 0x24
 8004fe6:	f64b 2002 	movw	r0, #47618	@ 0xba02
 8004fea:	f7fb fcc3 	bl	8000974 <lcd_write_reg>
        /* VGMP/VGSP 4.5V/0V */
        lcd_write_reg(0xBC00, 0x00);
 8004fee:	2100      	movs	r1, #0
 8004ff0:	f44f 403c 	mov.w	r0, #48128	@ 0xbc00
 8004ff4:	f7fb fcbe 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xBC01, 0x78);
 8004ff8:	2178      	movs	r1, #120	@ 0x78
 8004ffa:	f64b 4001 	movw	r0, #48129	@ 0xbc01
 8004ffe:	f7fb fcb9 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xBC02, 0x00);
 8005002:	2100      	movs	r1, #0
 8005004:	f64b 4002 	movw	r0, #48130	@ 0xbc02
 8005008:	f7fb fcb4 	bl	8000974 <lcd_write_reg>
        /* VGMN/VGSN -4.5V/0V */
        lcd_write_reg(0xBD00, 0x00);
 800500c:	2100      	movs	r1, #0
 800500e:	f44f 403d 	mov.w	r0, #48384	@ 0xbd00
 8005012:	f7fb fcaf 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xBD01, 0x78);
 8005016:	2178      	movs	r1, #120	@ 0x78
 8005018:	f64b 5001 	movw	r0, #48385	@ 0xbd01
 800501c:	f7fb fcaa 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xBD02, 0x00);
 8005020:	2100      	movs	r1, #0
 8005022:	f64b 5002 	movw	r0, #48386	@ 0xbd02
 8005026:	f7fb fca5 	bl	8000974 <lcd_write_reg>
        /* VCOM */
        lcd_write_reg(0xBE00, 0x00);
 800502a:	2100      	movs	r1, #0
 800502c:	f44f 403e 	mov.w	r0, #48640	@ 0xbe00
 8005030:	f7fb fca0 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xBE01, 0x64);
 8005034:	2164      	movs	r1, #100	@ 0x64
 8005036:	f64b 6001 	movw	r0, #48641	@ 0xbe01
 800503a:	f7fb fc9b 	bl	8000974 <lcd_write_reg>
        /* Gamma Setting */
        lcd_write_reg(0xD100, 0x00);
 800503e:	2100      	movs	r1, #0
 8005040:	f44f 4051 	mov.w	r0, #53504	@ 0xd100
 8005044:	f7fb fc96 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD101, 0x33);
 8005048:	2133      	movs	r1, #51	@ 0x33
 800504a:	f24d 1001 	movw	r0, #53505	@ 0xd101
 800504e:	f7fb fc91 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD102, 0x00);
 8005052:	2100      	movs	r1, #0
 8005054:	f24d 1002 	movw	r0, #53506	@ 0xd102
 8005058:	f7fb fc8c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD103, 0x34);
 800505c:	2134      	movs	r1, #52	@ 0x34
 800505e:	f24d 1003 	movw	r0, #53507	@ 0xd103
 8005062:	f7fb fc87 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD104, 0x00);
 8005066:	2100      	movs	r1, #0
 8005068:	f24d 1004 	movw	r0, #53508	@ 0xd104
 800506c:	f7fb fc82 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD105, 0x3A);
 8005070:	213a      	movs	r1, #58	@ 0x3a
 8005072:	f24d 1005 	movw	r0, #53509	@ 0xd105
 8005076:	f7fb fc7d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD106, 0x00);
 800507a:	2100      	movs	r1, #0
 800507c:	f24d 1006 	movw	r0, #53510	@ 0xd106
 8005080:	f7fb fc78 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD107, 0x4A);
 8005084:	214a      	movs	r1, #74	@ 0x4a
 8005086:	f24d 1007 	movw	r0, #53511	@ 0xd107
 800508a:	f7fb fc73 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD108, 0x00);
 800508e:	2100      	movs	r1, #0
 8005090:	f24d 1008 	movw	r0, #53512	@ 0xd108
 8005094:	f7fb fc6e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD109, 0x5C);
 8005098:	215c      	movs	r1, #92	@ 0x5c
 800509a:	f24d 1009 	movw	r0, #53513	@ 0xd109
 800509e:	f7fb fc69 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD10A, 0x00);
 80050a2:	2100      	movs	r1, #0
 80050a4:	f24d 100a 	movw	r0, #53514	@ 0xd10a
 80050a8:	f7fb fc64 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD10B, 0x81);
 80050ac:	2181      	movs	r1, #129	@ 0x81
 80050ae:	f24d 100b 	movw	r0, #53515	@ 0xd10b
 80050b2:	f7fb fc5f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD10C, 0x00);
 80050b6:	2100      	movs	r1, #0
 80050b8:	f24d 100c 	movw	r0, #53516	@ 0xd10c
 80050bc:	f7fb fc5a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD10D, 0xA6);
 80050c0:	21a6      	movs	r1, #166	@ 0xa6
 80050c2:	f24d 100d 	movw	r0, #53517	@ 0xd10d
 80050c6:	f7fb fc55 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD10E, 0x00);
 80050ca:	2100      	movs	r1, #0
 80050cc:	f24d 100e 	movw	r0, #53518	@ 0xd10e
 80050d0:	f7fb fc50 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD10F, 0xE5);
 80050d4:	21e5      	movs	r1, #229	@ 0xe5
 80050d6:	f24d 100f 	movw	r0, #53519	@ 0xd10f
 80050da:	f7fb fc4b 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD110, 0x01);
 80050de:	2101      	movs	r1, #1
 80050e0:	f24d 1010 	movw	r0, #53520	@ 0xd110
 80050e4:	f7fb fc46 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD111, 0x13);
 80050e8:	2113      	movs	r1, #19
 80050ea:	f24d 1011 	movw	r0, #53521	@ 0xd111
 80050ee:	f7fb fc41 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD112, 0x01);
 80050f2:	2101      	movs	r1, #1
 80050f4:	f24d 1012 	movw	r0, #53522	@ 0xd112
 80050f8:	f7fb fc3c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD113, 0x54);
 80050fc:	2154      	movs	r1, #84	@ 0x54
 80050fe:	f24d 1013 	movw	r0, #53523	@ 0xd113
 8005102:	f7fb fc37 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD114, 0x01);
 8005106:	2101      	movs	r1, #1
 8005108:	f24d 1014 	movw	r0, #53524	@ 0xd114
 800510c:	f7fb fc32 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD115, 0x82);
 8005110:	2182      	movs	r1, #130	@ 0x82
 8005112:	f24d 1015 	movw	r0, #53525	@ 0xd115
 8005116:	f7fb fc2d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD116, 0x01);
 800511a:	2101      	movs	r1, #1
 800511c:	f24d 1016 	movw	r0, #53526	@ 0xd116
 8005120:	f7fb fc28 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD117, 0xCA);
 8005124:	21ca      	movs	r1, #202	@ 0xca
 8005126:	f24d 1017 	movw	r0, #53527	@ 0xd117
 800512a:	f7fb fc23 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD118, 0x02);
 800512e:	2102      	movs	r1, #2
 8005130:	f24d 1018 	movw	r0, #53528	@ 0xd118
 8005134:	f7fb fc1e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD119, 0x00);
 8005138:	2100      	movs	r1, #0
 800513a:	f24d 1019 	movw	r0, #53529	@ 0xd119
 800513e:	f7fb fc19 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD11A, 0x02);
 8005142:	2102      	movs	r1, #2
 8005144:	f24d 101a 	movw	r0, #53530	@ 0xd11a
 8005148:	f7fb fc14 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD11B, 0x01);
 800514c:	2101      	movs	r1, #1
 800514e:	f24d 101b 	movw	r0, #53531	@ 0xd11b
 8005152:	f7fb fc0f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD11C, 0x02);
 8005156:	2102      	movs	r1, #2
 8005158:	f24d 101c 	movw	r0, #53532	@ 0xd11c
 800515c:	f7fb fc0a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD11D, 0x34);
 8005160:	2134      	movs	r1, #52	@ 0x34
 8005162:	f24d 101d 	movw	r0, #53533	@ 0xd11d
 8005166:	f7fb fc05 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD11E, 0x02);
 800516a:	2102      	movs	r1, #2
 800516c:	f24d 101e 	movw	r0, #53534	@ 0xd11e
 8005170:	f7fb fc00 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD11F, 0x67);
 8005174:	2167      	movs	r1, #103	@ 0x67
 8005176:	f24d 101f 	movw	r0, #53535	@ 0xd11f
 800517a:	f7fb fbfb 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD120, 0x02);
 800517e:	2102      	movs	r1, #2
 8005180:	f24d 1020 	movw	r0, #53536	@ 0xd120
 8005184:	f7fb fbf6 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD121, 0x84);
 8005188:	2184      	movs	r1, #132	@ 0x84
 800518a:	f24d 1021 	movw	r0, #53537	@ 0xd121
 800518e:	f7fb fbf1 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD122, 0x02);
 8005192:	2102      	movs	r1, #2
 8005194:	f24d 1022 	movw	r0, #53538	@ 0xd122
 8005198:	f7fb fbec 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD123, 0xA4);
 800519c:	21a4      	movs	r1, #164	@ 0xa4
 800519e:	f24d 1023 	movw	r0, #53539	@ 0xd123
 80051a2:	f7fb fbe7 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD124, 0x02);
 80051a6:	2102      	movs	r1, #2
 80051a8:	f24d 1024 	movw	r0, #53540	@ 0xd124
 80051ac:	f7fb fbe2 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD125, 0xB7);
 80051b0:	21b7      	movs	r1, #183	@ 0xb7
 80051b2:	f24d 1025 	movw	r0, #53541	@ 0xd125
 80051b6:	f7fb fbdd 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD126, 0x02);
 80051ba:	2102      	movs	r1, #2
 80051bc:	f24d 1026 	movw	r0, #53542	@ 0xd126
 80051c0:	f7fb fbd8 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD127, 0xCF);
 80051c4:	21cf      	movs	r1, #207	@ 0xcf
 80051c6:	f24d 1027 	movw	r0, #53543	@ 0xd127
 80051ca:	f7fb fbd3 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD128, 0x02);
 80051ce:	2102      	movs	r1, #2
 80051d0:	f24d 1028 	movw	r0, #53544	@ 0xd128
 80051d4:	f7fb fbce 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD129, 0xDE);
 80051d8:	21de      	movs	r1, #222	@ 0xde
 80051da:	f24d 1029 	movw	r0, #53545	@ 0xd129
 80051de:	f7fb fbc9 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD12A, 0x02);
 80051e2:	2102      	movs	r1, #2
 80051e4:	f24d 102a 	movw	r0, #53546	@ 0xd12a
 80051e8:	f7fb fbc4 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD12B, 0xF2);
 80051ec:	21f2      	movs	r1, #242	@ 0xf2
 80051ee:	f24d 102b 	movw	r0, #53547	@ 0xd12b
 80051f2:	f7fb fbbf 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD12C, 0x02);
 80051f6:	2102      	movs	r1, #2
 80051f8:	f24d 102c 	movw	r0, #53548	@ 0xd12c
 80051fc:	f7fb fbba 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD12D, 0xFE);
 8005200:	21fe      	movs	r1, #254	@ 0xfe
 8005202:	f24d 102d 	movw	r0, #53549	@ 0xd12d
 8005206:	f7fb fbb5 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD12E, 0x03);
 800520a:	2103      	movs	r1, #3
 800520c:	f24d 102e 	movw	r0, #53550	@ 0xd12e
 8005210:	f7fb fbb0 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD12F, 0x10);
 8005214:	2110      	movs	r1, #16
 8005216:	f24d 102f 	movw	r0, #53551	@ 0xd12f
 800521a:	f7fb fbab 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD130, 0x03);
 800521e:	2103      	movs	r1, #3
 8005220:	f24d 1030 	movw	r0, #53552	@ 0xd130
 8005224:	f7fb fba6 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD131, 0x33);
 8005228:	2133      	movs	r1, #51	@ 0x33
 800522a:	f24d 1031 	movw	r0, #53553	@ 0xd131
 800522e:	f7fb fba1 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD132, 0x03);
 8005232:	2103      	movs	r1, #3
 8005234:	f24d 1032 	movw	r0, #53554	@ 0xd132
 8005238:	f7fb fb9c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD133, 0x6D);
 800523c:	216d      	movs	r1, #109	@ 0x6d
 800523e:	f24d 1033 	movw	r0, #53555	@ 0xd133
 8005242:	f7fb fb97 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD200, 0x00);
 8005246:	2100      	movs	r1, #0
 8005248:	f44f 4052 	mov.w	r0, #53760	@ 0xd200
 800524c:	f7fb fb92 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD201, 0x33);
 8005250:	2133      	movs	r1, #51	@ 0x33
 8005252:	f24d 2001 	movw	r0, #53761	@ 0xd201
 8005256:	f7fb fb8d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD202, 0x00);
 800525a:	2100      	movs	r1, #0
 800525c:	f24d 2002 	movw	r0, #53762	@ 0xd202
 8005260:	f7fb fb88 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD203, 0x34);
 8005264:	2134      	movs	r1, #52	@ 0x34
 8005266:	f24d 2003 	movw	r0, #53763	@ 0xd203
 800526a:	f7fb fb83 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD204, 0x00);
 800526e:	2100      	movs	r1, #0
 8005270:	f24d 2004 	movw	r0, #53764	@ 0xd204
 8005274:	f7fb fb7e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD205, 0x3A);
 8005278:	213a      	movs	r1, #58	@ 0x3a
 800527a:	f24d 2005 	movw	r0, #53765	@ 0xd205
 800527e:	f7fb fb79 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD206, 0x00);
 8005282:	2100      	movs	r1, #0
 8005284:	f24d 2006 	movw	r0, #53766	@ 0xd206
 8005288:	f7fb fb74 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD207, 0x4A);
 800528c:	214a      	movs	r1, #74	@ 0x4a
 800528e:	f24d 2007 	movw	r0, #53767	@ 0xd207
 8005292:	f7fb fb6f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD208, 0x00);
 8005296:	2100      	movs	r1, #0
 8005298:	f24d 2008 	movw	r0, #53768	@ 0xd208
 800529c:	f7fb fb6a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD209, 0x5C);
 80052a0:	215c      	movs	r1, #92	@ 0x5c
 80052a2:	f24d 2009 	movw	r0, #53769	@ 0xd209
 80052a6:	f7fb fb65 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD20A, 0x00);
 80052aa:	2100      	movs	r1, #0
 80052ac:	f24d 200a 	movw	r0, #53770	@ 0xd20a
 80052b0:	f7fb fb60 	bl	8000974 <lcd_write_reg>

        lcd_write_reg(0xD20B, 0x81);
 80052b4:	2181      	movs	r1, #129	@ 0x81
 80052b6:	f24d 200b 	movw	r0, #53771	@ 0xd20b
 80052ba:	f7fb fb5b 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD20C, 0x00);
 80052be:	2100      	movs	r1, #0
 80052c0:	f24d 200c 	movw	r0, #53772	@ 0xd20c
 80052c4:	f7fb fb56 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD20D, 0xA6);
 80052c8:	21a6      	movs	r1, #166	@ 0xa6
 80052ca:	f24d 200d 	movw	r0, #53773	@ 0xd20d
 80052ce:	f7fb fb51 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD20E, 0x00);
 80052d2:	2100      	movs	r1, #0
 80052d4:	f24d 200e 	movw	r0, #53774	@ 0xd20e
 80052d8:	f7fb fb4c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD20F, 0xE5);
 80052dc:	21e5      	movs	r1, #229	@ 0xe5
 80052de:	f24d 200f 	movw	r0, #53775	@ 0xd20f
 80052e2:	f7fb fb47 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD210, 0x01);
 80052e6:	2101      	movs	r1, #1
 80052e8:	f24d 2010 	movw	r0, #53776	@ 0xd210
 80052ec:	f7fb fb42 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD211, 0x13);
 80052f0:	2113      	movs	r1, #19
 80052f2:	f24d 2011 	movw	r0, #53777	@ 0xd211
 80052f6:	f7fb fb3d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD212, 0x01);
 80052fa:	2101      	movs	r1, #1
 80052fc:	f24d 2012 	movw	r0, #53778	@ 0xd212
 8005300:	f7fb fb38 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD213, 0x54);
 8005304:	2154      	movs	r1, #84	@ 0x54
 8005306:	f24d 2013 	movw	r0, #53779	@ 0xd213
 800530a:	f7fb fb33 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD214, 0x01);
 800530e:	2101      	movs	r1, #1
 8005310:	f24d 2014 	movw	r0, #53780	@ 0xd214
 8005314:	f7fb fb2e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD215, 0x82);
 8005318:	2182      	movs	r1, #130	@ 0x82
 800531a:	f24d 2015 	movw	r0, #53781	@ 0xd215
 800531e:	f7fb fb29 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD216, 0x01);
 8005322:	2101      	movs	r1, #1
 8005324:	f24d 2016 	movw	r0, #53782	@ 0xd216
 8005328:	f7fb fb24 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD217, 0xCA);
 800532c:	21ca      	movs	r1, #202	@ 0xca
 800532e:	f24d 2017 	movw	r0, #53783	@ 0xd217
 8005332:	f7fb fb1f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD218, 0x02);
 8005336:	2102      	movs	r1, #2
 8005338:	f24d 2018 	movw	r0, #53784	@ 0xd218
 800533c:	f7fb fb1a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD219, 0x00);
 8005340:	2100      	movs	r1, #0
 8005342:	f24d 2019 	movw	r0, #53785	@ 0xd219
 8005346:	f7fb fb15 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD21A, 0x02);
 800534a:	2102      	movs	r1, #2
 800534c:	f24d 201a 	movw	r0, #53786	@ 0xd21a
 8005350:	f7fb fb10 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD21B, 0x01);
 8005354:	2101      	movs	r1, #1
 8005356:	f24d 201b 	movw	r0, #53787	@ 0xd21b
 800535a:	f7fb fb0b 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD21C, 0x02);
 800535e:	2102      	movs	r1, #2
 8005360:	f24d 201c 	movw	r0, #53788	@ 0xd21c
 8005364:	f7fb fb06 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD21D, 0x34);
 8005368:	2134      	movs	r1, #52	@ 0x34
 800536a:	f24d 201d 	movw	r0, #53789	@ 0xd21d
 800536e:	f7fb fb01 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD21E, 0x02);
 8005372:	2102      	movs	r1, #2
 8005374:	f24d 201e 	movw	r0, #53790	@ 0xd21e
 8005378:	f7fb fafc 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD21F, 0x67);
 800537c:	2167      	movs	r1, #103	@ 0x67
 800537e:	f24d 201f 	movw	r0, #53791	@ 0xd21f
 8005382:	f7fb faf7 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD220, 0x02);
 8005386:	2102      	movs	r1, #2
 8005388:	f24d 2020 	movw	r0, #53792	@ 0xd220
 800538c:	f7fb faf2 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD221, 0x84);
 8005390:	2184      	movs	r1, #132	@ 0x84
 8005392:	f24d 2021 	movw	r0, #53793	@ 0xd221
 8005396:	f7fb faed 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD222, 0x02);
 800539a:	2102      	movs	r1, #2
 800539c:	f24d 2022 	movw	r0, #53794	@ 0xd222
 80053a0:	f7fb fae8 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD223, 0xA4);
 80053a4:	21a4      	movs	r1, #164	@ 0xa4
 80053a6:	f24d 2023 	movw	r0, #53795	@ 0xd223
 80053aa:	f7fb fae3 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD224, 0x02);
 80053ae:	2102      	movs	r1, #2
 80053b0:	f24d 2024 	movw	r0, #53796	@ 0xd224
 80053b4:	f7fb fade 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD225, 0xB7);
 80053b8:	21b7      	movs	r1, #183	@ 0xb7
 80053ba:	f24d 2025 	movw	r0, #53797	@ 0xd225
 80053be:	f7fb fad9 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD226, 0x02);
 80053c2:	2102      	movs	r1, #2
 80053c4:	f24d 2026 	movw	r0, #53798	@ 0xd226
 80053c8:	f7fb fad4 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD227, 0xCF);
 80053cc:	21cf      	movs	r1, #207	@ 0xcf
 80053ce:	f24d 2027 	movw	r0, #53799	@ 0xd227
 80053d2:	f7fb facf 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD228, 0x02);
 80053d6:	2102      	movs	r1, #2
 80053d8:	f24d 2028 	movw	r0, #53800	@ 0xd228
 80053dc:	f7fb faca 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD229, 0xDE);
 80053e0:	21de      	movs	r1, #222	@ 0xde
 80053e2:	f24d 2029 	movw	r0, #53801	@ 0xd229
 80053e6:	f7fb fac5 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD22A, 0x02);
 80053ea:	2102      	movs	r1, #2
 80053ec:	f24d 202a 	movw	r0, #53802	@ 0xd22a
 80053f0:	f7fb fac0 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD22B, 0xF2);
 80053f4:	21f2      	movs	r1, #242	@ 0xf2
 80053f6:	f24d 202b 	movw	r0, #53803	@ 0xd22b
 80053fa:	f7fb fabb 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD22C, 0x02);
 80053fe:	2102      	movs	r1, #2
 8005400:	f24d 202c 	movw	r0, #53804	@ 0xd22c
 8005404:	f7fb fab6 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD22D, 0xFE);
 8005408:	21fe      	movs	r1, #254	@ 0xfe
 800540a:	f24d 202d 	movw	r0, #53805	@ 0xd22d
 800540e:	f7fb fab1 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD22E, 0x03);
 8005412:	2103      	movs	r1, #3
 8005414:	f24d 202e 	movw	r0, #53806	@ 0xd22e
 8005418:	f7fb faac 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD22F, 0x10);
 800541c:	2110      	movs	r1, #16
 800541e:	f24d 202f 	movw	r0, #53807	@ 0xd22f
 8005422:	f7fb faa7 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD230, 0x03);
 8005426:	2103      	movs	r1, #3
 8005428:	f24d 2030 	movw	r0, #53808	@ 0xd230
 800542c:	f7fb faa2 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD231, 0x33);
 8005430:	2133      	movs	r1, #51	@ 0x33
 8005432:	f24d 2031 	movw	r0, #53809	@ 0xd231
 8005436:	f7fb fa9d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD232, 0x03);
 800543a:	2103      	movs	r1, #3
 800543c:	f24d 2032 	movw	r0, #53810	@ 0xd232
 8005440:	f7fb fa98 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD233, 0x6D);
 8005444:	216d      	movs	r1, #109	@ 0x6d
 8005446:	f24d 2033 	movw	r0, #53811	@ 0xd233
 800544a:	f7fb fa93 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD300, 0x00);
 800544e:	2100      	movs	r1, #0
 8005450:	f44f 4053 	mov.w	r0, #54016	@ 0xd300
 8005454:	f7fb fa8e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD301, 0x33);
 8005458:	2133      	movs	r1, #51	@ 0x33
 800545a:	f24d 3001 	movw	r0, #54017	@ 0xd301
 800545e:	f7fb fa89 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD302, 0x00);
 8005462:	2100      	movs	r1, #0
 8005464:	f24d 3002 	movw	r0, #54018	@ 0xd302
 8005468:	f7fb fa84 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD303, 0x34);
 800546c:	2134      	movs	r1, #52	@ 0x34
 800546e:	f24d 3003 	movw	r0, #54019	@ 0xd303
 8005472:	f7fb fa7f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD304, 0x00);
 8005476:	2100      	movs	r1, #0
 8005478:	f24d 3004 	movw	r0, #54020	@ 0xd304
 800547c:	f7fb fa7a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD305, 0x3A);
 8005480:	213a      	movs	r1, #58	@ 0x3a
 8005482:	f24d 3005 	movw	r0, #54021	@ 0xd305
 8005486:	f7fb fa75 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD306, 0x00);
 800548a:	2100      	movs	r1, #0
 800548c:	f24d 3006 	movw	r0, #54022	@ 0xd306
 8005490:	f7fb fa70 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD307, 0x4A);
 8005494:	214a      	movs	r1, #74	@ 0x4a
 8005496:	f24d 3007 	movw	r0, #54023	@ 0xd307
 800549a:	f7fb fa6b 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD308, 0x00);
 800549e:	2100      	movs	r1, #0
 80054a0:	f24d 3008 	movw	r0, #54024	@ 0xd308
 80054a4:	f7fb fa66 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD309, 0x5C);
 80054a8:	215c      	movs	r1, #92	@ 0x5c
 80054aa:	f24d 3009 	movw	r0, #54025	@ 0xd309
 80054ae:	f7fb fa61 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD30A, 0x00);
 80054b2:	2100      	movs	r1, #0
 80054b4:	f24d 300a 	movw	r0, #54026	@ 0xd30a
 80054b8:	f7fb fa5c 	bl	8000974 <lcd_write_reg>

        lcd_write_reg(0xD30B, 0x81);
 80054bc:	2181      	movs	r1, #129	@ 0x81
 80054be:	f24d 300b 	movw	r0, #54027	@ 0xd30b
 80054c2:	f7fb fa57 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD30C, 0x00);
 80054c6:	2100      	movs	r1, #0
 80054c8:	f24d 300c 	movw	r0, #54028	@ 0xd30c
 80054cc:	f7fb fa52 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD30D, 0xA6);
 80054d0:	21a6      	movs	r1, #166	@ 0xa6
 80054d2:	f24d 300d 	movw	r0, #54029	@ 0xd30d
 80054d6:	f7fb fa4d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD30E, 0x00);
 80054da:	2100      	movs	r1, #0
 80054dc:	f24d 300e 	movw	r0, #54030	@ 0xd30e
 80054e0:	f7fb fa48 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD30F, 0xE5);
 80054e4:	21e5      	movs	r1, #229	@ 0xe5
 80054e6:	f24d 300f 	movw	r0, #54031	@ 0xd30f
 80054ea:	f7fb fa43 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD310, 0x01);
 80054ee:	2101      	movs	r1, #1
 80054f0:	f24d 3010 	movw	r0, #54032	@ 0xd310
 80054f4:	f7fb fa3e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD311, 0x13);
 80054f8:	2113      	movs	r1, #19
 80054fa:	f24d 3011 	movw	r0, #54033	@ 0xd311
 80054fe:	f7fb fa39 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD312, 0x01);
 8005502:	2101      	movs	r1, #1
 8005504:	f24d 3012 	movw	r0, #54034	@ 0xd312
 8005508:	f7fb fa34 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD313, 0x54);
 800550c:	2154      	movs	r1, #84	@ 0x54
 800550e:	f24d 3013 	movw	r0, #54035	@ 0xd313
 8005512:	f7fb fa2f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD314, 0x01);
 8005516:	2101      	movs	r1, #1
 8005518:	f24d 3014 	movw	r0, #54036	@ 0xd314
 800551c:	f7fb fa2a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD315, 0x82);
 8005520:	2182      	movs	r1, #130	@ 0x82
 8005522:	f24d 3015 	movw	r0, #54037	@ 0xd315
 8005526:	f7fb fa25 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD316, 0x01);
 800552a:	2101      	movs	r1, #1
 800552c:	f24d 3016 	movw	r0, #54038	@ 0xd316
 8005530:	f7fb fa20 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD317, 0xCA);
 8005534:	21ca      	movs	r1, #202	@ 0xca
 8005536:	f24d 3017 	movw	r0, #54039	@ 0xd317
 800553a:	f7fb fa1b 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD318, 0x02);
 800553e:	2102      	movs	r1, #2
 8005540:	f24d 3018 	movw	r0, #54040	@ 0xd318
 8005544:	f7fb fa16 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD319, 0x00);
 8005548:	2100      	movs	r1, #0
 800554a:	f24d 3019 	movw	r0, #54041	@ 0xd319
 800554e:	f7fb fa11 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD31A, 0x02);
 8005552:	2102      	movs	r1, #2
 8005554:	f24d 301a 	movw	r0, #54042	@ 0xd31a
 8005558:	f7fb fa0c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD31B, 0x01);
 800555c:	2101      	movs	r1, #1
 800555e:	f24d 301b 	movw	r0, #54043	@ 0xd31b
 8005562:	f7fb fa07 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD31C, 0x02);
 8005566:	2102      	movs	r1, #2
 8005568:	f24d 301c 	movw	r0, #54044	@ 0xd31c
 800556c:	f7fb fa02 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD31D, 0x34);
 8005570:	2134      	movs	r1, #52	@ 0x34
 8005572:	f24d 301d 	movw	r0, #54045	@ 0xd31d
 8005576:	f7fb f9fd 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD31E, 0x02);
 800557a:	2102      	movs	r1, #2
 800557c:	f24d 301e 	movw	r0, #54046	@ 0xd31e
 8005580:	f7fb f9f8 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD31F, 0x67);
 8005584:	2167      	movs	r1, #103	@ 0x67
 8005586:	f24d 301f 	movw	r0, #54047	@ 0xd31f
 800558a:	f7fb f9f3 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD320, 0x02);
 800558e:	2102      	movs	r1, #2
 8005590:	f24d 3020 	movw	r0, #54048	@ 0xd320
 8005594:	f7fb f9ee 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD321, 0x84);
 8005598:	2184      	movs	r1, #132	@ 0x84
 800559a:	f24d 3021 	movw	r0, #54049	@ 0xd321
 800559e:	f7fb f9e9 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD322, 0x02);
 80055a2:	2102      	movs	r1, #2
 80055a4:	f24d 3022 	movw	r0, #54050	@ 0xd322
 80055a8:	f7fb f9e4 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD323, 0xA4);
 80055ac:	21a4      	movs	r1, #164	@ 0xa4
 80055ae:	f24d 3023 	movw	r0, #54051	@ 0xd323
 80055b2:	f7fb f9df 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD324, 0x02);
 80055b6:	2102      	movs	r1, #2
 80055b8:	f24d 3024 	movw	r0, #54052	@ 0xd324
 80055bc:	f7fb f9da 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD325, 0xB7);
 80055c0:	21b7      	movs	r1, #183	@ 0xb7
 80055c2:	f24d 3025 	movw	r0, #54053	@ 0xd325
 80055c6:	f7fb f9d5 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD326, 0x02);
 80055ca:	2102      	movs	r1, #2
 80055cc:	f24d 3026 	movw	r0, #54054	@ 0xd326
 80055d0:	f7fb f9d0 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD327, 0xCF);
 80055d4:	21cf      	movs	r1, #207	@ 0xcf
 80055d6:	f24d 3027 	movw	r0, #54055	@ 0xd327
 80055da:	f7fb f9cb 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD328, 0x02);
 80055de:	2102      	movs	r1, #2
 80055e0:	f24d 3028 	movw	r0, #54056	@ 0xd328
 80055e4:	f7fb f9c6 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD329, 0xDE);
 80055e8:	21de      	movs	r1, #222	@ 0xde
 80055ea:	f24d 3029 	movw	r0, #54057	@ 0xd329
 80055ee:	f7fb f9c1 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD32A, 0x02);
 80055f2:	2102      	movs	r1, #2
 80055f4:	f24d 302a 	movw	r0, #54058	@ 0xd32a
 80055f8:	f7fb f9bc 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD32B, 0xF2);
 80055fc:	21f2      	movs	r1, #242	@ 0xf2
 80055fe:	f24d 302b 	movw	r0, #54059	@ 0xd32b
 8005602:	f7fb f9b7 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD32C, 0x02);
 8005606:	2102      	movs	r1, #2
 8005608:	f24d 302c 	movw	r0, #54060	@ 0xd32c
 800560c:	f7fb f9b2 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD32D, 0xFE);
 8005610:	21fe      	movs	r1, #254	@ 0xfe
 8005612:	f24d 302d 	movw	r0, #54061	@ 0xd32d
 8005616:	f7fb f9ad 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD32E, 0x03);
 800561a:	2103      	movs	r1, #3
 800561c:	f24d 302e 	movw	r0, #54062	@ 0xd32e
 8005620:	f7fb f9a8 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD32F, 0x10);
 8005624:	2110      	movs	r1, #16
 8005626:	f24d 302f 	movw	r0, #54063	@ 0xd32f
 800562a:	f7fb f9a3 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD330, 0x03);
 800562e:	2103      	movs	r1, #3
 8005630:	f24d 3030 	movw	r0, #54064	@ 0xd330
 8005634:	f7fb f99e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD331, 0x33);
 8005638:	2133      	movs	r1, #51	@ 0x33
 800563a:	f24d 3031 	movw	r0, #54065	@ 0xd331
 800563e:	f7fb f999 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD332, 0x03);
 8005642:	2103      	movs	r1, #3
 8005644:	f24d 3032 	movw	r0, #54066	@ 0xd332
 8005648:	f7fb f994 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD333, 0x6D);
 800564c:	216d      	movs	r1, #109	@ 0x6d
 800564e:	f24d 3033 	movw	r0, #54067	@ 0xd333
 8005652:	f7fb f98f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD400, 0x00);
 8005656:	2100      	movs	r1, #0
 8005658:	f44f 4054 	mov.w	r0, #54272	@ 0xd400
 800565c:	f7fb f98a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD401, 0x33);
 8005660:	2133      	movs	r1, #51	@ 0x33
 8005662:	f24d 4001 	movw	r0, #54273	@ 0xd401
 8005666:	f7fb f985 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD402, 0x00);
 800566a:	2100      	movs	r1, #0
 800566c:	f24d 4002 	movw	r0, #54274	@ 0xd402
 8005670:	f7fb f980 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD403, 0x34);
 8005674:	2134      	movs	r1, #52	@ 0x34
 8005676:	f24d 4003 	movw	r0, #54275	@ 0xd403
 800567a:	f7fb f97b 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD404, 0x00);
 800567e:	2100      	movs	r1, #0
 8005680:	f24d 4004 	movw	r0, #54276	@ 0xd404
 8005684:	f7fb f976 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD405, 0x3A);
 8005688:	213a      	movs	r1, #58	@ 0x3a
 800568a:	f24d 4005 	movw	r0, #54277	@ 0xd405
 800568e:	f7fb f971 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD406, 0x00);
 8005692:	2100      	movs	r1, #0
 8005694:	f24d 4006 	movw	r0, #54278	@ 0xd406
 8005698:	f7fb f96c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD407, 0x4A);
 800569c:	214a      	movs	r1, #74	@ 0x4a
 800569e:	f24d 4007 	movw	r0, #54279	@ 0xd407
 80056a2:	f7fb f967 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD408, 0x00);
 80056a6:	2100      	movs	r1, #0
 80056a8:	f24d 4008 	movw	r0, #54280	@ 0xd408
 80056ac:	f7fb f962 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD409, 0x5C);
 80056b0:	215c      	movs	r1, #92	@ 0x5c
 80056b2:	f24d 4009 	movw	r0, #54281	@ 0xd409
 80056b6:	f7fb f95d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD40A, 0x00);
 80056ba:	2100      	movs	r1, #0
 80056bc:	f24d 400a 	movw	r0, #54282	@ 0xd40a
 80056c0:	f7fb f958 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD40B, 0x81);
 80056c4:	2181      	movs	r1, #129	@ 0x81
 80056c6:	f24d 400b 	movw	r0, #54283	@ 0xd40b
 80056ca:	f7fb f953 	bl	8000974 <lcd_write_reg>

        lcd_write_reg(0xD40C, 0x00);
 80056ce:	2100      	movs	r1, #0
 80056d0:	f24d 400c 	movw	r0, #54284	@ 0xd40c
 80056d4:	f7fb f94e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD40D, 0xA6);
 80056d8:	21a6      	movs	r1, #166	@ 0xa6
 80056da:	f24d 400d 	movw	r0, #54285	@ 0xd40d
 80056de:	f7fb f949 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD40E, 0x00);
 80056e2:	2100      	movs	r1, #0
 80056e4:	f24d 400e 	movw	r0, #54286	@ 0xd40e
 80056e8:	f7fb f944 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD40F, 0xE5);
 80056ec:	21e5      	movs	r1, #229	@ 0xe5
 80056ee:	f24d 400f 	movw	r0, #54287	@ 0xd40f
 80056f2:	f7fb f93f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD410, 0x01);
 80056f6:	2101      	movs	r1, #1
 80056f8:	f24d 4010 	movw	r0, #54288	@ 0xd410
 80056fc:	f7fb f93a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD411, 0x13);
 8005700:	2113      	movs	r1, #19
 8005702:	f24d 4011 	movw	r0, #54289	@ 0xd411
 8005706:	f7fb f935 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD412, 0x01);
 800570a:	2101      	movs	r1, #1
 800570c:	f24d 4012 	movw	r0, #54290	@ 0xd412
 8005710:	f7fb f930 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD413, 0x54);
 8005714:	2154      	movs	r1, #84	@ 0x54
 8005716:	f24d 4013 	movw	r0, #54291	@ 0xd413
 800571a:	f7fb f92b 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD414, 0x01);
 800571e:	2101      	movs	r1, #1
 8005720:	f24d 4014 	movw	r0, #54292	@ 0xd414
 8005724:	f7fb f926 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD415, 0x82);
 8005728:	2182      	movs	r1, #130	@ 0x82
 800572a:	f24d 4015 	movw	r0, #54293	@ 0xd415
 800572e:	f7fb f921 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD416, 0x01);
 8005732:	2101      	movs	r1, #1
 8005734:	f24d 4016 	movw	r0, #54294	@ 0xd416
 8005738:	f7fb f91c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD417, 0xCA);
 800573c:	21ca      	movs	r1, #202	@ 0xca
 800573e:	f24d 4017 	movw	r0, #54295	@ 0xd417
 8005742:	f7fb f917 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD418, 0x02);
 8005746:	2102      	movs	r1, #2
 8005748:	f24d 4018 	movw	r0, #54296	@ 0xd418
 800574c:	f7fb f912 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD419, 0x00);
 8005750:	2100      	movs	r1, #0
 8005752:	f24d 4019 	movw	r0, #54297	@ 0xd419
 8005756:	f7fb f90d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD41A, 0x02);
 800575a:	2102      	movs	r1, #2
 800575c:	f24d 401a 	movw	r0, #54298	@ 0xd41a
 8005760:	f7fb f908 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD41B, 0x01);
 8005764:	2101      	movs	r1, #1
 8005766:	f24d 401b 	movw	r0, #54299	@ 0xd41b
 800576a:	f7fb f903 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD41C, 0x02);
 800576e:	2102      	movs	r1, #2
 8005770:	f24d 401c 	movw	r0, #54300	@ 0xd41c
 8005774:	f7fb f8fe 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD41D, 0x34);
 8005778:	2134      	movs	r1, #52	@ 0x34
 800577a:	f24d 401d 	movw	r0, #54301	@ 0xd41d
 800577e:	f7fb f8f9 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD41E, 0x02);
 8005782:	2102      	movs	r1, #2
 8005784:	f24d 401e 	movw	r0, #54302	@ 0xd41e
 8005788:	f7fb f8f4 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD41F, 0x67);
 800578c:	2167      	movs	r1, #103	@ 0x67
 800578e:	f24d 401f 	movw	r0, #54303	@ 0xd41f
 8005792:	f7fb f8ef 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD420, 0x02);
 8005796:	2102      	movs	r1, #2
 8005798:	f24d 4020 	movw	r0, #54304	@ 0xd420
 800579c:	f7fb f8ea 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD421, 0x84);
 80057a0:	2184      	movs	r1, #132	@ 0x84
 80057a2:	f24d 4021 	movw	r0, #54305	@ 0xd421
 80057a6:	f7fb f8e5 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD422, 0x02);
 80057aa:	2102      	movs	r1, #2
 80057ac:	f24d 4022 	movw	r0, #54306	@ 0xd422
 80057b0:	f7fb f8e0 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD423, 0xA4);
 80057b4:	21a4      	movs	r1, #164	@ 0xa4
 80057b6:	f24d 4023 	movw	r0, #54307	@ 0xd423
 80057ba:	f7fb f8db 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD424, 0x02);
 80057be:	2102      	movs	r1, #2
 80057c0:	f24d 4024 	movw	r0, #54308	@ 0xd424
 80057c4:	f7fb f8d6 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD425, 0xB7);
 80057c8:	21b7      	movs	r1, #183	@ 0xb7
 80057ca:	f24d 4025 	movw	r0, #54309	@ 0xd425
 80057ce:	f7fb f8d1 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD426, 0x02);
 80057d2:	2102      	movs	r1, #2
 80057d4:	f24d 4026 	movw	r0, #54310	@ 0xd426
 80057d8:	f7fb f8cc 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD427, 0xCF);
 80057dc:	21cf      	movs	r1, #207	@ 0xcf
 80057de:	f24d 4027 	movw	r0, #54311	@ 0xd427
 80057e2:	f7fb f8c7 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD428, 0x02);
 80057e6:	2102      	movs	r1, #2
 80057e8:	f24d 4028 	movw	r0, #54312	@ 0xd428
 80057ec:	f7fb f8c2 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD429, 0xDE);
 80057f0:	21de      	movs	r1, #222	@ 0xde
 80057f2:	f24d 4029 	movw	r0, #54313	@ 0xd429
 80057f6:	f7fb f8bd 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD42A, 0x02);
 80057fa:	2102      	movs	r1, #2
 80057fc:	f24d 402a 	movw	r0, #54314	@ 0xd42a
 8005800:	f7fb f8b8 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD42B, 0xF2);
 8005804:	21f2      	movs	r1, #242	@ 0xf2
 8005806:	f24d 402b 	movw	r0, #54315	@ 0xd42b
 800580a:	f7fb f8b3 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD42C, 0x02);
 800580e:	2102      	movs	r1, #2
 8005810:	f24d 402c 	movw	r0, #54316	@ 0xd42c
 8005814:	f7fb f8ae 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD42D, 0xFE);
 8005818:	21fe      	movs	r1, #254	@ 0xfe
 800581a:	f24d 402d 	movw	r0, #54317	@ 0xd42d
 800581e:	f7fb f8a9 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD42E, 0x03);
 8005822:	2103      	movs	r1, #3
 8005824:	f24d 402e 	movw	r0, #54318	@ 0xd42e
 8005828:	f7fb f8a4 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD42F, 0x10);
 800582c:	2110      	movs	r1, #16
 800582e:	f24d 402f 	movw	r0, #54319	@ 0xd42f
 8005832:	f7fb f89f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD430, 0x03);
 8005836:	2103      	movs	r1, #3
 8005838:	f24d 4030 	movw	r0, #54320	@ 0xd430
 800583c:	f7fb f89a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD431, 0x33);
 8005840:	2133      	movs	r1, #51	@ 0x33
 8005842:	f24d 4031 	movw	r0, #54321	@ 0xd431
 8005846:	f7fb f895 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD432, 0x03);
 800584a:	2103      	movs	r1, #3
 800584c:	f24d 4032 	movw	r0, #54322	@ 0xd432
 8005850:	f7fb f890 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD433, 0x6D);
 8005854:	216d      	movs	r1, #109	@ 0x6d
 8005856:	f24d 4033 	movw	r0, #54323	@ 0xd433
 800585a:	f7fb f88b 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD500, 0x00);
 800585e:	2100      	movs	r1, #0
 8005860:	f44f 4055 	mov.w	r0, #54528	@ 0xd500
 8005864:	f7fb f886 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD501, 0x33);
 8005868:	2133      	movs	r1, #51	@ 0x33
 800586a:	f24d 5001 	movw	r0, #54529	@ 0xd501
 800586e:	f7fb f881 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD502, 0x00);
 8005872:	2100      	movs	r1, #0
 8005874:	f24d 5002 	movw	r0, #54530	@ 0xd502
 8005878:	f7fb f87c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD503, 0x34);
 800587c:	2134      	movs	r1, #52	@ 0x34
 800587e:	f24d 5003 	movw	r0, #54531	@ 0xd503
 8005882:	f7fb f877 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD504, 0x00);
 8005886:	2100      	movs	r1, #0
 8005888:	f24d 5004 	movw	r0, #54532	@ 0xd504
 800588c:	f7fb f872 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD505, 0x3A);
 8005890:	213a      	movs	r1, #58	@ 0x3a
 8005892:	f24d 5005 	movw	r0, #54533	@ 0xd505
 8005896:	f7fb f86d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD506, 0x00);
 800589a:	2100      	movs	r1, #0
 800589c:	f24d 5006 	movw	r0, #54534	@ 0xd506
 80058a0:	f7fb f868 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD507, 0x4A);
 80058a4:	214a      	movs	r1, #74	@ 0x4a
 80058a6:	f24d 5007 	movw	r0, #54535	@ 0xd507
 80058aa:	f7fb f863 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD508, 0x00);
 80058ae:	2100      	movs	r1, #0
 80058b0:	f24d 5008 	movw	r0, #54536	@ 0xd508
 80058b4:	f7fb f85e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD509, 0x5C);
 80058b8:	215c      	movs	r1, #92	@ 0x5c
 80058ba:	f24d 5009 	movw	r0, #54537	@ 0xd509
 80058be:	f7fb f859 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD50A, 0x00);
 80058c2:	2100      	movs	r1, #0
 80058c4:	f24d 500a 	movw	r0, #54538	@ 0xd50a
 80058c8:	f7fb f854 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD50B, 0x81);
 80058cc:	2181      	movs	r1, #129	@ 0x81
 80058ce:	f24d 500b 	movw	r0, #54539	@ 0xd50b
 80058d2:	f7fb f84f 	bl	8000974 <lcd_write_reg>

        lcd_write_reg(0xD50C, 0x00);
 80058d6:	2100      	movs	r1, #0
 80058d8:	f24d 500c 	movw	r0, #54540	@ 0xd50c
 80058dc:	f7fb f84a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD50D, 0xA6);
 80058e0:	21a6      	movs	r1, #166	@ 0xa6
 80058e2:	f24d 500d 	movw	r0, #54541	@ 0xd50d
 80058e6:	f7fb f845 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD50E, 0x00);
 80058ea:	2100      	movs	r1, #0
 80058ec:	f24d 500e 	movw	r0, #54542	@ 0xd50e
 80058f0:	f7fb f840 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD50F, 0xE5);
 80058f4:	21e5      	movs	r1, #229	@ 0xe5
 80058f6:	f24d 500f 	movw	r0, #54543	@ 0xd50f
 80058fa:	f7fb f83b 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD510, 0x01);
 80058fe:	2101      	movs	r1, #1
 8005900:	f24d 5010 	movw	r0, #54544	@ 0xd510
 8005904:	f7fb f836 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD511, 0x13);
 8005908:	2113      	movs	r1, #19
 800590a:	f24d 5011 	movw	r0, #54545	@ 0xd511
 800590e:	f7fb f831 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD512, 0x01);
 8005912:	2101      	movs	r1, #1
 8005914:	f24d 5012 	movw	r0, #54546	@ 0xd512
 8005918:	f7fb f82c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD513, 0x54);
 800591c:	2154      	movs	r1, #84	@ 0x54
 800591e:	f24d 5013 	movw	r0, #54547	@ 0xd513
 8005922:	f7fb f827 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD514, 0x01);
 8005926:	2101      	movs	r1, #1
 8005928:	f24d 5014 	movw	r0, #54548	@ 0xd514
 800592c:	f7fb f822 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD515, 0x82);
 8005930:	2182      	movs	r1, #130	@ 0x82
 8005932:	f24d 5015 	movw	r0, #54549	@ 0xd515
 8005936:	f7fb f81d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD516, 0x01);
 800593a:	2101      	movs	r1, #1
 800593c:	f24d 5016 	movw	r0, #54550	@ 0xd516
 8005940:	f7fb f818 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD517, 0xCA);
 8005944:	21ca      	movs	r1, #202	@ 0xca
 8005946:	f24d 5017 	movw	r0, #54551	@ 0xd517
 800594a:	f7fb f813 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD518, 0x02);
 800594e:	2102      	movs	r1, #2
 8005950:	f24d 5018 	movw	r0, #54552	@ 0xd518
 8005954:	f7fb f80e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD519, 0x00);
 8005958:	2100      	movs	r1, #0
 800595a:	f24d 5019 	movw	r0, #54553	@ 0xd519
 800595e:	f7fb f809 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD51A, 0x02);
 8005962:	2102      	movs	r1, #2
 8005964:	f24d 501a 	movw	r0, #54554	@ 0xd51a
 8005968:	f7fb f804 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD51B, 0x01);
 800596c:	2101      	movs	r1, #1
 800596e:	f24d 501b 	movw	r0, #54555	@ 0xd51b
 8005972:	f7fa ffff 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD51C, 0x02);
 8005976:	2102      	movs	r1, #2
 8005978:	f24d 501c 	movw	r0, #54556	@ 0xd51c
 800597c:	f7fa fffa 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD51D, 0x34);
 8005980:	2134      	movs	r1, #52	@ 0x34
 8005982:	f24d 501d 	movw	r0, #54557	@ 0xd51d
 8005986:	f7fa fff5 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD51E, 0x02);
 800598a:	2102      	movs	r1, #2
 800598c:	f24d 501e 	movw	r0, #54558	@ 0xd51e
 8005990:	f7fa fff0 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD51F, 0x67);
 8005994:	2167      	movs	r1, #103	@ 0x67
 8005996:	f24d 501f 	movw	r0, #54559	@ 0xd51f
 800599a:	f7fa ffeb 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD520, 0x02);
 800599e:	2102      	movs	r1, #2
 80059a0:	f24d 5020 	movw	r0, #54560	@ 0xd520
 80059a4:	f7fa ffe6 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD521, 0x84);
 80059a8:	2184      	movs	r1, #132	@ 0x84
 80059aa:	f24d 5021 	movw	r0, #54561	@ 0xd521
 80059ae:	f7fa ffe1 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD522, 0x02);
 80059b2:	2102      	movs	r1, #2
 80059b4:	f24d 5022 	movw	r0, #54562	@ 0xd522
 80059b8:	f7fa ffdc 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD523, 0xA4);
 80059bc:	21a4      	movs	r1, #164	@ 0xa4
 80059be:	f24d 5023 	movw	r0, #54563	@ 0xd523
 80059c2:	f7fa ffd7 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD524, 0x02);
 80059c6:	2102      	movs	r1, #2
 80059c8:	f24d 5024 	movw	r0, #54564	@ 0xd524
 80059cc:	f7fa ffd2 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD525, 0xB7);
 80059d0:	21b7      	movs	r1, #183	@ 0xb7
 80059d2:	f24d 5025 	movw	r0, #54565	@ 0xd525
 80059d6:	f7fa ffcd 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD526, 0x02);
 80059da:	2102      	movs	r1, #2
 80059dc:	f24d 5026 	movw	r0, #54566	@ 0xd526
 80059e0:	f7fa ffc8 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD527, 0xCF);
 80059e4:	21cf      	movs	r1, #207	@ 0xcf
 80059e6:	f24d 5027 	movw	r0, #54567	@ 0xd527
 80059ea:	f7fa ffc3 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD528, 0x02);
 80059ee:	2102      	movs	r1, #2
 80059f0:	f24d 5028 	movw	r0, #54568	@ 0xd528
 80059f4:	f7fa ffbe 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD529, 0xDE);
 80059f8:	21de      	movs	r1, #222	@ 0xde
 80059fa:	f24d 5029 	movw	r0, #54569	@ 0xd529
 80059fe:	f7fa ffb9 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD52A, 0x02);
 8005a02:	2102      	movs	r1, #2
 8005a04:	f24d 502a 	movw	r0, #54570	@ 0xd52a
 8005a08:	f7fa ffb4 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD52B, 0xF2);
 8005a0c:	21f2      	movs	r1, #242	@ 0xf2
 8005a0e:	f24d 502b 	movw	r0, #54571	@ 0xd52b
 8005a12:	f7fa ffaf 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD52C, 0x02);
 8005a16:	2102      	movs	r1, #2
 8005a18:	f24d 502c 	movw	r0, #54572	@ 0xd52c
 8005a1c:	f7fa ffaa 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD52D, 0xFE);
 8005a20:	21fe      	movs	r1, #254	@ 0xfe
 8005a22:	f24d 502d 	movw	r0, #54573	@ 0xd52d
 8005a26:	f7fa ffa5 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD52E, 0x03);
 8005a2a:	2103      	movs	r1, #3
 8005a2c:	f24d 502e 	movw	r0, #54574	@ 0xd52e
 8005a30:	f7fa ffa0 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD52F, 0x10);
 8005a34:	2110      	movs	r1, #16
 8005a36:	f24d 502f 	movw	r0, #54575	@ 0xd52f
 8005a3a:	f7fa ff9b 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD530, 0x03);
 8005a3e:	2103      	movs	r1, #3
 8005a40:	f24d 5030 	movw	r0, #54576	@ 0xd530
 8005a44:	f7fa ff96 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD531, 0x33);
 8005a48:	2133      	movs	r1, #51	@ 0x33
 8005a4a:	f24d 5031 	movw	r0, #54577	@ 0xd531
 8005a4e:	f7fa ff91 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD532, 0x03);
 8005a52:	2103      	movs	r1, #3
 8005a54:	f24d 5032 	movw	r0, #54578	@ 0xd532
 8005a58:	f7fa ff8c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD533, 0x6D);
 8005a5c:	216d      	movs	r1, #109	@ 0x6d
 8005a5e:	f24d 5033 	movw	r0, #54579	@ 0xd533
 8005a62:	f7fa ff87 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD600, 0x00);
 8005a66:	2100      	movs	r1, #0
 8005a68:	f44f 4056 	mov.w	r0, #54784	@ 0xd600
 8005a6c:	f7fa ff82 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD601, 0x33);
 8005a70:	2133      	movs	r1, #51	@ 0x33
 8005a72:	f24d 6001 	movw	r0, #54785	@ 0xd601
 8005a76:	f7fa ff7d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD602, 0x00);
 8005a7a:	2100      	movs	r1, #0
 8005a7c:	f24d 6002 	movw	r0, #54786	@ 0xd602
 8005a80:	f7fa ff78 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD603, 0x34);
 8005a84:	2134      	movs	r1, #52	@ 0x34
 8005a86:	f24d 6003 	movw	r0, #54787	@ 0xd603
 8005a8a:	f7fa ff73 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD604, 0x00);
 8005a8e:	2100      	movs	r1, #0
 8005a90:	f24d 6004 	movw	r0, #54788	@ 0xd604
 8005a94:	f7fa ff6e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD605, 0x3A);
 8005a98:	213a      	movs	r1, #58	@ 0x3a
 8005a9a:	f24d 6005 	movw	r0, #54789	@ 0xd605
 8005a9e:	f7fa ff69 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD606, 0x00);
 8005aa2:	2100      	movs	r1, #0
 8005aa4:	f24d 6006 	movw	r0, #54790	@ 0xd606
 8005aa8:	f7fa ff64 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD607, 0x4A);
 8005aac:	214a      	movs	r1, #74	@ 0x4a
 8005aae:	f24d 6007 	movw	r0, #54791	@ 0xd607
 8005ab2:	f7fa ff5f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD608, 0x00);
 8005ab6:	2100      	movs	r1, #0
 8005ab8:	f24d 6008 	movw	r0, #54792	@ 0xd608
 8005abc:	f7fa ff5a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD609, 0x5C);
 8005ac0:	215c      	movs	r1, #92	@ 0x5c
 8005ac2:	f24d 6009 	movw	r0, #54793	@ 0xd609
 8005ac6:	f7fa ff55 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD60A, 0x00);
 8005aca:	2100      	movs	r1, #0
 8005acc:	f24d 600a 	movw	r0, #54794	@ 0xd60a
 8005ad0:	f7fa ff50 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD60B, 0x81);
 8005ad4:	2181      	movs	r1, #129	@ 0x81
 8005ad6:	f24d 600b 	movw	r0, #54795	@ 0xd60b
 8005ada:	f7fa ff4b 	bl	8000974 <lcd_write_reg>

        lcd_write_reg(0xD60C, 0x00);
 8005ade:	2100      	movs	r1, #0
 8005ae0:	f24d 600c 	movw	r0, #54796	@ 0xd60c
 8005ae4:	f7fa ff46 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD60D, 0xA6);
 8005ae8:	21a6      	movs	r1, #166	@ 0xa6
 8005aea:	f24d 600d 	movw	r0, #54797	@ 0xd60d
 8005aee:	f7fa ff41 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD60E, 0x00);
 8005af2:	2100      	movs	r1, #0
 8005af4:	f24d 600e 	movw	r0, #54798	@ 0xd60e
 8005af8:	f7fa ff3c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD60F, 0xE5);
 8005afc:	21e5      	movs	r1, #229	@ 0xe5
 8005afe:	f24d 600f 	movw	r0, #54799	@ 0xd60f
 8005b02:	f7fa ff37 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD610, 0x01);
 8005b06:	2101      	movs	r1, #1
 8005b08:	f24d 6010 	movw	r0, #54800	@ 0xd610
 8005b0c:	f7fa ff32 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD611, 0x13);
 8005b10:	2113      	movs	r1, #19
 8005b12:	f24d 6011 	movw	r0, #54801	@ 0xd611
 8005b16:	f7fa ff2d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD612, 0x01);
 8005b1a:	2101      	movs	r1, #1
 8005b1c:	f24d 6012 	movw	r0, #54802	@ 0xd612
 8005b20:	f7fa ff28 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD613, 0x54);
 8005b24:	2154      	movs	r1, #84	@ 0x54
 8005b26:	f24d 6013 	movw	r0, #54803	@ 0xd613
 8005b2a:	f7fa ff23 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD614, 0x01);
 8005b2e:	2101      	movs	r1, #1
 8005b30:	f24d 6014 	movw	r0, #54804	@ 0xd614
 8005b34:	f7fa ff1e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD615, 0x82);
 8005b38:	2182      	movs	r1, #130	@ 0x82
 8005b3a:	f24d 6015 	movw	r0, #54805	@ 0xd615
 8005b3e:	f7fa ff19 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD616, 0x01);
 8005b42:	2101      	movs	r1, #1
 8005b44:	f24d 6016 	movw	r0, #54806	@ 0xd616
 8005b48:	f7fa ff14 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD617, 0xCA);
 8005b4c:	21ca      	movs	r1, #202	@ 0xca
 8005b4e:	f24d 6017 	movw	r0, #54807	@ 0xd617
 8005b52:	f7fa ff0f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD618, 0x02);
 8005b56:	2102      	movs	r1, #2
 8005b58:	f24d 6018 	movw	r0, #54808	@ 0xd618
 8005b5c:	f7fa ff0a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD619, 0x00);
 8005b60:	2100      	movs	r1, #0
 8005b62:	f24d 6019 	movw	r0, #54809	@ 0xd619
 8005b66:	f7fa ff05 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD61A, 0x02);
 8005b6a:	2102      	movs	r1, #2
 8005b6c:	f24d 601a 	movw	r0, #54810	@ 0xd61a
 8005b70:	f7fa ff00 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD61B, 0x01);
 8005b74:	2101      	movs	r1, #1
 8005b76:	f24d 601b 	movw	r0, #54811	@ 0xd61b
 8005b7a:	f7fa fefb 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD61C, 0x02);
 8005b7e:	2102      	movs	r1, #2
 8005b80:	f24d 601c 	movw	r0, #54812	@ 0xd61c
 8005b84:	f7fa fef6 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD61D, 0x34);
 8005b88:	2134      	movs	r1, #52	@ 0x34
 8005b8a:	f24d 601d 	movw	r0, #54813	@ 0xd61d
 8005b8e:	f7fa fef1 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD61E, 0x02);
 8005b92:	2102      	movs	r1, #2
 8005b94:	f24d 601e 	movw	r0, #54814	@ 0xd61e
 8005b98:	f7fa feec 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD61F, 0x67);
 8005b9c:	2167      	movs	r1, #103	@ 0x67
 8005b9e:	f24d 601f 	movw	r0, #54815	@ 0xd61f
 8005ba2:	f7fa fee7 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD620, 0x02);
 8005ba6:	2102      	movs	r1, #2
 8005ba8:	f24d 6020 	movw	r0, #54816	@ 0xd620
 8005bac:	f7fa fee2 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD621, 0x84);
 8005bb0:	2184      	movs	r1, #132	@ 0x84
 8005bb2:	f24d 6021 	movw	r0, #54817	@ 0xd621
 8005bb6:	f7fa fedd 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD622, 0x02);
 8005bba:	2102      	movs	r1, #2
 8005bbc:	f24d 6022 	movw	r0, #54818	@ 0xd622
 8005bc0:	f7fa fed8 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD623, 0xA4);
 8005bc4:	21a4      	movs	r1, #164	@ 0xa4
 8005bc6:	f24d 6023 	movw	r0, #54819	@ 0xd623
 8005bca:	f7fa fed3 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD624, 0x02);
 8005bce:	2102      	movs	r1, #2
 8005bd0:	f24d 6024 	movw	r0, #54820	@ 0xd624
 8005bd4:	f7fa fece 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD625, 0xB7);
 8005bd8:	21b7      	movs	r1, #183	@ 0xb7
 8005bda:	f24d 6025 	movw	r0, #54821	@ 0xd625
 8005bde:	f7fa fec9 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD626, 0x02);
 8005be2:	2102      	movs	r1, #2
 8005be4:	f24d 6026 	movw	r0, #54822	@ 0xd626
 8005be8:	f7fa fec4 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD627, 0xCF);
 8005bec:	21cf      	movs	r1, #207	@ 0xcf
 8005bee:	f24d 6027 	movw	r0, #54823	@ 0xd627
 8005bf2:	f7fa febf 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD628, 0x02);
 8005bf6:	2102      	movs	r1, #2
 8005bf8:	f24d 6028 	movw	r0, #54824	@ 0xd628
 8005bfc:	f7fa feba 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD629, 0xDE);
 8005c00:	21de      	movs	r1, #222	@ 0xde
 8005c02:	f24d 6029 	movw	r0, #54825	@ 0xd629
 8005c06:	f7fa feb5 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD62A, 0x02);
 8005c0a:	2102      	movs	r1, #2
 8005c0c:	f24d 602a 	movw	r0, #54826	@ 0xd62a
 8005c10:	f7fa feb0 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD62B, 0xF2);
 8005c14:	21f2      	movs	r1, #242	@ 0xf2
 8005c16:	f24d 602b 	movw	r0, #54827	@ 0xd62b
 8005c1a:	f7fa feab 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD62C, 0x02);
 8005c1e:	2102      	movs	r1, #2
 8005c20:	f24d 602c 	movw	r0, #54828	@ 0xd62c
 8005c24:	f7fa fea6 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD62D, 0xFE);
 8005c28:	21fe      	movs	r1, #254	@ 0xfe
 8005c2a:	f24d 602d 	movw	r0, #54829	@ 0xd62d
 8005c2e:	f7fa fea1 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD62E, 0x03);
 8005c32:	2103      	movs	r1, #3
 8005c34:	f24d 602e 	movw	r0, #54830	@ 0xd62e
 8005c38:	f7fa fe9c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD62F, 0x10);
 8005c3c:	2110      	movs	r1, #16
 8005c3e:	f24d 602f 	movw	r0, #54831	@ 0xd62f
 8005c42:	f7fa fe97 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD630, 0x03);
 8005c46:	2103      	movs	r1, #3
 8005c48:	f24d 6030 	movw	r0, #54832	@ 0xd630
 8005c4c:	f7fa fe92 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD631, 0x33);
 8005c50:	2133      	movs	r1, #51	@ 0x33
 8005c52:	f24d 6031 	movw	r0, #54833	@ 0xd631
 8005c56:	f7fa fe8d 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD632, 0x03);
 8005c5a:	2103      	movs	r1, #3
 8005c5c:	f24d 6032 	movw	r0, #54834	@ 0xd632
 8005c60:	f7fa fe88 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xD633, 0x6D);
 8005c64:	216d      	movs	r1, #109	@ 0x6d
 8005c66:	f24d 6033 	movw	r0, #54835	@ 0xd633
 8005c6a:	f7fa fe83 	bl	8000974 <lcd_write_reg>
        /* LV2 Page 0 enable */
        lcd_write_reg(0xF000, 0x55);
 8005c6e:	2155      	movs	r1, #85	@ 0x55
 8005c70:	f44f 4070 	mov.w	r0, #61440	@ 0xf000
 8005c74:	f7fa fe7e 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xF001, 0xAA);
 8005c78:	21aa      	movs	r1, #170	@ 0xaa
 8005c7a:	f24f 0001 	movw	r0, #61441	@ 0xf001
 8005c7e:	f7fa fe79 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xF002, 0x52);
 8005c82:	2152      	movs	r1, #82	@ 0x52
 8005c84:	f24f 0002 	movw	r0, #61442	@ 0xf002
 8005c88:	f7fa fe74 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xF003, 0x08);
 8005c8c:	2108      	movs	r1, #8
 8005c8e:	f24f 0003 	movw	r0, #61443	@ 0xf003
 8005c92:	f7fa fe6f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xF004, 0x00);
 8005c96:	2100      	movs	r1, #0
 8005c98:	f24f 0004 	movw	r0, #61444	@ 0xf004
 8005c9c:	f7fa fe6a 	bl	8000974 <lcd_write_reg>
        /* Display control */
        lcd_write_reg(0xB100, 0xCC);
 8005ca0:	21cc      	movs	r1, #204	@ 0xcc
 8005ca2:	f44f 4031 	mov.w	r0, #45312	@ 0xb100
 8005ca6:	f7fa fe65 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB101, 0x00);
 8005caa:	2100      	movs	r1, #0
 8005cac:	f24b 1001 	movw	r0, #45313	@ 0xb101
 8005cb0:	f7fa fe60 	bl	8000974 <lcd_write_reg>
        /* Source hold time */
        lcd_write_reg(0xB600, 0x05);
 8005cb4:	2105      	movs	r1, #5
 8005cb6:	f44f 4036 	mov.w	r0, #46592	@ 0xb600
 8005cba:	f7fa fe5b 	bl	8000974 <lcd_write_reg>
        /* Gate EQ control */
        lcd_write_reg(0xB700, 0x70);
 8005cbe:	2170      	movs	r1, #112	@ 0x70
 8005cc0:	f44f 4037 	mov.w	r0, #46848	@ 0xb700
 8005cc4:	f7fa fe56 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB701, 0x70);
 8005cc8:	2170      	movs	r1, #112	@ 0x70
 8005cca:	f24b 7001 	movw	r0, #46849	@ 0xb701
 8005cce:	f7fa fe51 	bl	8000974 <lcd_write_reg>
        /* Source EQ control (Mode 2) */
        lcd_write_reg(0xB800, 0x01);
 8005cd2:	2101      	movs	r1, #1
 8005cd4:	f44f 4038 	mov.w	r0, #47104	@ 0xb800
 8005cd8:	f7fa fe4c 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB801, 0x03);
 8005cdc:	2103      	movs	r1, #3
 8005cde:	f64b 0001 	movw	r0, #47105	@ 0xb801
 8005ce2:	f7fa fe47 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB802, 0x03);
 8005ce6:	2103      	movs	r1, #3
 8005ce8:	f64b 0002 	movw	r0, #47106	@ 0xb802
 8005cec:	f7fa fe42 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xB803, 0x03);
 8005cf0:	2103      	movs	r1, #3
 8005cf2:	f64b 0003 	movw	r0, #47107	@ 0xb803
 8005cf6:	f7fa fe3d 	bl	8000974 <lcd_write_reg>
        /* Inversion mode (2-dot) */
        lcd_write_reg(0xBC00, 0x02);
 8005cfa:	2102      	movs	r1, #2
 8005cfc:	f44f 403c 	mov.w	r0, #48128	@ 0xbc00
 8005d00:	f7fa fe38 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xBC01, 0x00);
 8005d04:	2100      	movs	r1, #0
 8005d06:	f64b 4001 	movw	r0, #48129	@ 0xbc01
 8005d0a:	f7fa fe33 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xBC02, 0x00);
 8005d0e:	2100      	movs	r1, #0
 8005d10:	f64b 4002 	movw	r0, #48130	@ 0xbc02
 8005d14:	f7fa fe2e 	bl	8000974 <lcd_write_reg>
        /* Timing control 4H w/ 4-delay */
        lcd_write_reg(0xC900, 0xD0);
 8005d18:	21d0      	movs	r1, #208	@ 0xd0
 8005d1a:	f44f 4049 	mov.w	r0, #51456	@ 0xc900
 8005d1e:	f7fa fe29 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xC901, 0x02);
 8005d22:	2102      	movs	r1, #2
 8005d24:	f64c 1001 	movw	r0, #51457	@ 0xc901
 8005d28:	f7fa fe24 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xC902, 0x50);
 8005d2c:	2150      	movs	r1, #80	@ 0x50
 8005d2e:	f64c 1002 	movw	r0, #51458	@ 0xc902
 8005d32:	f7fa fe1f 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xC903, 0x50);
 8005d36:	2150      	movs	r1, #80	@ 0x50
 8005d38:	f64c 1003 	movw	r0, #51459	@ 0xc903
 8005d3c:	f7fa fe1a 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0xC904, 0x50);
 8005d40:	2150      	movs	r1, #80	@ 0x50
 8005d42:	f64c 1004 	movw	r0, #51460	@ 0xc904
 8005d46:	f7fa fe15 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0x3500, 0x00);
 8005d4a:	2100      	movs	r1, #0
 8005d4c:	f44f 5054 	mov.w	r0, #13568	@ 0x3500
 8005d50:	f7fa fe10 	bl	8000974 <lcd_write_reg>
        lcd_write_reg(0x3A00, 0x55); /* 16-bit/pixel */
 8005d54:	2155      	movs	r1, #85	@ 0x55
 8005d56:	f44f 5068 	mov.w	r0, #14848	@ 0x3a00
 8005d5a:	f7fa fe0b 	bl	8000974 <lcd_write_reg>
 8005d5e:	f44f 5388 	mov.w	r3, #4352	@ 0x1100
 8005d62:	f8a7 3106 	strh.w	r3, [r7, #262]	@ 0x106
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8005d66:	4b1b      	ldr	r3, [pc, #108]	@ (8005dd4 <lcd_init+0x422c>)
 8005d68:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8005d6c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8005d6e:	4b19      	ldr	r3, [pc, #100]	@ (8005dd4 <lcd_init+0x422c>)
 8005d70:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8005d74:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8005d76:	f8b7 3106 	ldrh.w	r3, [r7, #262]	@ 0x106
 8005d7a:	b29a      	uxth	r2, r3
 8005d7c:	4b16      	ldr	r3, [pc, #88]	@ (8005dd8 <lcd_init+0x4230>)
 8005d7e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8005d80:	4b14      	ldr	r3, [pc, #80]	@ (8005dd4 <lcd_init+0x422c>)
 8005d82:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8005d86:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8005d88:	4b12      	ldr	r3, [pc, #72]	@ (8005dd4 <lcd_init+0x422c>)
 8005d8a:	2280      	movs	r2, #128	@ 0x80
 8005d8c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8005d8e:	4b11      	ldr	r3, [pc, #68]	@ (8005dd4 <lcd_init+0x422c>)
 8005d90:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005d94:	611a      	str	r2, [r3, #16]
}
 8005d96:	bf00      	nop
 8005d98:	f44f 5324 	mov.w	r3, #10496	@ 0x2900
 8005d9c:	f8a7 3104 	strh.w	r3, [r7, #260]	@ 0x104
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8005da0:	4b0c      	ldr	r3, [pc, #48]	@ (8005dd4 <lcd_init+0x422c>)
 8005da2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8005da6:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8005da8:	4b0a      	ldr	r3, [pc, #40]	@ (8005dd4 <lcd_init+0x422c>)
 8005daa:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8005dae:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8005db0:	f8b7 3104 	ldrh.w	r3, [r7, #260]	@ 0x104
 8005db4:	b29a      	uxth	r2, r3
 8005db6:	4b08      	ldr	r3, [pc, #32]	@ (8005dd8 <lcd_init+0x4230>)
 8005db8:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8005dba:	4b06      	ldr	r3, [pc, #24]	@ (8005dd4 <lcd_init+0x422c>)
 8005dbc:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8005dc0:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8005dc2:	4b04      	ldr	r3, [pc, #16]	@ (8005dd4 <lcd_init+0x422c>)
 8005dc4:	2280      	movs	r2, #128	@ 0x80
 8005dc6:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8005dc8:	4b02      	ldr	r3, [pc, #8]	@ (8005dd4 <lcd_init+0x422c>)
 8005dca:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005dce:	611a      	str	r2, [r3, #16]
}
 8005dd0:	f000 be33 	b.w	8006a3a <lcd_init+0x4e92>
 8005dd4:	40011000 	.word	0x40011000
 8005dd8:	40010c00 	.word	0x40010c00
        lcd_wr_regno(0x1100);
        //delay_us(120);
        lcd_wr_regno(0x2900);
    }
    else if (lcddev.id == 0x9806)
 8005ddc:	4bc3      	ldr	r3, [pc, #780]	@ (80060ec <lcd_init+0x4544>)
 8005dde:	889b      	ldrh	r3, [r3, #4]
 8005de0:	f649 0206 	movw	r2, #38918	@ 0x9806
 8005de4:	4293      	cmp	r3, r2
 8005de6:	f040 8407 	bne.w	80065f8 <lcd_init+0x4a50>
 8005dea:	23ff      	movs	r3, #255	@ 0xff
 8005dec:	f8a7 3136 	strh.w	r3, [r7, #310]	@ 0x136
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8005df0:	4bbf      	ldr	r3, [pc, #764]	@ (80060f0 <lcd_init+0x4548>)
 8005df2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8005df6:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8005df8:	4bbd      	ldr	r3, [pc, #756]	@ (80060f0 <lcd_init+0x4548>)
 8005dfa:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8005dfe:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8005e00:	f8b7 3136 	ldrh.w	r3, [r7, #310]	@ 0x136
 8005e04:	b29a      	uxth	r2, r3
 8005e06:	4bbb      	ldr	r3, [pc, #748]	@ (80060f4 <lcd_init+0x454c>)
 8005e08:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8005e0a:	4bb9      	ldr	r3, [pc, #740]	@ (80060f0 <lcd_init+0x4548>)
 8005e0c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8005e10:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8005e12:	4bb7      	ldr	r3, [pc, #732]	@ (80060f0 <lcd_init+0x4548>)
 8005e14:	2280      	movs	r2, #128	@ 0x80
 8005e16:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8005e18:	4bb5      	ldr	r3, [pc, #724]	@ (80060f0 <lcd_init+0x4548>)
 8005e1a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005e1e:	611a      	str	r2, [r3, #16]
}
 8005e20:	bf00      	nop
    {
       // lcd_ex_ili9806_reginit();   /* ִ��ILI9806��ʼ�� */
        lcd_wr_regno(0xFF); /* EXTC Command Set enable register */
        lcd_wr_xdata(0xFF);
 8005e22:	20ff      	movs	r0, #255	@ 0xff
 8005e24:	f7fa fd82 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x98);
 8005e28:	2098      	movs	r0, #152	@ 0x98
 8005e2a:	f7fa fd7f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x06);
 8005e2e:	2006      	movs	r0, #6
 8005e30:	f7fa fd7c 	bl	800092c <lcd_wr_xdata>
 8005e34:	23bc      	movs	r3, #188	@ 0xbc
 8005e36:	f8a7 3134 	strh.w	r3, [r7, #308]	@ 0x134
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8005e3a:	4bad      	ldr	r3, [pc, #692]	@ (80060f0 <lcd_init+0x4548>)
 8005e3c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8005e40:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8005e42:	4bab      	ldr	r3, [pc, #684]	@ (80060f0 <lcd_init+0x4548>)
 8005e44:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8005e48:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8005e4a:	f8b7 3134 	ldrh.w	r3, [r7, #308]	@ 0x134
 8005e4e:	b29a      	uxth	r2, r3
 8005e50:	4ba8      	ldr	r3, [pc, #672]	@ (80060f4 <lcd_init+0x454c>)
 8005e52:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8005e54:	4ba6      	ldr	r3, [pc, #664]	@ (80060f0 <lcd_init+0x4548>)
 8005e56:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8005e5a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8005e5c:	4ba4      	ldr	r3, [pc, #656]	@ (80060f0 <lcd_init+0x4548>)
 8005e5e:	2280      	movs	r2, #128	@ 0x80
 8005e60:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8005e62:	4ba3      	ldr	r3, [pc, #652]	@ (80060f0 <lcd_init+0x4548>)
 8005e64:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005e68:	611a      	str	r2, [r3, #16]
}
 8005e6a:	bf00      	nop

        lcd_wr_regno(0xBC); /* GIP 1 */
        lcd_wr_xdata(0x01);
 8005e6c:	2001      	movs	r0, #1
 8005e6e:	f7fa fd5d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0F);
 8005e72:	200f      	movs	r0, #15
 8005e74:	f7fa fd5a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x61);
 8005e78:	2061      	movs	r0, #97	@ 0x61
 8005e7a:	f7fa fd57 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xFF);
 8005e7e:	20ff      	movs	r0, #255	@ 0xff
 8005e80:	f7fa fd54 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01);
 8005e84:	2001      	movs	r0, #1
 8005e86:	f7fa fd51 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01);
 8005e8a:	2001      	movs	r0, #1
 8005e8c:	f7fa fd4e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0B);
 8005e90:	200b      	movs	r0, #11
 8005e92:	f7fa fd4b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x10);
 8005e96:	2010      	movs	r0, #16
 8005e98:	f7fa fd48 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x37);
 8005e9c:	2037      	movs	r0, #55	@ 0x37
 8005e9e:	f7fa fd45 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x63);
 8005ea2:	2063      	movs	r0, #99	@ 0x63
 8005ea4:	f7fa fd42 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xFF);
 8005ea8:	20ff      	movs	r0, #255	@ 0xff
 8005eaa:	f7fa fd3f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xFF);
 8005eae:	20ff      	movs	r0, #255	@ 0xff
 8005eb0:	f7fa fd3c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01);
 8005eb4:	2001      	movs	r0, #1
 8005eb6:	f7fa fd39 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01);
 8005eba:	2001      	movs	r0, #1
 8005ebc:	f7fa fd36 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8005ec0:	2000      	movs	r0, #0
 8005ec2:	f7fa fd33 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8005ec6:	2000      	movs	r0, #0
 8005ec8:	f7fa fd30 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xFF);
 8005ecc:	20ff      	movs	r0, #255	@ 0xff
 8005ece:	f7fa fd2d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x52);
 8005ed2:	2052      	movs	r0, #82	@ 0x52
 8005ed4:	f7fa fd2a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01);
 8005ed8:	2001      	movs	r0, #1
 8005eda:	f7fa fd27 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8005ede:	2000      	movs	r0, #0
 8005ee0:	f7fa fd24 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x40);
 8005ee4:	2040      	movs	r0, #64	@ 0x40
 8005ee6:	f7fa fd21 	bl	800092c <lcd_wr_xdata>
 8005eea:	23bd      	movs	r3, #189	@ 0xbd
 8005eec:	f8a7 3132 	strh.w	r3, [r7, #306]	@ 0x132
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8005ef0:	4b7f      	ldr	r3, [pc, #508]	@ (80060f0 <lcd_init+0x4548>)
 8005ef2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8005ef6:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8005ef8:	4b7d      	ldr	r3, [pc, #500]	@ (80060f0 <lcd_init+0x4548>)
 8005efa:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8005efe:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8005f00:	f8b7 3132 	ldrh.w	r3, [r7, #306]	@ 0x132
 8005f04:	b29a      	uxth	r2, r3
 8005f06:	4b7b      	ldr	r3, [pc, #492]	@ (80060f4 <lcd_init+0x454c>)
 8005f08:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8005f0a:	4b79      	ldr	r3, [pc, #484]	@ (80060f0 <lcd_init+0x4548>)
 8005f0c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8005f10:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8005f12:	4b77      	ldr	r3, [pc, #476]	@ (80060f0 <lcd_init+0x4548>)
 8005f14:	2280      	movs	r2, #128	@ 0x80
 8005f16:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8005f18:	4b75      	ldr	r3, [pc, #468]	@ (80060f0 <lcd_init+0x4548>)
 8005f1a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005f1e:	611a      	str	r2, [r3, #16]
}
 8005f20:	bf00      	nop

        lcd_wr_regno(0xBD); /* GIP 2 */
        lcd_wr_xdata(0x01);
 8005f22:	2001      	movs	r0, #1
 8005f24:	f7fa fd02 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x23);
 8005f28:	2023      	movs	r0, #35	@ 0x23
 8005f2a:	f7fa fcff 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x45);
 8005f2e:	2045      	movs	r0, #69	@ 0x45
 8005f30:	f7fa fcfc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x67);
 8005f34:	2067      	movs	r0, #103	@ 0x67
 8005f36:	f7fa fcf9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01);
 8005f3a:	2001      	movs	r0, #1
 8005f3c:	f7fa fcf6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x23);
 8005f40:	2023      	movs	r0, #35	@ 0x23
 8005f42:	f7fa fcf3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x45);
 8005f46:	2045      	movs	r0, #69	@ 0x45
 8005f48:	f7fa fcf0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x67);
 8005f4c:	2067      	movs	r0, #103	@ 0x67
 8005f4e:	f7fa fced 	bl	800092c <lcd_wr_xdata>
 8005f52:	23be      	movs	r3, #190	@ 0xbe
 8005f54:	f8a7 3130 	strh.w	r3, [r7, #304]	@ 0x130
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8005f58:	4b65      	ldr	r3, [pc, #404]	@ (80060f0 <lcd_init+0x4548>)
 8005f5a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8005f5e:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8005f60:	4b63      	ldr	r3, [pc, #396]	@ (80060f0 <lcd_init+0x4548>)
 8005f62:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8005f66:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8005f68:	f8b7 3130 	ldrh.w	r3, [r7, #304]	@ 0x130
 8005f6c:	b29a      	uxth	r2, r3
 8005f6e:	4b61      	ldr	r3, [pc, #388]	@ (80060f4 <lcd_init+0x454c>)
 8005f70:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8005f72:	4b5f      	ldr	r3, [pc, #380]	@ (80060f0 <lcd_init+0x4548>)
 8005f74:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8005f78:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8005f7a:	4b5d      	ldr	r3, [pc, #372]	@ (80060f0 <lcd_init+0x4548>)
 8005f7c:	2280      	movs	r2, #128	@ 0x80
 8005f7e:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8005f80:	4b5b      	ldr	r3, [pc, #364]	@ (80060f0 <lcd_init+0x4548>)
 8005f82:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005f86:	611a      	str	r2, [r3, #16]
}
 8005f88:	bf00      	nop

        lcd_wr_regno(0xBE); /* GIP 3 */
        lcd_wr_xdata(0x00);
 8005f8a:	2000      	movs	r0, #0
 8005f8c:	f7fa fcce 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01);
 8005f90:	2001      	movs	r0, #1
 8005f92:	f7fa fccb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xAB);
 8005f96:	20ab      	movs	r0, #171	@ 0xab
 8005f98:	f7fa fcc8 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x60);
 8005f9c:	2060      	movs	r0, #96	@ 0x60
 8005f9e:	f7fa fcc5 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x22);
 8005fa2:	2022      	movs	r0, #34	@ 0x22
 8005fa4:	f7fa fcc2 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x22);
 8005fa8:	2022      	movs	r0, #34	@ 0x22
 8005faa:	f7fa fcbf 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x22);
 8005fae:	2022      	movs	r0, #34	@ 0x22
 8005fb0:	f7fa fcbc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x22);
 8005fb4:	2022      	movs	r0, #34	@ 0x22
 8005fb6:	f7fa fcb9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x22);
 8005fba:	2022      	movs	r0, #34	@ 0x22
 8005fbc:	f7fa fcb6 	bl	800092c <lcd_wr_xdata>
 8005fc0:	23c7      	movs	r3, #199	@ 0xc7
 8005fc2:	f8a7 312e 	strh.w	r3, [r7, #302]	@ 0x12e
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8005fc6:	4b4a      	ldr	r3, [pc, #296]	@ (80060f0 <lcd_init+0x4548>)
 8005fc8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8005fcc:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8005fce:	4b48      	ldr	r3, [pc, #288]	@ (80060f0 <lcd_init+0x4548>)
 8005fd0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8005fd4:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8005fd6:	f8b7 312e 	ldrh.w	r3, [r7, #302]	@ 0x12e
 8005fda:	b29a      	uxth	r2, r3
 8005fdc:	4b45      	ldr	r3, [pc, #276]	@ (80060f4 <lcd_init+0x454c>)
 8005fde:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8005fe0:	4b43      	ldr	r3, [pc, #268]	@ (80060f0 <lcd_init+0x4548>)
 8005fe2:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8005fe6:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8005fe8:	4b41      	ldr	r3, [pc, #260]	@ (80060f0 <lcd_init+0x4548>)
 8005fea:	2280      	movs	r2, #128	@ 0x80
 8005fec:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8005fee:	4b40      	ldr	r3, [pc, #256]	@ (80060f0 <lcd_init+0x4548>)
 8005ff0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005ff4:	611a      	str	r2, [r3, #16]
}
 8005ff6:	bf00      	nop

        lcd_wr_regno(0xC7); /* VCOM Control */
        lcd_wr_xdata(0x36);
 8005ff8:	2036      	movs	r0, #54	@ 0x36
 8005ffa:	f7fa fc97 	bl	800092c <lcd_wr_xdata>
 8005ffe:	23ed      	movs	r3, #237	@ 0xed
 8006000:	f8a7 312c 	strh.w	r3, [r7, #300]	@ 0x12c
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006004:	4b3a      	ldr	r3, [pc, #232]	@ (80060f0 <lcd_init+0x4548>)
 8006006:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800600a:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800600c:	4b38      	ldr	r3, [pc, #224]	@ (80060f0 <lcd_init+0x4548>)
 800600e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006012:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006014:	f8b7 312c 	ldrh.w	r3, [r7, #300]	@ 0x12c
 8006018:	b29a      	uxth	r2, r3
 800601a:	4b36      	ldr	r3, [pc, #216]	@ (80060f4 <lcd_init+0x454c>)
 800601c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800601e:	4b34      	ldr	r3, [pc, #208]	@ (80060f0 <lcd_init+0x4548>)
 8006020:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006024:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006026:	4b32      	ldr	r3, [pc, #200]	@ (80060f0 <lcd_init+0x4548>)
 8006028:	2280      	movs	r2, #128	@ 0x80
 800602a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800602c:	4b30      	ldr	r3, [pc, #192]	@ (80060f0 <lcd_init+0x4548>)
 800602e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006032:	611a      	str	r2, [r3, #16]
}
 8006034:	bf00      	nop

        lcd_wr_regno(0xED); /* EN_volt_reg VGMP / VGMN /VGSP / VGSN voltage to output */
        lcd_wr_xdata(0x7F);
 8006036:	207f      	movs	r0, #127	@ 0x7f
 8006038:	f7fa fc78 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0F);
 800603c:	200f      	movs	r0, #15
 800603e:	f7fa fc75 	bl	800092c <lcd_wr_xdata>
 8006042:	23c0      	movs	r3, #192	@ 0xc0
 8006044:	f8a7 312a 	strh.w	r3, [r7, #298]	@ 0x12a
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006048:	4b29      	ldr	r3, [pc, #164]	@ (80060f0 <lcd_init+0x4548>)
 800604a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800604e:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006050:	4b27      	ldr	r3, [pc, #156]	@ (80060f0 <lcd_init+0x4548>)
 8006052:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006056:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006058:	f8b7 312a 	ldrh.w	r3, [r7, #298]	@ 0x12a
 800605c:	b29a      	uxth	r2, r3
 800605e:	4b25      	ldr	r3, [pc, #148]	@ (80060f4 <lcd_init+0x454c>)
 8006060:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006062:	4b23      	ldr	r3, [pc, #140]	@ (80060f0 <lcd_init+0x4548>)
 8006064:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006068:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800606a:	4b21      	ldr	r3, [pc, #132]	@ (80060f0 <lcd_init+0x4548>)
 800606c:	2280      	movs	r2, #128	@ 0x80
 800606e:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006070:	4b1f      	ldr	r3, [pc, #124]	@ (80060f0 <lcd_init+0x4548>)
 8006072:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006076:	611a      	str	r2, [r3, #16]
}
 8006078:	bf00      	nop

        lcd_wr_regno(0XC0); /* Power Control 1 Setting AVDD / AVEE / VGH / VGL */
        lcd_wr_xdata(0x0F);
 800607a:	200f      	movs	r0, #15
 800607c:	f7fa fc56 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0B);
 8006080:	200b      	movs	r0, #11
 8006082:	f7fa fc53 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0A);  /* VGH 15V,VGLO-10V */
 8006086:	200a      	movs	r0, #10
 8006088:	f7fa fc50 	bl	800092c <lcd_wr_xdata>
 800608c:	23fc      	movs	r3, #252	@ 0xfc
 800608e:	f8a7 3128 	strh.w	r3, [r7, #296]	@ 0x128
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006092:	4b17      	ldr	r3, [pc, #92]	@ (80060f0 <lcd_init+0x4548>)
 8006094:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006098:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800609a:	4b15      	ldr	r3, [pc, #84]	@ (80060f0 <lcd_init+0x4548>)
 800609c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80060a0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80060a2:	f8b7 3128 	ldrh.w	r3, [r7, #296]	@ 0x128
 80060a6:	b29a      	uxth	r2, r3
 80060a8:	4b12      	ldr	r3, [pc, #72]	@ (80060f4 <lcd_init+0x454c>)
 80060aa:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80060ac:	4b10      	ldr	r3, [pc, #64]	@ (80060f0 <lcd_init+0x4548>)
 80060ae:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80060b2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80060b4:	4b0e      	ldr	r3, [pc, #56]	@ (80060f0 <lcd_init+0x4548>)
 80060b6:	2280      	movs	r2, #128	@ 0x80
 80060b8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80060ba:	4b0d      	ldr	r3, [pc, #52]	@ (80060f0 <lcd_init+0x4548>)
 80060bc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80060c0:	611a      	str	r2, [r3, #16]
}
 80060c2:	bf00      	nop

        lcd_wr_regno(0XFC); /* AVDD / AVEE generated by internal pumping. */
        lcd_wr_xdata(0x08);
 80060c4:	2008      	movs	r0, #8
 80060c6:	f7fa fc31 	bl	800092c <lcd_wr_xdata>
 80060ca:	23df      	movs	r3, #223	@ 0xdf
 80060cc:	f8a7 3126 	strh.w	r3, [r7, #294]	@ 0x126
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80060d0:	4b07      	ldr	r3, [pc, #28]	@ (80060f0 <lcd_init+0x4548>)
 80060d2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80060d6:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80060d8:	4b05      	ldr	r3, [pc, #20]	@ (80060f0 <lcd_init+0x4548>)
 80060da:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80060de:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80060e0:	f8b7 3126 	ldrh.w	r3, [r7, #294]	@ 0x126
 80060e4:	b29a      	uxth	r2, r3
 80060e6:	4b03      	ldr	r3, [pc, #12]	@ (80060f4 <lcd_init+0x454c>)
 80060e8:	60da      	str	r2, [r3, #12]
 80060ea:	e005      	b.n	80060f8 <lcd_init+0x4550>
 80060ec:	2000002c 	.word	0x2000002c
 80060f0:	40011000 	.word	0x40011000
 80060f4:	40010c00 	.word	0x40010c00
    LCD_WR(0);
 80060f8:	4bc7      	ldr	r3, [pc, #796]	@ (8006418 <lcd_init+0x4870>)
 80060fa:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80060fe:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006100:	4bc5      	ldr	r3, [pc, #788]	@ (8006418 <lcd_init+0x4870>)
 8006102:	2280      	movs	r2, #128	@ 0x80
 8006104:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006106:	4bc4      	ldr	r3, [pc, #784]	@ (8006418 <lcd_init+0x4870>)
 8006108:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800610c:	611a      	str	r2, [r3, #16]
}
 800610e:	bf00      	nop

        lcd_wr_regno(0XDF);
        lcd_wr_xdata(0x00);
 8006110:	2000      	movs	r0, #0
 8006112:	f7fa fc0b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8006116:	2000      	movs	r0, #0
 8006118:	f7fa fc08 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800611c:	2000      	movs	r0, #0
 800611e:	f7fa fc05 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8006122:	2000      	movs	r0, #0
 8006124:	f7fa fc02 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8006128:	2000      	movs	r0, #0
 800612a:	f7fa fbff 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x20);
 800612e:	2020      	movs	r0, #32
 8006130:	f7fa fbfc 	bl	800092c <lcd_wr_xdata>
 8006134:	23f3      	movs	r3, #243	@ 0xf3
 8006136:	f8a7 3124 	strh.w	r3, [r7, #292]	@ 0x124
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800613a:	4bb7      	ldr	r3, [pc, #732]	@ (8006418 <lcd_init+0x4870>)
 800613c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006140:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006142:	4bb5      	ldr	r3, [pc, #724]	@ (8006418 <lcd_init+0x4870>)
 8006144:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006148:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800614a:	f8b7 3124 	ldrh.w	r3, [r7, #292]	@ 0x124
 800614e:	b29a      	uxth	r2, r3
 8006150:	4bb2      	ldr	r3, [pc, #712]	@ (800641c <lcd_init+0x4874>)
 8006152:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006154:	4bb0      	ldr	r3, [pc, #704]	@ (8006418 <lcd_init+0x4870>)
 8006156:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800615a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800615c:	4bae      	ldr	r3, [pc, #696]	@ (8006418 <lcd_init+0x4870>)
 800615e:	2280      	movs	r2, #128	@ 0x80
 8006160:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006162:	4bad      	ldr	r3, [pc, #692]	@ (8006418 <lcd_init+0x4870>)
 8006164:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006168:	611a      	str	r2, [r3, #16]
}
 800616a:	bf00      	nop

        lcd_wr_regno(0XF3); /* DVDD Voltage Setting */
        lcd_wr_xdata(0x74);
 800616c:	2074      	movs	r0, #116	@ 0x74
 800616e:	f7fa fbdd 	bl	800092c <lcd_wr_xdata>
 8006172:	23b4      	movs	r3, #180	@ 0xb4
 8006174:	f8a7 3122 	strh.w	r3, [r7, #290]	@ 0x122
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006178:	4ba7      	ldr	r3, [pc, #668]	@ (8006418 <lcd_init+0x4870>)
 800617a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800617e:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006180:	4ba5      	ldr	r3, [pc, #660]	@ (8006418 <lcd_init+0x4870>)
 8006182:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006186:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006188:	f8b7 3122 	ldrh.w	r3, [r7, #290]	@ 0x122
 800618c:	b29a      	uxth	r2, r3
 800618e:	4ba3      	ldr	r3, [pc, #652]	@ (800641c <lcd_init+0x4874>)
 8006190:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006192:	4ba1      	ldr	r3, [pc, #644]	@ (8006418 <lcd_init+0x4870>)
 8006194:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006198:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800619a:	4b9f      	ldr	r3, [pc, #636]	@ (8006418 <lcd_init+0x4870>)
 800619c:	2280      	movs	r2, #128	@ 0x80
 800619e:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80061a0:	4b9d      	ldr	r3, [pc, #628]	@ (8006418 <lcd_init+0x4870>)
 80061a2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80061a6:	611a      	str	r2, [r3, #16]
}
 80061a8:	bf00      	nop

        lcd_wr_regno(0xB4); /* Inversion Type */
        lcd_wr_xdata(0x00);  /* 02 */
 80061aa:	2000      	movs	r0, #0
 80061ac:	f7fa fbbe 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);  /* 02 */
 80061b0:	2000      	movs	r0, #0
 80061b2:	f7fa fbbb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);  /* 02 */
 80061b6:	2000      	movs	r0, #0
 80061b8:	f7fa fbb8 	bl	800092c <lcd_wr_xdata>
 80061bc:	23f7      	movs	r3, #247	@ 0xf7
 80061be:	f8a7 3120 	strh.w	r3, [r7, #288]	@ 0x120
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80061c2:	4b95      	ldr	r3, [pc, #596]	@ (8006418 <lcd_init+0x4870>)
 80061c4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80061c8:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80061ca:	4b93      	ldr	r3, [pc, #588]	@ (8006418 <lcd_init+0x4870>)
 80061cc:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80061d0:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80061d2:	f8b7 3120 	ldrh.w	r3, [r7, #288]	@ 0x120
 80061d6:	b29a      	uxth	r2, r3
 80061d8:	4b90      	ldr	r3, [pc, #576]	@ (800641c <lcd_init+0x4874>)
 80061da:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80061dc:	4b8e      	ldr	r3, [pc, #568]	@ (8006418 <lcd_init+0x4870>)
 80061de:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80061e2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80061e4:	4b8c      	ldr	r3, [pc, #560]	@ (8006418 <lcd_init+0x4870>)
 80061e6:	2280      	movs	r2, #128	@ 0x80
 80061e8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80061ea:	4b8b      	ldr	r3, [pc, #556]	@ (8006418 <lcd_init+0x4870>)
 80061ec:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80061f0:	611a      	str	r2, [r3, #16]
}
 80061f2:	bf00      	nop

        lcd_wr_regno(0xF7); /* Resolution Control */
        lcd_wr_xdata(0x82);  /* 480*800 */
 80061f4:	2082      	movs	r0, #130	@ 0x82
 80061f6:	f7fa fb99 	bl	800092c <lcd_wr_xdata>
 80061fa:	23b1      	movs	r3, #177	@ 0xb1
 80061fc:	f8a7 311e 	strh.w	r3, [r7, #286]	@ 0x11e
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006200:	4b85      	ldr	r3, [pc, #532]	@ (8006418 <lcd_init+0x4870>)
 8006202:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006206:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006208:	4b83      	ldr	r3, [pc, #524]	@ (8006418 <lcd_init+0x4870>)
 800620a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800620e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006210:	f8b7 311e 	ldrh.w	r3, [r7, #286]	@ 0x11e
 8006214:	b29a      	uxth	r2, r3
 8006216:	4b81      	ldr	r3, [pc, #516]	@ (800641c <lcd_init+0x4874>)
 8006218:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800621a:	4b7f      	ldr	r3, [pc, #508]	@ (8006418 <lcd_init+0x4870>)
 800621c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006220:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006222:	4b7d      	ldr	r3, [pc, #500]	@ (8006418 <lcd_init+0x4870>)
 8006224:	2280      	movs	r2, #128	@ 0x80
 8006226:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006228:	4b7b      	ldr	r3, [pc, #492]	@ (8006418 <lcd_init+0x4870>)
 800622a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800622e:	611a      	str	r2, [r3, #16]
}
 8006230:	bf00      	nop

        lcd_wr_regno(0xB1); /* FRAME RATE Setting */
        lcd_wr_xdata(0x00);
 8006232:	2000      	movs	r0, #0
 8006234:	f7fa fb7a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x13);
 8006238:	2013      	movs	r0, #19
 800623a:	f7fa fb77 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x13);
 800623e:	2013      	movs	r0, #19
 8006240:	f7fa fb74 	bl	800092c <lcd_wr_xdata>
 8006244:	23f2      	movs	r3, #242	@ 0xf2
 8006246:	f8a7 311c 	strh.w	r3, [r7, #284]	@ 0x11c
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800624a:	4b73      	ldr	r3, [pc, #460]	@ (8006418 <lcd_init+0x4870>)
 800624c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006250:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006252:	4b71      	ldr	r3, [pc, #452]	@ (8006418 <lcd_init+0x4870>)
 8006254:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006258:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800625a:	f8b7 311c 	ldrh.w	r3, [r7, #284]	@ 0x11c
 800625e:	b29a      	uxth	r2, r3
 8006260:	4b6e      	ldr	r3, [pc, #440]	@ (800641c <lcd_init+0x4874>)
 8006262:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006264:	4b6c      	ldr	r3, [pc, #432]	@ (8006418 <lcd_init+0x4870>)
 8006266:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800626a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800626c:	4b6a      	ldr	r3, [pc, #424]	@ (8006418 <lcd_init+0x4870>)
 800626e:	2280      	movs	r2, #128	@ 0x80
 8006270:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006272:	4b69      	ldr	r3, [pc, #420]	@ (8006418 <lcd_init+0x4870>)
 8006274:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006278:	611a      	str	r2, [r3, #16]
}
 800627a:	bf00      	nop

        lcd_wr_regno(0XF2); /* CR_EQ_PC_SDT  #C0,06,40,28 */
        lcd_wr_xdata(0x80);
 800627c:	2080      	movs	r0, #128	@ 0x80
 800627e:	f7fa fb55 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x04);
 8006282:	2004      	movs	r0, #4
 8006284:	f7fa fb52 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x40);
 8006288:	2040      	movs	r0, #64	@ 0x40
 800628a:	f7fa fb4f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x28);
 800628e:	2028      	movs	r0, #40	@ 0x28
 8006290:	f7fa fb4c 	bl	800092c <lcd_wr_xdata>
 8006294:	23c1      	movs	r3, #193	@ 0xc1
 8006296:	f8a7 311a 	strh.w	r3, [r7, #282]	@ 0x11a
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800629a:	4b5f      	ldr	r3, [pc, #380]	@ (8006418 <lcd_init+0x4870>)
 800629c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80062a0:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80062a2:	4b5d      	ldr	r3, [pc, #372]	@ (8006418 <lcd_init+0x4870>)
 80062a4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80062a8:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80062aa:	f8b7 311a 	ldrh.w	r3, [r7, #282]	@ 0x11a
 80062ae:	b29a      	uxth	r2, r3
 80062b0:	4b5a      	ldr	r3, [pc, #360]	@ (800641c <lcd_init+0x4874>)
 80062b2:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80062b4:	4b58      	ldr	r3, [pc, #352]	@ (8006418 <lcd_init+0x4870>)
 80062b6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80062ba:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80062bc:	4b56      	ldr	r3, [pc, #344]	@ (8006418 <lcd_init+0x4870>)
 80062be:	2280      	movs	r2, #128	@ 0x80
 80062c0:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80062c2:	4b55      	ldr	r3, [pc, #340]	@ (8006418 <lcd_init+0x4870>)
 80062c4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80062c8:	611a      	str	r2, [r3, #16]
}
 80062ca:	bf00      	nop

        lcd_wr_regno(0XC1); /* Power Control 2  SD OP Bias_VRH1_VRH2_EXT_CPCK_SEL */
        lcd_wr_xdata(0x17);
 80062cc:	2017      	movs	r0, #23
 80062ce:	f7fa fb2d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x88);  /* VGMP */
 80062d2:	2088      	movs	r0, #136	@ 0x88
 80062d4:	f7fa fb2a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x88);  /* VGMN */
 80062d8:	2088      	movs	r0, #136	@ 0x88
 80062da:	f7fa fb27 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x20);
 80062de:	2020      	movs	r0, #32
 80062e0:	f7fa fb24 	bl	800092c <lcd_wr_xdata>
 80062e4:	23e0      	movs	r3, #224	@ 0xe0
 80062e6:	f8a7 3118 	strh.w	r3, [r7, #280]	@ 0x118
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80062ea:	4b4b      	ldr	r3, [pc, #300]	@ (8006418 <lcd_init+0x4870>)
 80062ec:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80062f0:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80062f2:	4b49      	ldr	r3, [pc, #292]	@ (8006418 <lcd_init+0x4870>)
 80062f4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80062f8:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80062fa:	f8b7 3118 	ldrh.w	r3, [r7, #280]	@ 0x118
 80062fe:	b29a      	uxth	r2, r3
 8006300:	4b46      	ldr	r3, [pc, #280]	@ (800641c <lcd_init+0x4874>)
 8006302:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006304:	4b44      	ldr	r3, [pc, #272]	@ (8006418 <lcd_init+0x4870>)
 8006306:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800630a:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800630c:	4b42      	ldr	r3, [pc, #264]	@ (8006418 <lcd_init+0x4870>)
 800630e:	2280      	movs	r2, #128	@ 0x80
 8006310:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006312:	4b41      	ldr	r3, [pc, #260]	@ (8006418 <lcd_init+0x4870>)
 8006314:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006318:	611a      	str	r2, [r3, #16]
}
 800631a:	bf00      	nop

        lcd_wr_regno(0xE0); /* Positive Gamma Control */
        lcd_wr_xdata(0x00);  /* P1 */
 800631c:	2000      	movs	r0, #0
 800631e:	f7fa fb05 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0A);  /* P2 */
 8006322:	200a      	movs	r0, #10
 8006324:	f7fa fb02 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x12);  /* P3 */
 8006328:	2012      	movs	r0, #18
 800632a:	f7fa faff 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x10);  /* P4 */
 800632e:	2010      	movs	r0, #16
 8006330:	f7fa fafc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0E);  /* P5 */
 8006334:	200e      	movs	r0, #14
 8006336:	f7fa faf9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x20);  /* P6 */
 800633a:	2020      	movs	r0, #32
 800633c:	f7fa faf6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xCC);  /* P7 */
 8006340:	20cc      	movs	r0, #204	@ 0xcc
 8006342:	f7fa faf3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x07);  /* P8 */
 8006346:	2007      	movs	r0, #7
 8006348:	f7fa faf0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x06);  /* P9 */
 800634c:	2006      	movs	r0, #6
 800634e:	f7fa faed 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0B);  /* P10 */
 8006352:	200b      	movs	r0, #11
 8006354:	f7fa faea 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0E);  /* P11 */
 8006358:	200e      	movs	r0, #14
 800635a:	f7fa fae7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0F);  /* P12 */
 800635e:	200f      	movs	r0, #15
 8006360:	f7fa fae4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0D);  /* P13 */
 8006364:	200d      	movs	r0, #13
 8006366:	f7fa fae1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x15);  /* P14 */
 800636a:	2015      	movs	r0, #21
 800636c:	f7fa fade 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x10);  /* P15 */
 8006370:	2010      	movs	r0, #16
 8006372:	f7fa fadb 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);  /* P16 */
 8006376:	2000      	movs	r0, #0
 8006378:	f7fa fad8 	bl	800092c <lcd_wr_xdata>
 800637c:	23e1      	movs	r3, #225	@ 0xe1
 800637e:	f8a7 3116 	strh.w	r3, [r7, #278]	@ 0x116
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006382:	4b25      	ldr	r3, [pc, #148]	@ (8006418 <lcd_init+0x4870>)
 8006384:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006388:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800638a:	4b23      	ldr	r3, [pc, #140]	@ (8006418 <lcd_init+0x4870>)
 800638c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006390:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006392:	f8b7 3116 	ldrh.w	r3, [r7, #278]	@ 0x116
 8006396:	b29a      	uxth	r2, r3
 8006398:	4b20      	ldr	r3, [pc, #128]	@ (800641c <lcd_init+0x4874>)
 800639a:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800639c:	4b1e      	ldr	r3, [pc, #120]	@ (8006418 <lcd_init+0x4870>)
 800639e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80063a2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80063a4:	4b1c      	ldr	r3, [pc, #112]	@ (8006418 <lcd_init+0x4870>)
 80063a6:	2280      	movs	r2, #128	@ 0x80
 80063a8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80063aa:	4b1b      	ldr	r3, [pc, #108]	@ (8006418 <lcd_init+0x4870>)
 80063ac:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80063b0:	611a      	str	r2, [r3, #16]
}
 80063b2:	bf00      	nop

        lcd_wr_regno(0xE1); /* Negative Gamma Correction */
        lcd_wr_xdata(0x00);  /* P1 */
 80063b4:	2000      	movs	r0, #0
 80063b6:	f7fa fab9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0B);  /* P2 */
 80063ba:	200b      	movs	r0, #11
 80063bc:	f7fa fab6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x13);  /* P3 */
 80063c0:	2013      	movs	r0, #19
 80063c2:	f7fa fab3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0D);  /* P4 */
 80063c6:	200d      	movs	r0, #13
 80063c8:	f7fa fab0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0E);  /* P5 */
 80063cc:	200e      	movs	r0, #14
 80063ce:	f7fa faad 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x1B);  /* P6 */
 80063d2:	201b      	movs	r0, #27
 80063d4:	f7fa faaa 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x71);  /* P7 */
 80063d8:	2071      	movs	r0, #113	@ 0x71
 80063da:	f7fa faa7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x06);  /* P8 */
 80063de:	2006      	movs	r0, #6
 80063e0:	f7fa faa4 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x06);  /* P9 */
 80063e4:	2006      	movs	r0, #6
 80063e6:	f7fa faa1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0A);  /* P10 */
 80063ea:	200a      	movs	r0, #10
 80063ec:	f7fa fa9e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0F);  /* P11 */
 80063f0:	200f      	movs	r0, #15
 80063f2:	f7fa fa9b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0E);  /* P12 */
 80063f6:	200e      	movs	r0, #14
 80063f8:	f7fa fa98 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0F);  /* P13 */
 80063fc:	200f      	movs	r0, #15
 80063fe:	f7fa fa95 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x15);  /* P14 */
 8006402:	2015      	movs	r0, #21
 8006404:	f7fa fa92 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x0C);  /* P15 */
 8006408:	200c      	movs	r0, #12
 800640a:	f7fa fa8f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);  /* P16 */
 800640e:	2000      	movs	r0, #0
 8006410:	f7fa fa8c 	bl	800092c <lcd_wr_xdata>
 8006414:	e004      	b.n	8006420 <lcd_init+0x4878>
 8006416:	bf00      	nop
 8006418:	40011000 	.word	0x40011000
 800641c:	40010c00 	.word	0x40010c00
 8006420:	232a      	movs	r3, #42	@ 0x2a
 8006422:	f8a7 3114 	strh.w	r3, [r7, #276]	@ 0x114
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006426:	4b72      	ldr	r3, [pc, #456]	@ (80065f0 <lcd_init+0x4a48>)
 8006428:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800642c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800642e:	4b70      	ldr	r3, [pc, #448]	@ (80065f0 <lcd_init+0x4a48>)
 8006430:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006434:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006436:	f8b7 3114 	ldrh.w	r3, [r7, #276]	@ 0x114
 800643a:	b29a      	uxth	r2, r3
 800643c:	4b6d      	ldr	r3, [pc, #436]	@ (80065f4 <lcd_init+0x4a4c>)
 800643e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006440:	4b6b      	ldr	r3, [pc, #428]	@ (80065f0 <lcd_init+0x4a48>)
 8006442:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006446:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006448:	4b69      	ldr	r3, [pc, #420]	@ (80065f0 <lcd_init+0x4a48>)
 800644a:	2280      	movs	r2, #128	@ 0x80
 800644c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800644e:	4b68      	ldr	r3, [pc, #416]	@ (80065f0 <lcd_init+0x4a48>)
 8006450:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006454:	611a      	str	r2, [r3, #16]
}
 8006456:	bf00      	nop

        lcd_wr_regno(0x2a);
        lcd_wr_xdata(0x00);
 8006458:	2000      	movs	r0, #0
 800645a:	f7fa fa67 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800645e:	2000      	movs	r0, #0
 8006460:	f7fa fa64 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01);
 8006464:	2001      	movs	r0, #1
 8006466:	f7fa fa61 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xdf);
 800646a:	20df      	movs	r0, #223	@ 0xdf
 800646c:	f7fa fa5e 	bl	800092c <lcd_wr_xdata>
 8006470:	232b      	movs	r3, #43	@ 0x2b
 8006472:	f8a7 3112 	strh.w	r3, [r7, #274]	@ 0x112
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006476:	4b5e      	ldr	r3, [pc, #376]	@ (80065f0 <lcd_init+0x4a48>)
 8006478:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800647c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800647e:	4b5c      	ldr	r3, [pc, #368]	@ (80065f0 <lcd_init+0x4a48>)
 8006480:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006484:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006486:	f8b7 3112 	ldrh.w	r3, [r7, #274]	@ 0x112
 800648a:	b29a      	uxth	r2, r3
 800648c:	4b59      	ldr	r3, [pc, #356]	@ (80065f4 <lcd_init+0x4a4c>)
 800648e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006490:	4b57      	ldr	r3, [pc, #348]	@ (80065f0 <lcd_init+0x4a48>)
 8006492:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006496:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006498:	4b55      	ldr	r3, [pc, #340]	@ (80065f0 <lcd_init+0x4a48>)
 800649a:	2280      	movs	r2, #128	@ 0x80
 800649c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800649e:	4b54      	ldr	r3, [pc, #336]	@ (80065f0 <lcd_init+0x4a48>)
 80064a0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80064a4:	611a      	str	r2, [r3, #16]
}
 80064a6:	bf00      	nop

        lcd_wr_regno(0x2b);
        lcd_wr_xdata(0x00);
 80064a8:	2000      	movs	r0, #0
 80064aa:	f7fa fa3f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 80064ae:	2000      	movs	r0, #0
 80064b0:	f7fa fa3c 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x03);
 80064b4:	2003      	movs	r0, #3
 80064b6:	f7fa fa39 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x1f);
 80064ba:	201f      	movs	r0, #31
 80064bc:	f7fa fa36 	bl	800092c <lcd_wr_xdata>
 80064c0:	233a      	movs	r3, #58	@ 0x3a
 80064c2:	f8a7 3110 	strh.w	r3, [r7, #272]	@ 0x110
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80064c6:	4b4a      	ldr	r3, [pc, #296]	@ (80065f0 <lcd_init+0x4a48>)
 80064c8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80064cc:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80064ce:	4b48      	ldr	r3, [pc, #288]	@ (80065f0 <lcd_init+0x4a48>)
 80064d0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80064d4:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80064d6:	f8b7 3110 	ldrh.w	r3, [r7, #272]	@ 0x110
 80064da:	b29a      	uxth	r2, r3
 80064dc:	4b45      	ldr	r3, [pc, #276]	@ (80065f4 <lcd_init+0x4a4c>)
 80064de:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80064e0:	4b43      	ldr	r3, [pc, #268]	@ (80065f0 <lcd_init+0x4a48>)
 80064e2:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80064e6:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80064e8:	4b41      	ldr	r3, [pc, #260]	@ (80065f0 <lcd_init+0x4a48>)
 80064ea:	2280      	movs	r2, #128	@ 0x80
 80064ec:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80064ee:	4b40      	ldr	r3, [pc, #256]	@ (80065f0 <lcd_init+0x4a48>)
 80064f0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80064f4:	611a      	str	r2, [r3, #16]
}
 80064f6:	bf00      	nop

        lcd_wr_regno(0x3A); /* Pixel Format */
        lcd_wr_xdata(0x55);
 80064f8:	2055      	movs	r0, #85	@ 0x55
 80064fa:	f7fa fa17 	bl	800092c <lcd_wr_xdata>
 80064fe:	2336      	movs	r3, #54	@ 0x36
 8006500:	f8a7 310e 	strh.w	r3, [r7, #270]	@ 0x10e
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006504:	4b3a      	ldr	r3, [pc, #232]	@ (80065f0 <lcd_init+0x4a48>)
 8006506:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800650a:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800650c:	4b38      	ldr	r3, [pc, #224]	@ (80065f0 <lcd_init+0x4a48>)
 800650e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006512:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006514:	f8b7 310e 	ldrh.w	r3, [r7, #270]	@ 0x10e
 8006518:	b29a      	uxth	r2, r3
 800651a:	4b36      	ldr	r3, [pc, #216]	@ (80065f4 <lcd_init+0x4a4c>)
 800651c:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800651e:	4b34      	ldr	r3, [pc, #208]	@ (80065f0 <lcd_init+0x4a48>)
 8006520:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006524:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006526:	4b32      	ldr	r3, [pc, #200]	@ (80065f0 <lcd_init+0x4a48>)
 8006528:	2280      	movs	r2, #128	@ 0x80
 800652a:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800652c:	4b30      	ldr	r3, [pc, #192]	@ (80065f0 <lcd_init+0x4a48>)
 800652e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006532:	611a      	str	r2, [r3, #16]
}
 8006534:	bf00      	nop

        lcd_wr_regno(0x36); /* Memory Access Control */
        lcd_wr_xdata(0x00);  /* 02-180 */
 8006536:	2000      	movs	r0, #0
 8006538:	f7fa f9f8 	bl	800092c <lcd_wr_xdata>
 800653c:	2311      	movs	r3, #17
 800653e:	f8a7 310c 	strh.w	r3, [r7, #268]	@ 0x10c
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006542:	4b2b      	ldr	r3, [pc, #172]	@ (80065f0 <lcd_init+0x4a48>)
 8006544:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006548:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800654a:	4b29      	ldr	r3, [pc, #164]	@ (80065f0 <lcd_init+0x4a48>)
 800654c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006550:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006552:	f8b7 310c 	ldrh.w	r3, [r7, #268]	@ 0x10c
 8006556:	b29a      	uxth	r2, r3
 8006558:	4b26      	ldr	r3, [pc, #152]	@ (80065f4 <lcd_init+0x4a4c>)
 800655a:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800655c:	4b24      	ldr	r3, [pc, #144]	@ (80065f0 <lcd_init+0x4a48>)
 800655e:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006562:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006564:	4b22      	ldr	r3, [pc, #136]	@ (80065f0 <lcd_init+0x4a48>)
 8006566:	2280      	movs	r2, #128	@ 0x80
 8006568:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800656a:	4b21      	ldr	r3, [pc, #132]	@ (80065f0 <lcd_init+0x4a48>)
 800656c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006570:	611a      	str	r2, [r3, #16]
}
 8006572:	bf00      	nop

        lcd_wr_regno(0x11);
        HAL_Delay(120);
 8006574:	2078      	movs	r0, #120	@ 0x78
 8006576:	f000 ff9f 	bl	80074b8 <HAL_Delay>
 800657a:	2329      	movs	r3, #41	@ 0x29
 800657c:	f8a7 310a 	strh.w	r3, [r7, #266]	@ 0x10a
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006580:	4b1b      	ldr	r3, [pc, #108]	@ (80065f0 <lcd_init+0x4a48>)
 8006582:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006586:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006588:	4b19      	ldr	r3, [pc, #100]	@ (80065f0 <lcd_init+0x4a48>)
 800658a:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800658e:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006590:	f8b7 310a 	ldrh.w	r3, [r7, #266]	@ 0x10a
 8006594:	b29a      	uxth	r2, r3
 8006596:	4b17      	ldr	r3, [pc, #92]	@ (80065f4 <lcd_init+0x4a4c>)
 8006598:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 800659a:	4b15      	ldr	r3, [pc, #84]	@ (80065f0 <lcd_init+0x4a48>)
 800659c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80065a0:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80065a2:	4b13      	ldr	r3, [pc, #76]	@ (80065f0 <lcd_init+0x4a48>)
 80065a4:	2280      	movs	r2, #128	@ 0x80
 80065a6:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80065a8:	4b11      	ldr	r3, [pc, #68]	@ (80065f0 <lcd_init+0x4a48>)
 80065aa:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80065ae:	611a      	str	r2, [r3, #16]
}
 80065b0:	bf00      	nop
        lcd_wr_regno(0x29);
        HAL_Delay(20);
 80065b2:	2014      	movs	r0, #20
 80065b4:	f000 ff80 	bl	80074b8 <HAL_Delay>
 80065b8:	232c      	movs	r3, #44	@ 0x2c
 80065ba:	f8a7 3108 	strh.w	r3, [r7, #264]	@ 0x108
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80065be:	4b0c      	ldr	r3, [pc, #48]	@ (80065f0 <lcd_init+0x4a48>)
 80065c0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80065c4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80065c6:	4b0a      	ldr	r3, [pc, #40]	@ (80065f0 <lcd_init+0x4a48>)
 80065c8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80065cc:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80065ce:	f8b7 3108 	ldrh.w	r3, [r7, #264]	@ 0x108
 80065d2:	b29a      	uxth	r2, r3
 80065d4:	4b07      	ldr	r3, [pc, #28]	@ (80065f4 <lcd_init+0x4a4c>)
 80065d6:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80065d8:	4b05      	ldr	r3, [pc, #20]	@ (80065f0 <lcd_init+0x4a48>)
 80065da:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80065de:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80065e0:	4b03      	ldr	r3, [pc, #12]	@ (80065f0 <lcd_init+0x4a48>)
 80065e2:	2280      	movs	r2, #128	@ 0x80
 80065e4:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80065e6:	4b02      	ldr	r3, [pc, #8]	@ (80065f0 <lcd_init+0x4a48>)
 80065e8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80065ec:	611a      	str	r2, [r3, #16]
}
 80065ee:	e224      	b.n	8006a3a <lcd_init+0x4e92>
 80065f0:	40011000 	.word	0x40011000
 80065f4:	40010c00 	.word	0x40010c00
        lcd_wr_regno(0x2C);
    }
    else if (lcddev.id == 0x1963)
 80065f8:	4bbe      	ldr	r3, [pc, #760]	@ (80068f4 <lcd_init+0x4d4c>)
 80065fa:	889b      	ldrh	r3, [r3, #4]
 80065fc:	f641 1263 	movw	r2, #6499	@ 0x1963
 8006600:	4293      	cmp	r3, r2
 8006602:	f040 821a 	bne.w	8006a3a <lcd_init+0x4e92>
 8006606:	23e2      	movs	r3, #226	@ 0xe2
 8006608:	f8a7 3152 	strh.w	r3, [r7, #338]	@ 0x152
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800660c:	4bba      	ldr	r3, [pc, #744]	@ (80068f8 <lcd_init+0x4d50>)
 800660e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006612:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006614:	4bb8      	ldr	r3, [pc, #736]	@ (80068f8 <lcd_init+0x4d50>)
 8006616:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800661a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800661c:	f8b7 3152 	ldrh.w	r3, [r7, #338]	@ 0x152
 8006620:	b29a      	uxth	r2, r3
 8006622:	4bb6      	ldr	r3, [pc, #728]	@ (80068fc <lcd_init+0x4d54>)
 8006624:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006626:	4bb4      	ldr	r3, [pc, #720]	@ (80068f8 <lcd_init+0x4d50>)
 8006628:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800662c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800662e:	4bb2      	ldr	r3, [pc, #712]	@ (80068f8 <lcd_init+0x4d50>)
 8006630:	2280      	movs	r2, #128	@ 0x80
 8006632:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006634:	4bb0      	ldr	r3, [pc, #704]	@ (80068f8 <lcd_init+0x4d50>)
 8006636:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800663a:	611a      	str	r2, [r3, #16]
}
 800663c:	bf00      	nop
    {
        //lcd_ex_ssd1963_reginit();   /* ִ��SSD1963��ʼ�� */
        lcd_wr_regno(0xE2); /* Set PLL with OSC = 10MHz (hardware),	Multiplier N = 35, 250MHz < VCO < 800MHz = OSC*(N+1), VCO = 300MHz */
        lcd_wr_xdata(0x1D); /* ����1 */
 800663e:	201d      	movs	r0, #29
 8006640:	f7fa f974 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x02); /* ����2 Divider M = 2, PLL = 300/(M+1) = 100MHz */
 8006644:	2002      	movs	r0, #2
 8006646:	f7fa f971 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x04); /* ����3 Validate M and N values */
 800664a:	2004      	movs	r0, #4
 800664c:	f7fa f96e 	bl	800092c <lcd_wr_xdata>
 8006650:	23e0      	movs	r3, #224	@ 0xe0
 8006652:	f8a7 3150 	strh.w	r3, [r7, #336]	@ 0x150
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006656:	4ba8      	ldr	r3, [pc, #672]	@ (80068f8 <lcd_init+0x4d50>)
 8006658:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800665c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800665e:	4ba6      	ldr	r3, [pc, #664]	@ (80068f8 <lcd_init+0x4d50>)
 8006660:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006664:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006666:	f8b7 3150 	ldrh.w	r3, [r7, #336]	@ 0x150
 800666a:	b29a      	uxth	r2, r3
 800666c:	4ba3      	ldr	r3, [pc, #652]	@ (80068fc <lcd_init+0x4d54>)
 800666e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006670:	4ba1      	ldr	r3, [pc, #644]	@ (80068f8 <lcd_init+0x4d50>)
 8006672:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006676:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006678:	4b9f      	ldr	r3, [pc, #636]	@ (80068f8 <lcd_init+0x4d50>)
 800667a:	2280      	movs	r2, #128	@ 0x80
 800667c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800667e:	4b9e      	ldr	r3, [pc, #632]	@ (80068f8 <lcd_init+0x4d50>)
 8006680:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006684:	611a      	str	r2, [r3, #16]
}
 8006686:	bf00      	nop
        //delay_us(100);
        lcd_wr_regno(0xE0); /*  Start PLL command */
        lcd_wr_xdata(0x01); /*  enable PLL */
 8006688:	2001      	movs	r0, #1
 800668a:	f7fa f94f 	bl	800092c <lcd_wr_xdata>
        HAL_Delay(10);
 800668e:	200a      	movs	r0, #10
 8006690:	f000 ff12 	bl	80074b8 <HAL_Delay>
 8006694:	23e0      	movs	r3, #224	@ 0xe0
 8006696:	f8a7 314e 	strh.w	r3, [r7, #334]	@ 0x14e
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800669a:	4b97      	ldr	r3, [pc, #604]	@ (80068f8 <lcd_init+0x4d50>)
 800669c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80066a0:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80066a2:	4b95      	ldr	r3, [pc, #596]	@ (80068f8 <lcd_init+0x4d50>)
 80066a4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80066a8:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80066aa:	f8b7 314e 	ldrh.w	r3, [r7, #334]	@ 0x14e
 80066ae:	b29a      	uxth	r2, r3
 80066b0:	4b92      	ldr	r3, [pc, #584]	@ (80068fc <lcd_init+0x4d54>)
 80066b2:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80066b4:	4b90      	ldr	r3, [pc, #576]	@ (80068f8 <lcd_init+0x4d50>)
 80066b6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80066ba:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80066bc:	4b8e      	ldr	r3, [pc, #568]	@ (80068f8 <lcd_init+0x4d50>)
 80066be:	2280      	movs	r2, #128	@ 0x80
 80066c0:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80066c2:	4b8d      	ldr	r3, [pc, #564]	@ (80068f8 <lcd_init+0x4d50>)
 80066c4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80066c8:	611a      	str	r2, [r3, #16]
}
 80066ca:	bf00      	nop
        lcd_wr_regno(0xE0); /*  Start PLL command again */
        lcd_wr_xdata(0x03); /*  now, use PLL output as system clock */
 80066cc:	2003      	movs	r0, #3
 80066ce:	f7fa f92d 	bl	800092c <lcd_wr_xdata>
        HAL_Delay(12);
 80066d2:	200c      	movs	r0, #12
 80066d4:	f000 fef0 	bl	80074b8 <HAL_Delay>
 80066d8:	2301      	movs	r3, #1
 80066da:	f8a7 314c 	strh.w	r3, [r7, #332]	@ 0x14c
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80066de:	4b86      	ldr	r3, [pc, #536]	@ (80068f8 <lcd_init+0x4d50>)
 80066e0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80066e4:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80066e6:	4b84      	ldr	r3, [pc, #528]	@ (80068f8 <lcd_init+0x4d50>)
 80066e8:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80066ec:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80066ee:	f8b7 314c 	ldrh.w	r3, [r7, #332]	@ 0x14c
 80066f2:	b29a      	uxth	r2, r3
 80066f4:	4b81      	ldr	r3, [pc, #516]	@ (80068fc <lcd_init+0x4d54>)
 80066f6:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80066f8:	4b7f      	ldr	r3, [pc, #508]	@ (80068f8 <lcd_init+0x4d50>)
 80066fa:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80066fe:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006700:	4b7d      	ldr	r3, [pc, #500]	@ (80068f8 <lcd_init+0x4d50>)
 8006702:	2280      	movs	r2, #128	@ 0x80
 8006704:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006706:	4b7c      	ldr	r3, [pc, #496]	@ (80068f8 <lcd_init+0x4d50>)
 8006708:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800670c:	611a      	str	r2, [r3, #16]
}
 800670e:	bf00      	nop
        lcd_wr_regno(0x01); /* ��λ */
        HAL_Delay(10);
 8006710:	200a      	movs	r0, #10
 8006712:	f000 fed1 	bl	80074b8 <HAL_Delay>
 8006716:	23e6      	movs	r3, #230	@ 0xe6
 8006718:	f8a7 314a 	strh.w	r3, [r7, #330]	@ 0x14a
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800671c:	4b76      	ldr	r3, [pc, #472]	@ (80068f8 <lcd_init+0x4d50>)
 800671e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006722:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006724:	4b74      	ldr	r3, [pc, #464]	@ (80068f8 <lcd_init+0x4d50>)
 8006726:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800672a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800672c:	f8b7 314a 	ldrh.w	r3, [r7, #330]	@ 0x14a
 8006730:	b29a      	uxth	r2, r3
 8006732:	4b72      	ldr	r3, [pc, #456]	@ (80068fc <lcd_init+0x4d54>)
 8006734:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006736:	4b70      	ldr	r3, [pc, #448]	@ (80068f8 <lcd_init+0x4d50>)
 8006738:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800673c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800673e:	4b6e      	ldr	r3, [pc, #440]	@ (80068f8 <lcd_init+0x4d50>)
 8006740:	2280      	movs	r2, #128	@ 0x80
 8006742:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006744:	4b6c      	ldr	r3, [pc, #432]	@ (80068f8 <lcd_init+0x4d50>)
 8006746:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800674a:	611a      	str	r2, [r3, #16]
}
 800674c:	bf00      	nop

        lcd_wr_regno(0xE6); /* ��������Ƶ��,33Mhz */
        lcd_wr_xdata(0x2F);
 800674e:	202f      	movs	r0, #47	@ 0x2f
 8006750:	f7fa f8ec 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xFF);
 8006754:	20ff      	movs	r0, #255	@ 0xff
 8006756:	f7fa f8e9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xFF);
 800675a:	20ff      	movs	r0, #255	@ 0xff
 800675c:	f7fa f8e6 	bl	800092c <lcd_wr_xdata>
 8006760:	23b0      	movs	r3, #176	@ 0xb0
 8006762:	f8a7 3148 	strh.w	r3, [r7, #328]	@ 0x148
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006766:	4b64      	ldr	r3, [pc, #400]	@ (80068f8 <lcd_init+0x4d50>)
 8006768:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800676c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800676e:	4b62      	ldr	r3, [pc, #392]	@ (80068f8 <lcd_init+0x4d50>)
 8006770:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006774:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006776:	f8b7 3148 	ldrh.w	r3, [r7, #328]	@ 0x148
 800677a:	b29a      	uxth	r2, r3
 800677c:	4b5f      	ldr	r3, [pc, #380]	@ (80068fc <lcd_init+0x4d54>)
 800677e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006780:	4b5d      	ldr	r3, [pc, #372]	@ (80068f8 <lcd_init+0x4d50>)
 8006782:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006786:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006788:	4b5b      	ldr	r3, [pc, #364]	@ (80068f8 <lcd_init+0x4d50>)
 800678a:	2280      	movs	r2, #128	@ 0x80
 800678c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800678e:	4b5a      	ldr	r3, [pc, #360]	@ (80068f8 <lcd_init+0x4d50>)
 8006790:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006794:	611a      	str	r2, [r3, #16]
}
 8006796:	bf00      	nop

        lcd_wr_regno(0xB0); /* ����LCDģʽ */
        lcd_wr_xdata(0x20); /* 24λģʽ */
 8006798:	2020      	movs	r0, #32
 800679a:	f7fa f8c7 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00); /* TFT ģʽ */
 800679e:	2000      	movs	r0, #0
 80067a0:	f7fa f8c4 	bl	800092c <lcd_wr_xdata>

        lcd_wr_xdata((SSD_HOR_RESOLUTION - 1) >> 8); /* ����LCDˮƽ���� */
 80067a4:	2003      	movs	r0, #3
 80067a6:	f7fa f8c1 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(SSD_HOR_RESOLUTION - 1);
 80067aa:	f240 301f 	movw	r0, #799	@ 0x31f
 80067ae:	f7fa f8bd 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata((SSD_VER_RESOLUTION - 1) >> 8); /* ����LCD��ֱ���� */
 80067b2:	2001      	movs	r0, #1
 80067b4:	f7fa f8ba 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(SSD_VER_RESOLUTION - 1);
 80067b8:	f240 10df 	movw	r0, #479	@ 0x1df
 80067bc:	f7fa f8b6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);  /* RGB���� */
 80067c0:	2000      	movs	r0, #0
 80067c2:	f7fa f8b3 	bl	800092c <lcd_wr_xdata>
 80067c6:	23b4      	movs	r3, #180	@ 0xb4
 80067c8:	f8a7 3146 	strh.w	r3, [r7, #326]	@ 0x146
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80067cc:	4b4a      	ldr	r3, [pc, #296]	@ (80068f8 <lcd_init+0x4d50>)
 80067ce:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80067d2:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80067d4:	4b48      	ldr	r3, [pc, #288]	@ (80068f8 <lcd_init+0x4d50>)
 80067d6:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80067da:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80067dc:	f8b7 3146 	ldrh.w	r3, [r7, #326]	@ 0x146
 80067e0:	b29a      	uxth	r2, r3
 80067e2:	4b46      	ldr	r3, [pc, #280]	@ (80068fc <lcd_init+0x4d54>)
 80067e4:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80067e6:	4b44      	ldr	r3, [pc, #272]	@ (80068f8 <lcd_init+0x4d50>)
 80067e8:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80067ec:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80067ee:	4b42      	ldr	r3, [pc, #264]	@ (80068f8 <lcd_init+0x4d50>)
 80067f0:	2280      	movs	r2, #128	@ 0x80
 80067f2:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80067f4:	4b40      	ldr	r3, [pc, #256]	@ (80068f8 <lcd_init+0x4d50>)
 80067f6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80067fa:	611a      	str	r2, [r3, #16]
}
 80067fc:	bf00      	nop

        lcd_wr_regno(0xB4); /* Set horizontal period */
        lcd_wr_xdata((SSD_HT - 1) >> 8);
 80067fe:	2004      	movs	r0, #4
 8006800:	f7fa f894 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(SSD_HT - 1);
 8006804:	f240 401f 	movw	r0, #1055	@ 0x41f
 8006808:	f7fa f890 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(SSD_HPS >> 8);
 800680c:	2000      	movs	r0, #0
 800680e:	f7fa f88d 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(SSD_HPS);
 8006812:	202e      	movs	r0, #46	@ 0x2e
 8006814:	f7fa f88a 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(SSD_HOR_PULSE_WIDTH - 1);
 8006818:	2000      	movs	r0, #0
 800681a:	f7fa f887 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800681e:	2000      	movs	r0, #0
 8006820:	f7fa f884 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8006824:	2000      	movs	r0, #0
 8006826:	f7fa f881 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800682a:	2000      	movs	r0, #0
 800682c:	f7fa f87e 	bl	800092c <lcd_wr_xdata>
 8006830:	23b6      	movs	r3, #182	@ 0xb6
 8006832:	f8a7 3144 	strh.w	r3, [r7, #324]	@ 0x144
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006836:	4b30      	ldr	r3, [pc, #192]	@ (80068f8 <lcd_init+0x4d50>)
 8006838:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800683c:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 800683e:	4b2e      	ldr	r3, [pc, #184]	@ (80068f8 <lcd_init+0x4d50>)
 8006840:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006844:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006846:	f8b7 3144 	ldrh.w	r3, [r7, #324]	@ 0x144
 800684a:	b29a      	uxth	r2, r3
 800684c:	4b2b      	ldr	r3, [pc, #172]	@ (80068fc <lcd_init+0x4d54>)
 800684e:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006850:	4b29      	ldr	r3, [pc, #164]	@ (80068f8 <lcd_init+0x4d50>)
 8006852:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006856:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006858:	4b27      	ldr	r3, [pc, #156]	@ (80068f8 <lcd_init+0x4d50>)
 800685a:	2280      	movs	r2, #128	@ 0x80
 800685c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800685e:	4b26      	ldr	r3, [pc, #152]	@ (80068f8 <lcd_init+0x4d50>)
 8006860:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006864:	611a      	str	r2, [r3, #16]
}
 8006866:	bf00      	nop
        lcd_wr_regno(0xB6); /* Set vertical perio */
        lcd_wr_xdata((SSD_VT - 1) >> 8);
 8006868:	2002      	movs	r0, #2
 800686a:	f7fa f85f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(SSD_VT - 1);
 800686e:	f44f 7003 	mov.w	r0, #524	@ 0x20c
 8006872:	f7fa f85b 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(SSD_VPS >> 8);
 8006876:	2000      	movs	r0, #0
 8006878:	f7fa f858 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(SSD_VPS);
 800687c:	2017      	movs	r0, #23
 800687e:	f7fa f855 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(SSD_VER_FRONT_PORCH - 1);
 8006882:	2015      	movs	r0, #21
 8006884:	f7fa f852 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 8006888:	2000      	movs	r0, #0
 800688a:	f7fa f84f 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00);
 800688e:	2000      	movs	r0, #0
 8006890:	f7fa f84c 	bl	800092c <lcd_wr_xdata>
 8006894:	23f0      	movs	r3, #240	@ 0xf0
 8006896:	f8a7 3142 	strh.w	r3, [r7, #322]	@ 0x142
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800689a:	4b17      	ldr	r3, [pc, #92]	@ (80068f8 <lcd_init+0x4d50>)
 800689c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80068a0:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80068a2:	4b15      	ldr	r3, [pc, #84]	@ (80068f8 <lcd_init+0x4d50>)
 80068a4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80068a8:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80068aa:	f8b7 3142 	ldrh.w	r3, [r7, #322]	@ 0x142
 80068ae:	b29a      	uxth	r2, r3
 80068b0:	4b12      	ldr	r3, [pc, #72]	@ (80068fc <lcd_init+0x4d54>)
 80068b2:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80068b4:	4b10      	ldr	r3, [pc, #64]	@ (80068f8 <lcd_init+0x4d50>)
 80068b6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80068ba:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80068bc:	4b0e      	ldr	r3, [pc, #56]	@ (80068f8 <lcd_init+0x4d50>)
 80068be:	2280      	movs	r2, #128	@ 0x80
 80068c0:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80068c2:	4b0d      	ldr	r3, [pc, #52]	@ (80068f8 <lcd_init+0x4d50>)
 80068c4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80068c8:	611a      	str	r2, [r3, #16]
}
 80068ca:	bf00      	nop

        lcd_wr_regno(0xF0); /* ����SSD1963��CPU�ӿ�Ϊ16bit */
        lcd_wr_xdata(0x03); /* 16-bit(565 format) data for 16bpp */
 80068cc:	2003      	movs	r0, #3
 80068ce:	f7fa f82d 	bl	800092c <lcd_wr_xdata>
 80068d2:	2329      	movs	r3, #41	@ 0x29
 80068d4:	f8a7 3140 	strh.w	r3, [r7, #320]	@ 0x140
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80068d8:	4b07      	ldr	r3, [pc, #28]	@ (80068f8 <lcd_init+0x4d50>)
 80068da:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80068de:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80068e0:	4b05      	ldr	r3, [pc, #20]	@ (80068f8 <lcd_init+0x4d50>)
 80068e2:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80068e6:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80068e8:	f8b7 3140 	ldrh.w	r3, [r7, #320]	@ 0x140
 80068ec:	b29a      	uxth	r2, r3
 80068ee:	4b03      	ldr	r3, [pc, #12]	@ (80068fc <lcd_init+0x4d54>)
 80068f0:	60da      	str	r2, [r3, #12]
 80068f2:	e005      	b.n	8006900 <lcd_init+0x4d58>
 80068f4:	2000002c 	.word	0x2000002c
 80068f8:	40011000 	.word	0x40011000
 80068fc:	40010c00 	.word	0x40010c00
    LCD_WR(0);
 8006900:	4b56      	ldr	r3, [pc, #344]	@ (8006a5c <lcd_init+0x4eb4>)
 8006902:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006906:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006908:	4b54      	ldr	r3, [pc, #336]	@ (8006a5c <lcd_init+0x4eb4>)
 800690a:	2280      	movs	r2, #128	@ 0x80
 800690c:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 800690e:	4b53      	ldr	r3, [pc, #332]	@ (8006a5c <lcd_init+0x4eb4>)
 8006910:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006914:	611a      	str	r2, [r3, #16]
}
 8006916:	bf00      	nop
 8006918:	23d0      	movs	r3, #208	@ 0xd0
 800691a:	f8a7 313e 	strh.w	r3, [r7, #318]	@ 0x13e
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800691e:	4b4f      	ldr	r3, [pc, #316]	@ (8006a5c <lcd_init+0x4eb4>)
 8006920:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006924:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006926:	4b4d      	ldr	r3, [pc, #308]	@ (8006a5c <lcd_init+0x4eb4>)
 8006928:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800692c:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800692e:	f8b7 313e 	ldrh.w	r3, [r7, #318]	@ 0x13e
 8006932:	b29a      	uxth	r2, r3
 8006934:	4b4a      	ldr	r3, [pc, #296]	@ (8006a60 <lcd_init+0x4eb8>)
 8006936:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006938:	4b48      	ldr	r3, [pc, #288]	@ (8006a5c <lcd_init+0x4eb4>)
 800693a:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800693e:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006940:	4b46      	ldr	r3, [pc, #280]	@ (8006a5c <lcd_init+0x4eb4>)
 8006942:	2280      	movs	r2, #128	@ 0x80
 8006944:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006946:	4b45      	ldr	r3, [pc, #276]	@ (8006a5c <lcd_init+0x4eb4>)
 8006948:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800694c:	611a      	str	r2, [r3, #16]
}
 800694e:	bf00      	nop

        lcd_wr_regno(0x29); /* ������ʾ */
        /* ����PWM���  ����ͨ��ռ�ձȿɵ� */
        lcd_wr_regno(0xD0); /* �����Զ���ƽ��DBC */
        lcd_wr_xdata(0x00); /* disable */
 8006950:	2000      	movs	r0, #0
 8006952:	f7f9 ffeb 	bl	800092c <lcd_wr_xdata>
 8006956:	23be      	movs	r3, #190	@ 0xbe
 8006958:	f8a7 313c 	strh.w	r3, [r7, #316]	@ 0x13c
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 800695c:	4b3f      	ldr	r3, [pc, #252]	@ (8006a5c <lcd_init+0x4eb4>)
 800695e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006962:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006964:	4b3d      	ldr	r3, [pc, #244]	@ (8006a5c <lcd_init+0x4eb4>)
 8006966:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800696a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 800696c:	f8b7 313c 	ldrh.w	r3, [r7, #316]	@ 0x13c
 8006970:	b29a      	uxth	r2, r3
 8006972:	4b3b      	ldr	r3, [pc, #236]	@ (8006a60 <lcd_init+0x4eb8>)
 8006974:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006976:	4b39      	ldr	r3, [pc, #228]	@ (8006a5c <lcd_init+0x4eb4>)
 8006978:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 800697c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 800697e:	4b37      	ldr	r3, [pc, #220]	@ (8006a5c <lcd_init+0x4eb4>)
 8006980:	2280      	movs	r2, #128	@ 0x80
 8006982:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006984:	4b35      	ldr	r3, [pc, #212]	@ (8006a5c <lcd_init+0x4eb4>)
 8006986:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800698a:	611a      	str	r2, [r3, #16]
}
 800698c:	bf00      	nop

        lcd_wr_regno(0xBE); /* ����PWM��� */
        lcd_wr_xdata(0x05); /* 1����PWMƵ�� */
 800698e:	2005      	movs	r0, #5
 8006990:	f7f9 ffcc 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0xFE); /* 2����PWMռ�ձ� */
 8006994:	20fe      	movs	r0, #254	@ 0xfe
 8006996:	f7f9 ffc9 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01); /* 3����C */
 800699a:	2001      	movs	r0, #1
 800699c:	f7f9 ffc6 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00); /* 4����D */
 80069a0:	2000      	movs	r0, #0
 80069a2:	f7f9 ffc3 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00); /* 5����E */
 80069a6:	2000      	movs	r0, #0
 80069a8:	f7f9 ffc0 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x00); /* 6����F */
 80069ac:	2000      	movs	r0, #0
 80069ae:	f7f9 ffbd 	bl	800092c <lcd_wr_xdata>
 80069b2:	23b8      	movs	r3, #184	@ 0xb8
 80069b4:	f8a7 313a 	strh.w	r3, [r7, #314]	@ 0x13a
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80069b8:	4b28      	ldr	r3, [pc, #160]	@ (8006a5c <lcd_init+0x4eb4>)
 80069ba:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80069be:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 80069c0:	4b26      	ldr	r3, [pc, #152]	@ (8006a5c <lcd_init+0x4eb4>)
 80069c2:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80069c6:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 80069c8:	f8b7 313a 	ldrh.w	r3, [r7, #314]	@ 0x13a
 80069cc:	b29a      	uxth	r2, r3
 80069ce:	4b24      	ldr	r3, [pc, #144]	@ (8006a60 <lcd_init+0x4eb8>)
 80069d0:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 80069d2:	4b22      	ldr	r3, [pc, #136]	@ (8006a5c <lcd_init+0x4eb4>)
 80069d4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80069d8:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 80069da:	4b20      	ldr	r3, [pc, #128]	@ (8006a5c <lcd_init+0x4eb4>)
 80069dc:	2280      	movs	r2, #128	@ 0x80
 80069de:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 80069e0:	4b1e      	ldr	r3, [pc, #120]	@ (8006a5c <lcd_init+0x4eb4>)
 80069e2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80069e6:	611a      	str	r2, [r3, #16]
}
 80069e8:	bf00      	nop

        lcd_wr_regno(0xB8); /* ����GPIO���� */
        lcd_wr_xdata(0x03); /* 2��IO�����ó���� */
 80069ea:	2003      	movs	r0, #3
 80069ec:	f7f9 ff9e 	bl	800092c <lcd_wr_xdata>
        lcd_wr_xdata(0x01); /* GPIOʹ��������IO���� */
 80069f0:	2001      	movs	r0, #1
 80069f2:	f7f9 ff9b 	bl	800092c <lcd_wr_xdata>
 80069f6:	23ba      	movs	r3, #186	@ 0xba
 80069f8:	f8a7 3138 	strh.w	r3, [r7, #312]	@ 0x138
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 80069fc:	4b17      	ldr	r3, [pc, #92]	@ (8006a5c <lcd_init+0x4eb4>)
 80069fe:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006a02:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006a04:	4b15      	ldr	r3, [pc, #84]	@ (8006a5c <lcd_init+0x4eb4>)
 8006a06:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006a0a:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006a0c:	f8b7 3138 	ldrh.w	r3, [r7, #312]	@ 0x138
 8006a10:	b29a      	uxth	r2, r3
 8006a12:	4b13      	ldr	r3, [pc, #76]	@ (8006a60 <lcd_init+0x4eb8>)
 8006a14:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006a16:	4b11      	ldr	r3, [pc, #68]	@ (8006a5c <lcd_init+0x4eb4>)
 8006a18:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006a1c:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006a1e:	4b0f      	ldr	r3, [pc, #60]	@ (8006a5c <lcd_init+0x4eb4>)
 8006a20:	2280      	movs	r2, #128	@ 0x80
 8006a22:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006a24:	4b0d      	ldr	r3, [pc, #52]	@ (8006a5c <lcd_init+0x4eb4>)
 8006a26:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006a2a:	611a      	str	r2, [r3, #16]
}
 8006a2c:	bf00      	nop
        lcd_wr_regno(0xBA);
        lcd_wr_xdata(0X01); /* GPIO[1:0]=01,����LCD���� */
 8006a2e:	2001      	movs	r0, #1
 8006a30:	f7f9 ff7c 	bl	800092c <lcd_wr_xdata>
        lcd_ssd_backlight_set(100); /* ��������Ϊ���� */
 8006a34:	2064      	movs	r0, #100	@ 0x64
 8006a36:	f7fa ff1f 	bl	8001878 <lcd_ssd_backlight_set>
    }

    lcd_display_dir(0); /* Ĭ��Ϊ���� */
 8006a3a:	2000      	movs	r0, #0
 8006a3c:	f7fa ffdc 	bl	80019f8 <lcd_display_dir>
    LCD_BL(1);          /* �������� */
 8006a40:	4b06      	ldr	r3, [pc, #24]	@ (8006a5c <lcd_init+0x4eb4>)
 8006a42:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8006a46:	611a      	str	r2, [r3, #16]
    lcd_clear(WHITE);
 8006a48:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8006a4c:	f000 f80a 	bl	8006a64 <lcd_clear>
}
 8006a50:	bf00      	nop
 8006a52:	f507 77b4 	add.w	r7, r7, #360	@ 0x168
 8006a56:	46bd      	mov	sp, r7
 8006a58:	bd80      	pop	{r7, pc}
 8006a5a:	bf00      	nop
 8006a5c:	40011000 	.word	0x40011000
 8006a60:	40010c00 	.word	0x40010c00

08006a64 <lcd_clear>:
 * @brief       ��������
 * @param       color: Ҫ��������ɫ
 * @retval      ��
 */
void lcd_clear(uint16_t color)
{
 8006a64:	b580      	push	{r7, lr}
 8006a66:	b086      	sub	sp, #24
 8006a68:	af00      	add	r7, sp, #0
 8006a6a:	4603      	mov	r3, r0
 8006a6c:	80fb      	strh	r3, [r7, #6]
    uint32_t index = 0;
 8006a6e:	2300      	movs	r3, #0
 8006a70:	617b      	str	r3, [r7, #20]
    uint32_t totalpoint = lcddev.width;
 8006a72:	4b27      	ldr	r3, [pc, #156]	@ (8006b10 <lcd_clear+0xac>)
 8006a74:	881b      	ldrh	r3, [r3, #0]
 8006a76:	613b      	str	r3, [r7, #16]
    totalpoint *= lcddev.height;    /* �õ��ܵ��� */
 8006a78:	4b25      	ldr	r3, [pc, #148]	@ (8006b10 <lcd_clear+0xac>)
 8006a7a:	885b      	ldrh	r3, [r3, #2]
 8006a7c:	461a      	mov	r2, r3
 8006a7e:	693b      	ldr	r3, [r7, #16]
 8006a80:	fb02 f303 	mul.w	r3, r2, r3
 8006a84:	613b      	str	r3, [r7, #16]
    lcd_set_cursor(0x00, 0x0000);   /* ���ù��λ�� */
 8006a86:	2100      	movs	r1, #0
 8006a88:	2000      	movs	r0, #0
 8006a8a:	f7fa f809 	bl	8000aa0 <lcd_set_cursor>
    lcd_wr_regno(lcddev.wramcmd);
 8006a8e:	4b20      	ldr	r3, [pc, #128]	@ (8006b10 <lcd_clear+0xac>)
 8006a90:	891b      	ldrh	r3, [r3, #8]
 8006a92:	81fb      	strh	r3, [r7, #14]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006a94:	4b1f      	ldr	r3, [pc, #124]	@ (8006b14 <lcd_clear+0xb0>)
 8006a96:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006a9a:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006a9c:	4b1d      	ldr	r3, [pc, #116]	@ (8006b14 <lcd_clear+0xb0>)
 8006a9e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006aa2:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006aa4:	89fb      	ldrh	r3, [r7, #14]
 8006aa6:	b29a      	uxth	r2, r3
 8006aa8:	4b1b      	ldr	r3, [pc, #108]	@ (8006b18 <lcd_clear+0xb4>)
 8006aaa:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006aac:	4b19      	ldr	r3, [pc, #100]	@ (8006b14 <lcd_clear+0xb0>)
 8006aae:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006ab2:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006ab4:	4b17      	ldr	r3, [pc, #92]	@ (8006b14 <lcd_clear+0xb0>)
 8006ab6:	2280      	movs	r2, #128	@ 0x80
 8006ab8:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006aba:	4b16      	ldr	r3, [pc, #88]	@ (8006b14 <lcd_clear+0xb0>)
 8006abc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006ac0:	611a      	str	r2, [r3, #16]
}
 8006ac2:	bf00      	nop
}
 8006ac4:	bf00      	nop
     * RS, CS�Ĳ���, �Ӷ������ٶ�, ��51֡��ߵ�78֡����, ���50%
     * ��������: -O2�Ż�, ��ˢ��
     * �����ٶ�Ҫ���ʱ��, ���Լ����Ż�: lcd_fill, lcd_color_fill, 
     * lcd_set_cursor �� lcd_draw_point �Ⱥ���, ��ҿ��������Ż�
     */
    LCD_RS(1);                      /* RS=1,��ʾд���� */
 8006ac6:	4b13      	ldr	r3, [pc, #76]	@ (8006b14 <lcd_clear+0xb0>)
 8006ac8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8006acc:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006ace:	4b11      	ldr	r3, [pc, #68]	@ (8006b14 <lcd_clear+0xb0>)
 8006ad0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006ad4:	611a      	str	r2, [r3, #16]
    
    for (index = 0; index < totalpoint; index++)
 8006ad6:	2300      	movs	r3, #0
 8006ad8:	617b      	str	r3, [r7, #20]
 8006ada:	e00c      	b.n	8006af6 <lcd_clear+0x92>
    {
        LCD_DATA_OUT(color);        /* д��Ҫд������ */
 8006adc:	4a0e      	ldr	r2, [pc, #56]	@ (8006b18 <lcd_clear+0xb4>)
 8006ade:	88fb      	ldrh	r3, [r7, #6]
 8006ae0:	60d3      	str	r3, [r2, #12]
        LCD_WR(0);
 8006ae2:	4b0c      	ldr	r3, [pc, #48]	@ (8006b14 <lcd_clear+0xb0>)
 8006ae4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006ae8:	611a      	str	r2, [r3, #16]
        LCD_WR(1);
 8006aea:	4b0a      	ldr	r3, [pc, #40]	@ (8006b14 <lcd_clear+0xb0>)
 8006aec:	2280      	movs	r2, #128	@ 0x80
 8006aee:	611a      	str	r2, [r3, #16]
    for (index = 0; index < totalpoint; index++)
 8006af0:	697b      	ldr	r3, [r7, #20]
 8006af2:	3301      	adds	r3, #1
 8006af4:	617b      	str	r3, [r7, #20]
 8006af6:	697a      	ldr	r2, [r7, #20]
 8006af8:	693b      	ldr	r3, [r7, #16]
 8006afa:	429a      	cmp	r2, r3
 8006afc:	d3ee      	bcc.n	8006adc <lcd_clear+0x78>
    }
    
    LCD_CS(1);
 8006afe:	4b05      	ldr	r3, [pc, #20]	@ (8006b14 <lcd_clear+0xb0>)
 8006b00:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006b04:	611a      	str	r2, [r3, #16]
}
 8006b06:	bf00      	nop
 8006b08:	3718      	adds	r7, #24
 8006b0a:	46bd      	mov	sp, r7
 8006b0c:	bd80      	pop	{r7, pc}
 8006b0e:	bf00      	nop
 8006b10:	2000002c 	.word	0x2000002c
 8006b14:	40011000 	.word	0x40011000
 8006b18:	40010c00 	.word	0x40010c00

08006b1c <lcd_fill>:
 * @param       (sx,sy),(ex,ey):�����ζԽ�����,�����СΪ:(ex - sx + 1) * (ey - sy + 1)
 * @param       color: Ҫ������ɫ(32λ��ɫ,�������LTDC)
 * @retval      ��
 */
void lcd_fill(uint16_t sx, uint16_t sy, uint16_t ex, uint16_t ey, uint32_t color)
{
 8006b1c:	b590      	push	{r4, r7, lr}
 8006b1e:	b085      	sub	sp, #20
 8006b20:	af00      	add	r7, sp, #0
 8006b22:	4604      	mov	r4, r0
 8006b24:	4608      	mov	r0, r1
 8006b26:	4611      	mov	r1, r2
 8006b28:	461a      	mov	r2, r3
 8006b2a:	4623      	mov	r3, r4
 8006b2c:	80fb      	strh	r3, [r7, #6]
 8006b2e:	4603      	mov	r3, r0
 8006b30:	80bb      	strh	r3, [r7, #4]
 8006b32:	460b      	mov	r3, r1
 8006b34:	807b      	strh	r3, [r7, #2]
 8006b36:	4613      	mov	r3, r2
 8006b38:	803b      	strh	r3, [r7, #0]
    uint16_t i, j;
    uint16_t xlen = 0;
 8006b3a:	2300      	movs	r3, #0
 8006b3c:	817b      	strh	r3, [r7, #10]
    xlen = ex - sx + 1;
 8006b3e:	887a      	ldrh	r2, [r7, #2]
 8006b40:	88fb      	ldrh	r3, [r7, #6]
 8006b42:	1ad3      	subs	r3, r2, r3
 8006b44:	b29b      	uxth	r3, r3
 8006b46:	3301      	adds	r3, #1
 8006b48:	817b      	strh	r3, [r7, #10]

    for (i = sy; i <= ey; i++)
 8006b4a:	88bb      	ldrh	r3, [r7, #4]
 8006b4c:	81fb      	strh	r3, [r7, #14]
 8006b4e:	e044      	b.n	8006bda <lcd_fill+0xbe>
    {
        lcd_set_cursor(sx, i);      /* ���ù��λ�� */
 8006b50:	89fa      	ldrh	r2, [r7, #14]
 8006b52:	88fb      	ldrh	r3, [r7, #6]
 8006b54:	4611      	mov	r1, r2
 8006b56:	4618      	mov	r0, r3
 8006b58:	f7f9 ffa2 	bl	8000aa0 <lcd_set_cursor>
    lcd_wr_regno(lcddev.wramcmd);
 8006b5c:	4b23      	ldr	r3, [pc, #140]	@ (8006bec <lcd_fill+0xd0>)
 8006b5e:	891b      	ldrh	r3, [r3, #8]
 8006b60:	813b      	strh	r3, [r7, #8]
    LCD_RS(0);              /* RS=0,��ʾд�Ĵ��� */
 8006b62:	4b23      	ldr	r3, [pc, #140]	@ (8006bf0 <lcd_fill+0xd4>)
 8006b64:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006b68:	611a      	str	r2, [r3, #16]
    LCD_CS(0);
 8006b6a:	4b21      	ldr	r3, [pc, #132]	@ (8006bf0 <lcd_fill+0xd4>)
 8006b6c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006b70:	611a      	str	r2, [r3, #16]
    LCD_DATA_OUT(regno);    /* д��Ҫд�ļĴ������ */
 8006b72:	893b      	ldrh	r3, [r7, #8]
 8006b74:	b29a      	uxth	r2, r3
 8006b76:	4b1f      	ldr	r3, [pc, #124]	@ (8006bf4 <lcd_fill+0xd8>)
 8006b78:	60da      	str	r2, [r3, #12]
    LCD_WR(0);
 8006b7a:	4b1d      	ldr	r3, [pc, #116]	@ (8006bf0 <lcd_fill+0xd4>)
 8006b7c:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006b80:	611a      	str	r2, [r3, #16]
    LCD_WR(1);
 8006b82:	4b1b      	ldr	r3, [pc, #108]	@ (8006bf0 <lcd_fill+0xd4>)
 8006b84:	2280      	movs	r2, #128	@ 0x80
 8006b86:	611a      	str	r2, [r3, #16]
    LCD_CS(1);
 8006b88:	4b19      	ldr	r3, [pc, #100]	@ (8006bf0 <lcd_fill+0xd4>)
 8006b8a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006b8e:	611a      	str	r2, [r3, #16]
}
 8006b90:	bf00      	nop
}
 8006b92:	bf00      	nop
        lcd_write_ram_prepare();    /* ��ʼд��GRAM */

        for (j = 0; j < xlen; j++)
 8006b94:	2300      	movs	r3, #0
 8006b96:	81bb      	strh	r3, [r7, #12]
 8006b98:	e018      	b.n	8006bcc <lcd_fill+0xb0>
        {
            lcd_wr_data(color);     /* д������ */
 8006b9a:	4b15      	ldr	r3, [pc, #84]	@ (8006bf0 <lcd_fill+0xd4>)
 8006b9c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8006ba0:	611a      	str	r2, [r3, #16]
 8006ba2:	4b13      	ldr	r3, [pc, #76]	@ (8006bf0 <lcd_fill+0xd4>)
 8006ba4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8006ba8:	611a      	str	r2, [r3, #16]
 8006baa:	4a12      	ldr	r2, [pc, #72]	@ (8006bf4 <lcd_fill+0xd8>)
 8006bac:	6a3b      	ldr	r3, [r7, #32]
 8006bae:	60d3      	str	r3, [r2, #12]
 8006bb0:	4b0f      	ldr	r3, [pc, #60]	@ (8006bf0 <lcd_fill+0xd4>)
 8006bb2:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8006bb6:	611a      	str	r2, [r3, #16]
 8006bb8:	4b0d      	ldr	r3, [pc, #52]	@ (8006bf0 <lcd_fill+0xd4>)
 8006bba:	2280      	movs	r2, #128	@ 0x80
 8006bbc:	611a      	str	r2, [r3, #16]
 8006bbe:	4b0c      	ldr	r3, [pc, #48]	@ (8006bf0 <lcd_fill+0xd4>)
 8006bc0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006bc4:	611a      	str	r2, [r3, #16]
        for (j = 0; j < xlen; j++)
 8006bc6:	89bb      	ldrh	r3, [r7, #12]
 8006bc8:	3301      	adds	r3, #1
 8006bca:	81bb      	strh	r3, [r7, #12]
 8006bcc:	89ba      	ldrh	r2, [r7, #12]
 8006bce:	897b      	ldrh	r3, [r7, #10]
 8006bd0:	429a      	cmp	r2, r3
 8006bd2:	d3e2      	bcc.n	8006b9a <lcd_fill+0x7e>
    for (i = sy; i <= ey; i++)
 8006bd4:	89fb      	ldrh	r3, [r7, #14]
 8006bd6:	3301      	adds	r3, #1
 8006bd8:	81fb      	strh	r3, [r7, #14]
 8006bda:	89fa      	ldrh	r2, [r7, #14]
 8006bdc:	883b      	ldrh	r3, [r7, #0]
 8006bde:	429a      	cmp	r2, r3
 8006be0:	d9b6      	bls.n	8006b50 <lcd_fill+0x34>
        }
    }
}
 8006be2:	bf00      	nop
 8006be4:	bf00      	nop
 8006be6:	3714      	adds	r7, #20
 8006be8:	46bd      	mov	sp, r7
 8006bea:	bd90      	pop	{r4, r7, pc}
 8006bec:	2000002c 	.word	0x2000002c
 8006bf0:	40011000 	.word	0x40011000
 8006bf4:	40010c00 	.word	0x40010c00

08006bf8 <lcd_draw_line>:
 * @param       x2,y2: �յ�����
 * @param       color: �ߵ���ɫ
 * @retval      ��
 */
void lcd_draw_line(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t color)
{
 8006bf8:	b590      	push	{r4, r7, lr}
 8006bfa:	b08d      	sub	sp, #52	@ 0x34
 8006bfc:	af00      	add	r7, sp, #0
 8006bfe:	4604      	mov	r4, r0
 8006c00:	4608      	mov	r0, r1
 8006c02:	4611      	mov	r1, r2
 8006c04:	461a      	mov	r2, r3
 8006c06:	4623      	mov	r3, r4
 8006c08:	80fb      	strh	r3, [r7, #6]
 8006c0a:	4603      	mov	r3, r0
 8006c0c:	80bb      	strh	r3, [r7, #4]
 8006c0e:	460b      	mov	r3, r1
 8006c10:	807b      	strh	r3, [r7, #2]
 8006c12:	4613      	mov	r3, r2
 8006c14:	803b      	strh	r3, [r7, #0]
    uint16_t t;
    int xerr = 0, yerr = 0, delta_x, delta_y, distance;
 8006c16:	2300      	movs	r3, #0
 8006c18:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006c1a:	2300      	movs	r3, #0
 8006c1c:	627b      	str	r3, [r7, #36]	@ 0x24
    int incx, incy, row, col;
    delta_x = x2 - x1;          /* ������������ */
 8006c1e:	887a      	ldrh	r2, [r7, #2]
 8006c20:	88fb      	ldrh	r3, [r7, #6]
 8006c22:	1ad3      	subs	r3, r2, r3
 8006c24:	623b      	str	r3, [r7, #32]
    delta_y = y2 - y1;
 8006c26:	883a      	ldrh	r2, [r7, #0]
 8006c28:	88bb      	ldrh	r3, [r7, #4]
 8006c2a:	1ad3      	subs	r3, r2, r3
 8006c2c:	61fb      	str	r3, [r7, #28]
    row = x1;
 8006c2e:	88fb      	ldrh	r3, [r7, #6]
 8006c30:	60fb      	str	r3, [r7, #12]
    col = y1;
 8006c32:	88bb      	ldrh	r3, [r7, #4]
 8006c34:	60bb      	str	r3, [r7, #8]

    if (delta_x > 0)incx = 1;   /* ���õ������� */
 8006c36:	6a3b      	ldr	r3, [r7, #32]
 8006c38:	2b00      	cmp	r3, #0
 8006c3a:	dd02      	ble.n	8006c42 <lcd_draw_line+0x4a>
 8006c3c:	2301      	movs	r3, #1
 8006c3e:	617b      	str	r3, [r7, #20]
 8006c40:	e00b      	b.n	8006c5a <lcd_draw_line+0x62>
    else if (delta_x == 0)incx = 0; /* ��ֱ�� */
 8006c42:	6a3b      	ldr	r3, [r7, #32]
 8006c44:	2b00      	cmp	r3, #0
 8006c46:	d102      	bne.n	8006c4e <lcd_draw_line+0x56>
 8006c48:	2300      	movs	r3, #0
 8006c4a:	617b      	str	r3, [r7, #20]
 8006c4c:	e005      	b.n	8006c5a <lcd_draw_line+0x62>
    else
    {
        incx = -1;
 8006c4e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8006c52:	617b      	str	r3, [r7, #20]
        delta_x = -delta_x;
 8006c54:	6a3b      	ldr	r3, [r7, #32]
 8006c56:	425b      	negs	r3, r3
 8006c58:	623b      	str	r3, [r7, #32]
    }

    if (delta_y > 0)incy = 1;
 8006c5a:	69fb      	ldr	r3, [r7, #28]
 8006c5c:	2b00      	cmp	r3, #0
 8006c5e:	dd02      	ble.n	8006c66 <lcd_draw_line+0x6e>
 8006c60:	2301      	movs	r3, #1
 8006c62:	613b      	str	r3, [r7, #16]
 8006c64:	e00b      	b.n	8006c7e <lcd_draw_line+0x86>
    else if (delta_y == 0)incy = 0; /* ˮƽ�� */
 8006c66:	69fb      	ldr	r3, [r7, #28]
 8006c68:	2b00      	cmp	r3, #0
 8006c6a:	d102      	bne.n	8006c72 <lcd_draw_line+0x7a>
 8006c6c:	2300      	movs	r3, #0
 8006c6e:	613b      	str	r3, [r7, #16]
 8006c70:	e005      	b.n	8006c7e <lcd_draw_line+0x86>
    else
    {
        incy = -1;
 8006c72:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8006c76:	613b      	str	r3, [r7, #16]
        delta_y = -delta_y;
 8006c78:	69fb      	ldr	r3, [r7, #28]
 8006c7a:	425b      	negs	r3, r3
 8006c7c:	61fb      	str	r3, [r7, #28]
    }

    if ( delta_x > delta_y)distance = delta_x;  /* ѡȡ�������������� */
 8006c7e:	6a3a      	ldr	r2, [r7, #32]
 8006c80:	69fb      	ldr	r3, [r7, #28]
 8006c82:	429a      	cmp	r2, r3
 8006c84:	dd02      	ble.n	8006c8c <lcd_draw_line+0x94>
 8006c86:	6a3b      	ldr	r3, [r7, #32]
 8006c88:	61bb      	str	r3, [r7, #24]
 8006c8a:	e001      	b.n	8006c90 <lcd_draw_line+0x98>
    else distance = delta_y;
 8006c8c:	69fb      	ldr	r3, [r7, #28]
 8006c8e:	61bb      	str	r3, [r7, #24]

    for (t = 0; t <= distance + 1; t++ )   /* ������� */
 8006c90:	2300      	movs	r3, #0
 8006c92:	85fb      	strh	r3, [r7, #46]	@ 0x2e
 8006c94:	e02b      	b.n	8006cee <lcd_draw_line+0xf6>
    {
        lcd_draw_point(row, col, color); /* ���� */
 8006c96:	68fb      	ldr	r3, [r7, #12]
 8006c98:	b29b      	uxth	r3, r3
 8006c9a:	68ba      	ldr	r2, [r7, #8]
 8006c9c:	b291      	uxth	r1, r2
 8006c9e:	f8b7 2040 	ldrh.w	r2, [r7, #64]	@ 0x40
 8006ca2:	4618      	mov	r0, r3
 8006ca4:	f7fa fd9c 	bl	80017e0 <lcd_draw_point>
        xerr += delta_x ;
 8006ca8:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8006caa:	6a3b      	ldr	r3, [r7, #32]
 8006cac:	4413      	add	r3, r2
 8006cae:	62bb      	str	r3, [r7, #40]	@ 0x28
        yerr += delta_y ;
 8006cb0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006cb2:	69fb      	ldr	r3, [r7, #28]
 8006cb4:	4413      	add	r3, r2
 8006cb6:	627b      	str	r3, [r7, #36]	@ 0x24

        if (xerr > distance)
 8006cb8:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8006cba:	69bb      	ldr	r3, [r7, #24]
 8006cbc:	429a      	cmp	r2, r3
 8006cbe:	dd07      	ble.n	8006cd0 <lcd_draw_line+0xd8>
        {
            xerr -= distance;
 8006cc0:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8006cc2:	69bb      	ldr	r3, [r7, #24]
 8006cc4:	1ad3      	subs	r3, r2, r3
 8006cc6:	62bb      	str	r3, [r7, #40]	@ 0x28
            row += incx;
 8006cc8:	68fa      	ldr	r2, [r7, #12]
 8006cca:	697b      	ldr	r3, [r7, #20]
 8006ccc:	4413      	add	r3, r2
 8006cce:	60fb      	str	r3, [r7, #12]
        }

        if (yerr > distance)
 8006cd0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006cd2:	69bb      	ldr	r3, [r7, #24]
 8006cd4:	429a      	cmp	r2, r3
 8006cd6:	dd07      	ble.n	8006ce8 <lcd_draw_line+0xf0>
        {
            yerr -= distance;
 8006cd8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006cda:	69bb      	ldr	r3, [r7, #24]
 8006cdc:	1ad3      	subs	r3, r2, r3
 8006cde:	627b      	str	r3, [r7, #36]	@ 0x24
            col += incy;
 8006ce0:	68ba      	ldr	r2, [r7, #8]
 8006ce2:	693b      	ldr	r3, [r7, #16]
 8006ce4:	4413      	add	r3, r2
 8006ce6:	60bb      	str	r3, [r7, #8]
    for (t = 0; t <= distance + 1; t++ )   /* ������� */
 8006ce8:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 8006cea:	3301      	adds	r3, #1
 8006cec:	85fb      	strh	r3, [r7, #46]	@ 0x2e
 8006cee:	8dfa      	ldrh	r2, [r7, #46]	@ 0x2e
 8006cf0:	69bb      	ldr	r3, [r7, #24]
 8006cf2:	3301      	adds	r3, #1
 8006cf4:	429a      	cmp	r2, r3
 8006cf6:	ddce      	ble.n	8006c96 <lcd_draw_line+0x9e>
        }
    }
}
 8006cf8:	bf00      	nop
 8006cfa:	bf00      	nop
 8006cfc:	3734      	adds	r7, #52	@ 0x34
 8006cfe:	46bd      	mov	sp, r7
 8006d00:	bd90      	pop	{r4, r7, pc}

08006d02 <lcd_draw_rectangle>:
 * @param       x2,y2: �յ�����
 * @param       color: ���ε���ɫ
 * @retval      ��
 */
void lcd_draw_rectangle(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t color)
{
 8006d02:	b590      	push	{r4, r7, lr}
 8006d04:	b085      	sub	sp, #20
 8006d06:	af02      	add	r7, sp, #8
 8006d08:	4604      	mov	r4, r0
 8006d0a:	4608      	mov	r0, r1
 8006d0c:	4611      	mov	r1, r2
 8006d0e:	461a      	mov	r2, r3
 8006d10:	4623      	mov	r3, r4
 8006d12:	80fb      	strh	r3, [r7, #6]
 8006d14:	4603      	mov	r3, r0
 8006d16:	80bb      	strh	r3, [r7, #4]
 8006d18:	460b      	mov	r3, r1
 8006d1a:	807b      	strh	r3, [r7, #2]
 8006d1c:	4613      	mov	r3, r2
 8006d1e:	803b      	strh	r3, [r7, #0]
    lcd_draw_line(x1, y1, x2, y1, color);
 8006d20:	88bc      	ldrh	r4, [r7, #4]
 8006d22:	887a      	ldrh	r2, [r7, #2]
 8006d24:	88b9      	ldrh	r1, [r7, #4]
 8006d26:	88f8      	ldrh	r0, [r7, #6]
 8006d28:	8b3b      	ldrh	r3, [r7, #24]
 8006d2a:	9300      	str	r3, [sp, #0]
 8006d2c:	4623      	mov	r3, r4
 8006d2e:	f7ff ff63 	bl	8006bf8 <lcd_draw_line>
    lcd_draw_line(x1, y1, x1, y2, color);
 8006d32:	883c      	ldrh	r4, [r7, #0]
 8006d34:	88fa      	ldrh	r2, [r7, #6]
 8006d36:	88b9      	ldrh	r1, [r7, #4]
 8006d38:	88f8      	ldrh	r0, [r7, #6]
 8006d3a:	8b3b      	ldrh	r3, [r7, #24]
 8006d3c:	9300      	str	r3, [sp, #0]
 8006d3e:	4623      	mov	r3, r4
 8006d40:	f7ff ff5a 	bl	8006bf8 <lcd_draw_line>
    lcd_draw_line(x1, y2, x2, y2, color);
 8006d44:	883c      	ldrh	r4, [r7, #0]
 8006d46:	887a      	ldrh	r2, [r7, #2]
 8006d48:	8839      	ldrh	r1, [r7, #0]
 8006d4a:	88f8      	ldrh	r0, [r7, #6]
 8006d4c:	8b3b      	ldrh	r3, [r7, #24]
 8006d4e:	9300      	str	r3, [sp, #0]
 8006d50:	4623      	mov	r3, r4
 8006d52:	f7ff ff51 	bl	8006bf8 <lcd_draw_line>
    lcd_draw_line(x2, y1, x2, y2, color);
 8006d56:	883c      	ldrh	r4, [r7, #0]
 8006d58:	887a      	ldrh	r2, [r7, #2]
 8006d5a:	88b9      	ldrh	r1, [r7, #4]
 8006d5c:	8878      	ldrh	r0, [r7, #2]
 8006d5e:	8b3b      	ldrh	r3, [r7, #24]
 8006d60:	9300      	str	r3, [sp, #0]
 8006d62:	4623      	mov	r3, r4
 8006d64:	f7ff ff48 	bl	8006bf8 <lcd_draw_line>
}
 8006d68:	bf00      	nop
 8006d6a:	370c      	adds	r7, #12
 8006d6c:	46bd      	mov	sp, r7
 8006d6e:	bd90      	pop	{r4, r7, pc}

08006d70 <lcd_show_char>:
 * @param       mode : ���ӷ�ʽ(1); �ǵ��ӷ�ʽ(0);
 * @param       color : �ַ�����ɫ;
 * @retval      ��
 */
void lcd_show_char(uint16_t x, uint16_t y, char chr, uint8_t size, uint8_t mode, uint16_t color)
{
 8006d70:	b590      	push	{r4, r7, lr}
 8006d72:	b087      	sub	sp, #28
 8006d74:	af00      	add	r7, sp, #0
 8006d76:	4604      	mov	r4, r0
 8006d78:	4608      	mov	r0, r1
 8006d7a:	4611      	mov	r1, r2
 8006d7c:	461a      	mov	r2, r3
 8006d7e:	4623      	mov	r3, r4
 8006d80:	80fb      	strh	r3, [r7, #6]
 8006d82:	4603      	mov	r3, r0
 8006d84:	80bb      	strh	r3, [r7, #4]
 8006d86:	460b      	mov	r3, r1
 8006d88:	70fb      	strb	r3, [r7, #3]
 8006d8a:	4613      	mov	r3, r2
 8006d8c:	70bb      	strb	r3, [r7, #2]
    uint8_t temp, t1, t;
    uint16_t y0 = y;
 8006d8e:	88bb      	ldrh	r3, [r7, #4]
 8006d90:	81fb      	strh	r3, [r7, #14]
    uint8_t csize = 0;
 8006d92:	2300      	movs	r3, #0
 8006d94:	737b      	strb	r3, [r7, #13]
    uint8_t *pfont = 0;
 8006d96:	2300      	movs	r3, #0
 8006d98:	613b      	str	r3, [r7, #16]

    csize = (size / 8 + ((size % 8) ? 1 : 0)) * (size / 2); /* �õ�����һ���ַ���Ӧ������ռ���ֽ��� */
 8006d9a:	78bb      	ldrb	r3, [r7, #2]
 8006d9c:	08db      	lsrs	r3, r3, #3
 8006d9e:	b2db      	uxtb	r3, r3
 8006da0:	461a      	mov	r2, r3
 8006da2:	78bb      	ldrb	r3, [r7, #2]
 8006da4:	f003 0307 	and.w	r3, r3, #7
 8006da8:	b2db      	uxtb	r3, r3
 8006daa:	2b00      	cmp	r3, #0
 8006dac:	bf14      	ite	ne
 8006dae:	2301      	movne	r3, #1
 8006db0:	2300      	moveq	r3, #0
 8006db2:	b2db      	uxtb	r3, r3
 8006db4:	4413      	add	r3, r2
 8006db6:	b2db      	uxtb	r3, r3
 8006db8:	78ba      	ldrb	r2, [r7, #2]
 8006dba:	0852      	lsrs	r2, r2, #1
 8006dbc:	b2d2      	uxtb	r2, r2
 8006dbe:	fb02 f303 	mul.w	r3, r2, r3
 8006dc2:	737b      	strb	r3, [r7, #13]
    chr = chr - ' ';    /* �õ�ƫ�ƺ��ֵ��ASCII�ֿ��Ǵӿո�ʼȡģ������-' '���Ƕ�Ӧ�ַ����ֿ⣩ */
 8006dc4:	78fb      	ldrb	r3, [r7, #3]
 8006dc6:	3b20      	subs	r3, #32
 8006dc8:	70fb      	strb	r3, [r7, #3]

    switch (size)
 8006dca:	78bb      	ldrb	r3, [r7, #2]
 8006dcc:	3b0c      	subs	r3, #12
 8006dce:	2b14      	cmp	r3, #20
 8006dd0:	f200 8099 	bhi.w	8006f06 <lcd_show_char+0x196>
 8006dd4:	a201      	add	r2, pc, #4	@ (adr r2, 8006ddc <lcd_show_char+0x6c>)
 8006dd6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006dda:	bf00      	nop
 8006ddc:	08006e31 	.word	0x08006e31
 8006de0:	08006f07 	.word	0x08006f07
 8006de4:	08006f07 	.word	0x08006f07
 8006de8:	08006f07 	.word	0x08006f07
 8006dec:	08006e43 	.word	0x08006e43
 8006df0:	08006f07 	.word	0x08006f07
 8006df4:	08006f07 	.word	0x08006f07
 8006df8:	08006f07 	.word	0x08006f07
 8006dfc:	08006f07 	.word	0x08006f07
 8006e00:	08006f07 	.word	0x08006f07
 8006e04:	08006f07 	.word	0x08006f07
 8006e08:	08006f07 	.word	0x08006f07
 8006e0c:	08006e4f 	.word	0x08006e4f
 8006e10:	08006f07 	.word	0x08006f07
 8006e14:	08006f07 	.word	0x08006f07
 8006e18:	08006f07 	.word	0x08006f07
 8006e1c:	08006f07 	.word	0x08006f07
 8006e20:	08006f07 	.word	0x08006f07
 8006e24:	08006f07 	.word	0x08006f07
 8006e28:	08006f07 	.word	0x08006f07
 8006e2c:	08006e61 	.word	0x08006e61
    {
        case 12:
            pfont = (uint8_t *)asc2_1206[chr];  /* ����1206���� */
 8006e30:	78fa      	ldrb	r2, [r7, #3]
 8006e32:	4613      	mov	r3, r2
 8006e34:	005b      	lsls	r3, r3, #1
 8006e36:	4413      	add	r3, r2
 8006e38:	009b      	lsls	r3, r3, #2
 8006e3a:	4a36      	ldr	r2, [pc, #216]	@ (8006f14 <lcd_show_char+0x1a4>)
 8006e3c:	4413      	add	r3, r2
 8006e3e:	613b      	str	r3, [r7, #16]
            break;
 8006e40:	e014      	b.n	8006e6c <lcd_show_char+0xfc>

        case 16:
            pfont = (uint8_t *)asc2_1608[chr];  /* ����1608���� */
 8006e42:	78fb      	ldrb	r3, [r7, #3]
 8006e44:	011b      	lsls	r3, r3, #4
 8006e46:	4a34      	ldr	r2, [pc, #208]	@ (8006f18 <lcd_show_char+0x1a8>)
 8006e48:	4413      	add	r3, r2
 8006e4a:	613b      	str	r3, [r7, #16]
            break;
 8006e4c:	e00e      	b.n	8006e6c <lcd_show_char+0xfc>

        case 24:
            pfont = (uint8_t *)asc2_2412[chr];  /* ����2412���� */
 8006e4e:	78fa      	ldrb	r2, [r7, #3]
 8006e50:	4613      	mov	r3, r2
 8006e52:	00db      	lsls	r3, r3, #3
 8006e54:	4413      	add	r3, r2
 8006e56:	009b      	lsls	r3, r3, #2
 8006e58:	4a30      	ldr	r2, [pc, #192]	@ (8006f1c <lcd_show_char+0x1ac>)
 8006e5a:	4413      	add	r3, r2
 8006e5c:	613b      	str	r3, [r7, #16]
            break;
 8006e5e:	e005      	b.n	8006e6c <lcd_show_char+0xfc>

        case 32:
            pfont = (uint8_t *)asc2_3216[chr];  /* ����3216���� */
 8006e60:	78fb      	ldrb	r3, [r7, #3]
 8006e62:	019b      	lsls	r3, r3, #6
 8006e64:	4a2e      	ldr	r2, [pc, #184]	@ (8006f20 <lcd_show_char+0x1b0>)
 8006e66:	4413      	add	r3, r2
 8006e68:	613b      	str	r3, [r7, #16]
            break;
 8006e6a:	bf00      	nop

        default:
            return ;
    }

    for (t = 0; t < csize; t++)
 8006e6c:	2300      	movs	r3, #0
 8006e6e:	757b      	strb	r3, [r7, #21]
 8006e70:	e044      	b.n	8006efc <lcd_show_char+0x18c>
    {
        temp = pfont[t];    /* ��ȡ�ַ��ĵ������� */
 8006e72:	7d7b      	ldrb	r3, [r7, #21]
 8006e74:	693a      	ldr	r2, [r7, #16]
 8006e76:	4413      	add	r3, r2
 8006e78:	781b      	ldrb	r3, [r3, #0]
 8006e7a:	75fb      	strb	r3, [r7, #23]

        for (t1 = 0; t1 < 8; t1++)   /* һ���ֽ�8���� */
 8006e7c:	2300      	movs	r3, #0
 8006e7e:	75bb      	strb	r3, [r7, #22]
 8006e80:	e034      	b.n	8006eec <lcd_show_char+0x17c>
        {
            if (temp & 0x80)        /* ��Ч��,��Ҫ��ʾ */
 8006e82:	f997 3017 	ldrsb.w	r3, [r7, #23]
 8006e86:	2b00      	cmp	r3, #0
 8006e88:	da06      	bge.n	8006e98 <lcd_show_char+0x128>
            {
                lcd_draw_point(x, y, color);        /* �������,Ҫ��ʾ����� */
 8006e8a:	8dba      	ldrh	r2, [r7, #44]	@ 0x2c
 8006e8c:	88b9      	ldrh	r1, [r7, #4]
 8006e8e:	88fb      	ldrh	r3, [r7, #6]
 8006e90:	4618      	mov	r0, r3
 8006e92:	f7fa fca5 	bl	80017e0 <lcd_draw_point>
 8006e96:	e00a      	b.n	8006eae <lcd_show_char+0x13e>
            }
            else if (mode == 0)     /* ��Ч��,����ʾ */
 8006e98:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8006e9c:	2b00      	cmp	r3, #0
 8006e9e:	d106      	bne.n	8006eae <lcd_show_char+0x13e>
            {
                lcd_draw_point(x, y, g_back_color); /* ������ɫ,�൱������㲻��ʾ(ע�ⱳ��ɫ��ȫ�ֱ�������) */
 8006ea0:	4b20      	ldr	r3, [pc, #128]	@ (8006f24 <lcd_show_char+0x1b4>)
 8006ea2:	681a      	ldr	r2, [r3, #0]
 8006ea4:	88b9      	ldrh	r1, [r7, #4]
 8006ea6:	88fb      	ldrh	r3, [r7, #6]
 8006ea8:	4618      	mov	r0, r3
 8006eaa:	f7fa fc99 	bl	80017e0 <lcd_draw_point>
            }

            temp <<= 1; /* ��λ, �Ա��ȡ��һ��λ��״̬ */
 8006eae:	7dfb      	ldrb	r3, [r7, #23]
 8006eb0:	005b      	lsls	r3, r3, #1
 8006eb2:	75fb      	strb	r3, [r7, #23]
            y++;
 8006eb4:	88bb      	ldrh	r3, [r7, #4]
 8006eb6:	3301      	adds	r3, #1
 8006eb8:	80bb      	strh	r3, [r7, #4]

            if (y >= lcddev.height)return;  /* �������� */
 8006eba:	4b1b      	ldr	r3, [pc, #108]	@ (8006f28 <lcd_show_char+0x1b8>)
 8006ebc:	885b      	ldrh	r3, [r3, #2]
 8006ebe:	88ba      	ldrh	r2, [r7, #4]
 8006ec0:	429a      	cmp	r2, r3
 8006ec2:	d222      	bcs.n	8006f0a <lcd_show_char+0x19a>

            if ((y - y0) == size)   /* ��ʾ��һ����? */
 8006ec4:	88ba      	ldrh	r2, [r7, #4]
 8006ec6:	89fb      	ldrh	r3, [r7, #14]
 8006ec8:	1ad2      	subs	r2, r2, r3
 8006eca:	78bb      	ldrb	r3, [r7, #2]
 8006ecc:	429a      	cmp	r2, r3
 8006ece:	d10a      	bne.n	8006ee6 <lcd_show_char+0x176>
            {
                y = y0; /* y���긴λ */
 8006ed0:	89fb      	ldrh	r3, [r7, #14]
 8006ed2:	80bb      	strh	r3, [r7, #4]
                x++;    /* x������� */
 8006ed4:	88fb      	ldrh	r3, [r7, #6]
 8006ed6:	3301      	adds	r3, #1
 8006ed8:	80fb      	strh	r3, [r7, #6]

                if (x >= lcddev.width)return;   /* x���곬������ */
 8006eda:	4b13      	ldr	r3, [pc, #76]	@ (8006f28 <lcd_show_char+0x1b8>)
 8006edc:	881b      	ldrh	r3, [r3, #0]
 8006ede:	88fa      	ldrh	r2, [r7, #6]
 8006ee0:	429a      	cmp	r2, r3
 8006ee2:	d307      	bcc.n	8006ef4 <lcd_show_char+0x184>
 8006ee4:	e012      	b.n	8006f0c <lcd_show_char+0x19c>
        for (t1 = 0; t1 < 8; t1++)   /* һ���ֽ�8���� */
 8006ee6:	7dbb      	ldrb	r3, [r7, #22]
 8006ee8:	3301      	adds	r3, #1
 8006eea:	75bb      	strb	r3, [r7, #22]
 8006eec:	7dbb      	ldrb	r3, [r7, #22]
 8006eee:	2b07      	cmp	r3, #7
 8006ef0:	d9c7      	bls.n	8006e82 <lcd_show_char+0x112>
 8006ef2:	e000      	b.n	8006ef6 <lcd_show_char+0x186>

                break;
 8006ef4:	bf00      	nop
    for (t = 0; t < csize; t++)
 8006ef6:	7d7b      	ldrb	r3, [r7, #21]
 8006ef8:	3301      	adds	r3, #1
 8006efa:	757b      	strb	r3, [r7, #21]
 8006efc:	7d7a      	ldrb	r2, [r7, #21]
 8006efe:	7b7b      	ldrb	r3, [r7, #13]
 8006f00:	429a      	cmp	r2, r3
 8006f02:	d3b6      	bcc.n	8006e72 <lcd_show_char+0x102>
 8006f04:	e002      	b.n	8006f0c <lcd_show_char+0x19c>
            return ;
 8006f06:	bf00      	nop
 8006f08:	e000      	b.n	8006f0c <lcd_show_char+0x19c>
            if (y >= lcddev.height)return;  /* �������� */
 8006f0a:	bf00      	nop
            }
        }
    }
}
 8006f0c:	371c      	adds	r7, #28
 8006f0e:	46bd      	mov	sp, r7
 8006f10:	bd90      	pop	{r4, r7, pc}
 8006f12:	bf00      	nop
 8006f14:	080082ac 	.word	0x080082ac
 8006f18:	08008720 	.word	0x08008720
 8006f1c:	08008d10 	.word	0x08008d10
 8006f20:	08009a6c 	.word	0x08009a6c
 8006f24:	20000000 	.word	0x20000000
 8006f28:	2000002c 	.word	0x2000002c

08006f2c <lcd_show_string>:
 * @param       p           : �ַ����׵�ַ
 * @param       color       : �ַ�������ɫ;
 * @retval      ��
 */
void lcd_show_string(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint8_t size, char *p, uint16_t color)
{
 8006f2c:	b590      	push	{r4, r7, lr}
 8006f2e:	b087      	sub	sp, #28
 8006f30:	af02      	add	r7, sp, #8
 8006f32:	4604      	mov	r4, r0
 8006f34:	4608      	mov	r0, r1
 8006f36:	4611      	mov	r1, r2
 8006f38:	461a      	mov	r2, r3
 8006f3a:	4623      	mov	r3, r4
 8006f3c:	80fb      	strh	r3, [r7, #6]
 8006f3e:	4603      	mov	r3, r0
 8006f40:	80bb      	strh	r3, [r7, #4]
 8006f42:	460b      	mov	r3, r1
 8006f44:	807b      	strh	r3, [r7, #2]
 8006f46:	4613      	mov	r3, r2
 8006f48:	803b      	strh	r3, [r7, #0]
    uint8_t x0 = x;
 8006f4a:	88fb      	ldrh	r3, [r7, #6]
 8006f4c:	73fb      	strb	r3, [r7, #15]
    width += x;
 8006f4e:	887a      	ldrh	r2, [r7, #2]
 8006f50:	88fb      	ldrh	r3, [r7, #6]
 8006f52:	4413      	add	r3, r2
 8006f54:	807b      	strh	r3, [r7, #2]
    height += y;
 8006f56:	883a      	ldrh	r2, [r7, #0]
 8006f58:	88bb      	ldrh	r3, [r7, #4]
 8006f5a:	4413      	add	r3, r2
 8006f5c:	803b      	strh	r3, [r7, #0]

    while ((*p <= '~') && (*p >= ' '))   /* �ж��ǲ��ǷǷ��ַ�! */
 8006f5e:	e027      	b.n	8006fb0 <lcd_show_string+0x84>
    {
        if (x >= width)
 8006f60:	88fa      	ldrh	r2, [r7, #6]
 8006f62:	887b      	ldrh	r3, [r7, #2]
 8006f64:	429a      	cmp	r2, r3
 8006f66:	d307      	bcc.n	8006f78 <lcd_show_string+0x4c>
        {
            x = x0;
 8006f68:	7bfb      	ldrb	r3, [r7, #15]
 8006f6a:	80fb      	strh	r3, [r7, #6]
            y += size;
 8006f6c:	f897 3020 	ldrb.w	r3, [r7, #32]
 8006f70:	b29a      	uxth	r2, r3
 8006f72:	88bb      	ldrh	r3, [r7, #4]
 8006f74:	4413      	add	r3, r2
 8006f76:	80bb      	strh	r3, [r7, #4]
        }

        if (y >= height)break;  /* �˳� */
 8006f78:	88ba      	ldrh	r2, [r7, #4]
 8006f7a:	883b      	ldrh	r3, [r7, #0]
 8006f7c:	429a      	cmp	r2, r3
 8006f7e:	d220      	bcs.n	8006fc2 <lcd_show_string+0x96>

        lcd_show_char(x, y, *p, size, 0, color);
 8006f80:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006f82:	781a      	ldrb	r2, [r3, #0]
 8006f84:	f897 4020 	ldrb.w	r4, [r7, #32]
 8006f88:	88b9      	ldrh	r1, [r7, #4]
 8006f8a:	88f8      	ldrh	r0, [r7, #6]
 8006f8c:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 8006f8e:	9301      	str	r3, [sp, #4]
 8006f90:	2300      	movs	r3, #0
 8006f92:	9300      	str	r3, [sp, #0]
 8006f94:	4623      	mov	r3, r4
 8006f96:	f7ff feeb 	bl	8006d70 <lcd_show_char>
        x += size / 2;
 8006f9a:	f897 3020 	ldrb.w	r3, [r7, #32]
 8006f9e:	085b      	lsrs	r3, r3, #1
 8006fa0:	b2db      	uxtb	r3, r3
 8006fa2:	461a      	mov	r2, r3
 8006fa4:	88fb      	ldrh	r3, [r7, #6]
 8006fa6:	4413      	add	r3, r2
 8006fa8:	80fb      	strh	r3, [r7, #6]
        p++;
 8006faa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006fac:	3301      	adds	r3, #1
 8006fae:	627b      	str	r3, [r7, #36]	@ 0x24
    while ((*p <= '~') && (*p >= ' '))   /* �ж��ǲ��ǷǷ��ַ�! */
 8006fb0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006fb2:	781b      	ldrb	r3, [r3, #0]
 8006fb4:	2b7e      	cmp	r3, #126	@ 0x7e
 8006fb6:	d805      	bhi.n	8006fc4 <lcd_show_string+0x98>
 8006fb8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006fba:	781b      	ldrb	r3, [r3, #0]
 8006fbc:	2b1f      	cmp	r3, #31
 8006fbe:	d8cf      	bhi.n	8006f60 <lcd_show_string+0x34>
    }
}
 8006fc0:	e000      	b.n	8006fc4 <lcd_show_string+0x98>
        if (y >= height)break;  /* �˳� */
 8006fc2:	bf00      	nop
}
 8006fc4:	bf00      	nop
 8006fc6:	3714      	adds	r7, #20
 8006fc8:	46bd      	mov	sp, r7
 8006fca:	bd90      	pop	{r4, r7, pc}

08006fcc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8006fcc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006fd0:	b08e      	sub	sp, #56	@ 0x38
 8006fd2:	af04      	add	r7, sp, #16
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8006fd4:	f000 fa0e 	bl	80073f4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8006fd8:	f000 f936 	bl	8007248 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8006fdc:	f7f9 fc2a 	bl	8000834 <MX_GPIO_Init>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  lcd_init();
 8006fe0:	f7fa fde2 	bl	8001ba8 <lcd_init>
  uint8_t x = 0;
 8006fe4:	2300      	movs	r3, #0
 8006fe6:	77fb      	strb	r3, [r7, #31]
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  switch (x) {
 8006fe8:	7ffb      	ldrb	r3, [r7, #31]
 8006fea:	2b0b      	cmp	r3, #11
 8006fec:	f200 8084 	bhi.w	80070f8 <main+0x12c>
 8006ff0:	a201      	add	r2, pc, #4	@ (adr r2, 8006ff8 <main+0x2c>)
 8006ff2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006ff6:	bf00      	nop
 8006ff8:	08007029 	.word	0x08007029
 8006ffc:	0800703b 	.word	0x0800703b
 8007000:	08007049 	.word	0x08007049
 8007004:	08007057 	.word	0x08007057
 8007008:	08007069 	.word	0x08007069
 800700c:	0800707b 	.word	0x0800707b
 8007010:	0800708d 	.word	0x0800708d
 8007014:	0800709f 	.word	0x0800709f
 8007018:	080070b1 	.word	0x080070b1
 800701c:	080070c3 	.word	0x080070c3
 8007020:	080070d5 	.word	0x080070d5
 8007024:	080070e7 	.word	0x080070e7
	  	  case 0: lcd_clear(WHITE); g_back_color = WHITE; break;
 8007028:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800702c:	f7ff fd1a 	bl	8006a64 <lcd_clear>
 8007030:	4b7f      	ldr	r3, [pc, #508]	@ (8007230 <main+0x264>)
 8007032:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8007036:	601a      	str	r2, [r3, #0]
 8007038:	e05e      	b.n	80070f8 <main+0x12c>
	  	  case 1: lcd_clear(BLACK); g_back_color = BLACK; break;
 800703a:	2000      	movs	r0, #0
 800703c:	f7ff fd12 	bl	8006a64 <lcd_clear>
 8007040:	4b7b      	ldr	r3, [pc, #492]	@ (8007230 <main+0x264>)
 8007042:	2200      	movs	r2, #0
 8007044:	601a      	str	r2, [r3, #0]
 8007046:	e057      	b.n	80070f8 <main+0x12c>
	  	  case 2: lcd_clear(BLUE); g_back_color = BLUE; break;
 8007048:	201f      	movs	r0, #31
 800704a:	f7ff fd0b 	bl	8006a64 <lcd_clear>
 800704e:	4b78      	ldr	r3, [pc, #480]	@ (8007230 <main+0x264>)
 8007050:	221f      	movs	r2, #31
 8007052:	601a      	str	r2, [r3, #0]
 8007054:	e050      	b.n	80070f8 <main+0x12c>
	  	  case 3: lcd_clear(RED); g_back_color = RED; break;
 8007056:	f44f 4078 	mov.w	r0, #63488	@ 0xf800
 800705a:	f7ff fd03 	bl	8006a64 <lcd_clear>
 800705e:	4b74      	ldr	r3, [pc, #464]	@ (8007230 <main+0x264>)
 8007060:	f44f 4278 	mov.w	r2, #63488	@ 0xf800
 8007064:	601a      	str	r2, [r3, #0]
 8007066:	e047      	b.n	80070f8 <main+0x12c>
	  	  case 4: lcd_clear(MAGENTA); g_back_color = MAGENTA; break;
 8007068:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 800706c:	f7ff fcfa 	bl	8006a64 <lcd_clear>
 8007070:	4b6f      	ldr	r3, [pc, #444]	@ (8007230 <main+0x264>)
 8007072:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8007076:	601a      	str	r2, [r3, #0]
 8007078:	e03e      	b.n	80070f8 <main+0x12c>
	  	  case 5: lcd_clear(GREEN); g_back_color = GREEN; break;
 800707a:	f44f 60fc 	mov.w	r0, #2016	@ 0x7e0
 800707e:	f7ff fcf1 	bl	8006a64 <lcd_clear>
 8007082:	4b6b      	ldr	r3, [pc, #428]	@ (8007230 <main+0x264>)
 8007084:	f44f 62fc 	mov.w	r2, #2016	@ 0x7e0
 8007088:	601a      	str	r2, [r3, #0]
 800708a:	e035      	b.n	80070f8 <main+0x12c>
	  	  case 6: lcd_clear(CYAN); g_back_color = CYAN; break;
 800708c:	f240 70ff 	movw	r0, #2047	@ 0x7ff
 8007090:	f7ff fce8 	bl	8006a64 <lcd_clear>
 8007094:	4b66      	ldr	r3, [pc, #408]	@ (8007230 <main+0x264>)
 8007096:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 800709a:	601a      	str	r2, [r3, #0]
 800709c:	e02c      	b.n	80070f8 <main+0x12c>
	  	  case 7: lcd_clear(YELLOW); g_back_color = YELLOW; break;
 800709e:	f64f 70e0 	movw	r0, #65504	@ 0xffe0
 80070a2:	f7ff fcdf 	bl	8006a64 <lcd_clear>
 80070a6:	4b62      	ldr	r3, [pc, #392]	@ (8007230 <main+0x264>)
 80070a8:	f64f 72e0 	movw	r2, #65504	@ 0xffe0
 80070ac:	601a      	str	r2, [r3, #0]
 80070ae:	e023      	b.n	80070f8 <main+0x12c>
	  	  case 8: lcd_clear(BRRED); g_back_color = BRRED; break;
 80070b0:	f64f 4007 	movw	r0, #64519	@ 0xfc07
 80070b4:	f7ff fcd6 	bl	8006a64 <lcd_clear>
 80070b8:	4b5d      	ldr	r3, [pc, #372]	@ (8007230 <main+0x264>)
 80070ba:	f64f 4207 	movw	r2, #64519	@ 0xfc07
 80070be:	601a      	str	r2, [r3, #0]
 80070c0:	e01a      	b.n	80070f8 <main+0x12c>
	  	  case 9: lcd_clear(GRAY); g_back_color = GRAY; break;
 80070c2:	f248 4030 	movw	r0, #33840	@ 0x8430
 80070c6:	f7ff fccd 	bl	8006a64 <lcd_clear>
 80070ca:	4b59      	ldr	r3, [pc, #356]	@ (8007230 <main+0x264>)
 80070cc:	f248 4230 	movw	r2, #33840	@ 0x8430
 80070d0:	601a      	str	r2, [r3, #0]
 80070d2:	e011      	b.n	80070f8 <main+0x12c>
	  	  case 10: lcd_clear(LGRAY); g_back_color = LGRAY; break;
 80070d4:	f24c 6018 	movw	r0, #50712	@ 0xc618
 80070d8:	f7ff fcc4 	bl	8006a64 <lcd_clear>
 80070dc:	4b54      	ldr	r3, [pc, #336]	@ (8007230 <main+0x264>)
 80070de:	f24c 6218 	movw	r2, #50712	@ 0xc618
 80070e2:	601a      	str	r2, [r3, #0]
 80070e4:	e008      	b.n	80070f8 <main+0x12c>
	  	  case 11: lcd_clear(BROWN); g_back_color = BROWN; break;
 80070e6:	f64b 4040 	movw	r0, #48192	@ 0xbc40
 80070ea:	f7ff fcbb 	bl	8006a64 <lcd_clear>
 80070ee:	4b50      	ldr	r3, [pc, #320]	@ (8007230 <main+0x264>)
 80070f0:	f64b 4240 	movw	r2, #48192	@ 0xbc40
 80070f4:	601a      	str	r2, [r3, #0]
 80070f6:	bf00      	nop
	  	  }//end of switch

	  lcd_show_string(30, 40, 200, 24, 24, "Mini STM32 ^_^", RED);
 80070f8:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80070fc:	9302      	str	r3, [sp, #8]
 80070fe:	4b4d      	ldr	r3, [pc, #308]	@ (8007234 <main+0x268>)
 8007100:	9301      	str	r3, [sp, #4]
 8007102:	2318      	movs	r3, #24
 8007104:	9300      	str	r3, [sp, #0]
 8007106:	2318      	movs	r3, #24
 8007108:	22c8      	movs	r2, #200	@ 0xc8
 800710a:	2128      	movs	r1, #40	@ 0x28
 800710c:	201e      	movs	r0, #30
 800710e:	f7ff ff0d 	bl	8006f2c <lcd_show_string>
	  lcd_show_string(30, 70, 200, 16, 16, "TFTLCD TEST", RED);
 8007112:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8007116:	9302      	str	r3, [sp, #8]
 8007118:	4b47      	ldr	r3, [pc, #284]	@ (8007238 <main+0x26c>)
 800711a:	9301      	str	r3, [sp, #4]
 800711c:	2310      	movs	r3, #16
 800711e:	9300      	str	r3, [sp, #0]
 8007120:	2310      	movs	r3, #16
 8007122:	22c8      	movs	r2, #200	@ 0xc8
 8007124:	2146      	movs	r1, #70	@ 0x46
 8007126:	201e      	movs	r0, #30
 8007128:	f7ff ff00 	bl	8006f2c <lcd_show_string>
	  /* Code of showing address of GPIOA->CRL (represented in hexadecimal) BEGIN */
	  // lcd_show_string(30, 90, 200, 16, 16, "addr = 0x", RED);
	  lcd_show_string(30, 90, 100, 16, 16, "addr = 0x", RED);
 800712c:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8007130:	9302      	str	r3, [sp, #8]
 8007132:	4b42      	ldr	r3, [pc, #264]	@ (800723c <main+0x270>)
 8007134:	9301      	str	r3, [sp, #4]
 8007136:	2310      	movs	r3, #16
 8007138:	9300      	str	r3, [sp, #0]
 800713a:	2310      	movs	r3, #16
 800713c:	2264      	movs	r2, #100	@ 0x64
 800713e:	215a      	movs	r1, #90	@ 0x5a
 8007140:	201e      	movs	r0, #30
 8007142:	f7ff fef3 	bl	8006f2c <lcd_show_string>
	  char hex[17] = "0123456789ABCDEF";
 8007146:	4b3e      	ldr	r3, [pc, #248]	@ (8007240 <main+0x274>)
 8007148:	463c      	mov	r4, r7
 800714a:	461d      	mov	r5, r3
 800714c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800714e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007150:	682b      	ldr	r3, [r5, #0]
 8007152:	7023      	strb	r3, [r4, #0]
	  int i = 7, x = &GPIOA->CRL;
 8007154:	2307      	movs	r3, #7
 8007156:	627b      	str	r3, [r7, #36]	@ 0x24
 8007158:	4b3a      	ldr	r3, [pc, #232]	@ (8007244 <main+0x278>)
 800715a:	623b      	str	r3, [r7, #32]
	  char num[i + 2];
 800715c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800715e:	1c99      	adds	r1, r3, #2
 8007160:	466b      	mov	r3, sp
 8007162:	461c      	mov	r4, r3
 8007164:	1e4b      	subs	r3, r1, #1
 8007166:	61bb      	str	r3, [r7, #24]
 8007168:	460a      	mov	r2, r1
 800716a:	2300      	movs	r3, #0
 800716c:	4690      	mov	r8, r2
 800716e:	4699      	mov	r9, r3
 8007170:	f04f 0200 	mov.w	r2, #0
 8007174:	f04f 0300 	mov.w	r3, #0
 8007178:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800717c:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8007180:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8007184:	460a      	mov	r2, r1
 8007186:	2300      	movs	r3, #0
 8007188:	4692      	mov	sl, r2
 800718a:	469b      	mov	fp, r3
 800718c:	f04f 0200 	mov.w	r2, #0
 8007190:	f04f 0300 	mov.w	r3, #0
 8007194:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8007198:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800719c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80071a0:	460b      	mov	r3, r1
 80071a2:	3307      	adds	r3, #7
 80071a4:	08db      	lsrs	r3, r3, #3
 80071a6:	00db      	lsls	r3, r3, #3
 80071a8:	ebad 0d03 	sub.w	sp, sp, r3
 80071ac:	ab04      	add	r3, sp, #16
 80071ae:	3300      	adds	r3, #0
 80071b0:	617b      	str	r3, [r7, #20]
	  while (i >= 0) {
 80071b2:	e00e      	b.n	80071d2 <main+0x206>
		  num[i--] = hex[x & 0xF];
 80071b4:	6a3b      	ldr	r3, [r7, #32]
 80071b6:	f003 020f 	and.w	r2, r3, #15
 80071ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80071bc:	1e59      	subs	r1, r3, #1
 80071be:	6279      	str	r1, [r7, #36]	@ 0x24
 80071c0:	3228      	adds	r2, #40	@ 0x28
 80071c2:	443a      	add	r2, r7
 80071c4:	f812 1c28 	ldrb.w	r1, [r2, #-40]
 80071c8:	697a      	ldr	r2, [r7, #20]
 80071ca:	54d1      	strb	r1, [r2, r3]
		  x = x >> 4;
 80071cc:	6a3b      	ldr	r3, [r7, #32]
 80071ce:	111b      	asrs	r3, r3, #4
 80071d0:	623b      	str	r3, [r7, #32]
	  while (i >= 0) {
 80071d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80071d4:	2b00      	cmp	r3, #0
 80071d6:	daed      	bge.n	80071b4 <main+0x1e8>
	  }
	  lcd_show_string(102, 90, 60, 16, 16, num, RED);
 80071d8:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80071dc:	9302      	str	r3, [sp, #8]
 80071de:	697b      	ldr	r3, [r7, #20]
 80071e0:	9301      	str	r3, [sp, #4]
 80071e2:	2310      	movs	r3, #16
 80071e4:	9300      	str	r3, [sp, #0]
 80071e6:	2310      	movs	r3, #16
 80071e8:	223c      	movs	r2, #60	@ 0x3c
 80071ea:	215a      	movs	r1, #90	@ 0x5a
 80071ec:	2066      	movs	r0, #102	@ 0x66
 80071ee:	f7ff fe9d 	bl	8006f2c <lcd_show_string>
	  /* Code of showing address of GPIOA->CRL (represented in hexadecimal) END */

	  lcd_draw_rectangle(30, 150, 210, 190, BLACK);
 80071f2:	2300      	movs	r3, #0
 80071f4:	9300      	str	r3, [sp, #0]
 80071f6:	23be      	movs	r3, #190	@ 0xbe
 80071f8:	22d2      	movs	r2, #210	@ 0xd2
 80071fa:	2196      	movs	r1, #150	@ 0x96
 80071fc:	201e      	movs	r0, #30
 80071fe:	f7ff fd80 	bl	8006d02 <lcd_draw_rectangle>
	  lcd_fill(31, 151, 209, 189, YELLOW);
 8007202:	f64f 73e0 	movw	r3, #65504	@ 0xffe0
 8007206:	9300      	str	r3, [sp, #0]
 8007208:	23bd      	movs	r3, #189	@ 0xbd
 800720a:	22d1      	movs	r2, #209	@ 0xd1
 800720c:	2197      	movs	r1, #151	@ 0x97
 800720e:	201f      	movs	r0, #31
 8007210:	f7ff fc84 	bl	8006b1c <lcd_fill>

	  x++;
 8007214:	6a3b      	ldr	r3, [r7, #32]
 8007216:	3301      	adds	r3, #1
 8007218:	623b      	str	r3, [r7, #32]
	  if (x == 12)
 800721a:	6a3b      	ldr	r3, [r7, #32]
 800721c:	2b0c      	cmp	r3, #12
 800721e:	d101      	bne.n	8007224 <main+0x258>
	  	  x = 0;
 8007220:	2300      	movs	r3, #0
 8007222:	623b      	str	r3, [r7, #32]

	  HAL_Delay(2000);
 8007224:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8007228:	f000 f946 	bl	80074b8 <HAL_Delay>
 800722c:	46a5      	mov	sp, r4
  {
 800722e:	e6db      	b.n	8006fe8 <main+0x1c>
 8007230:	20000000 	.word	0x20000000
 8007234:	08008260 	.word	0x08008260
 8007238:	08008270 	.word	0x08008270
 800723c:	0800827c 	.word	0x0800827c
 8007240:	08008288 	.word	0x08008288
 8007244:	40010800 	.word	0x40010800

08007248 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8007248:	b580      	push	{r7, lr}
 800724a:	b090      	sub	sp, #64	@ 0x40
 800724c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800724e:	f107 0318 	add.w	r3, r7, #24
 8007252:	2228      	movs	r2, #40	@ 0x28
 8007254:	2100      	movs	r1, #0
 8007256:	4618      	mov	r0, r3
 8007258:	f000 ffca 	bl	80081f0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800725c:	1d3b      	adds	r3, r7, #4
 800725e:	2200      	movs	r2, #0
 8007260:	601a      	str	r2, [r3, #0]
 8007262:	605a      	str	r2, [r3, #4]
 8007264:	609a      	str	r2, [r3, #8]
 8007266:	60da      	str	r2, [r3, #12]
 8007268:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800726a:	2301      	movs	r3, #1
 800726c:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800726e:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8007272:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8007274:	2300      	movs	r3, #0
 8007276:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8007278:	2301      	movs	r3, #1
 800727a:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800727c:	2302      	movs	r3, #2
 800727e:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8007280:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8007284:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8007286:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 800728a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800728c:	f107 0318 	add.w	r3, r7, #24
 8007290:	4618      	mov	r0, r3
 8007292:	f000 fbc5 	bl	8007a20 <HAL_RCC_OscConfig>
 8007296:	4603      	mov	r3, r0
 8007298:	2b00      	cmp	r3, #0
 800729a:	d001      	beq.n	80072a0 <SystemClock_Config+0x58>
  {
    Error_Handler();
 800729c:	f000 f819 	bl	80072d2 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80072a0:	230f      	movs	r3, #15
 80072a2:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80072a4:	2302      	movs	r3, #2
 80072a6:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80072a8:	2300      	movs	r3, #0
 80072aa:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80072ac:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80072b0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80072b2:	2300      	movs	r3, #0
 80072b4:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80072b6:	1d3b      	adds	r3, r7, #4
 80072b8:	2102      	movs	r1, #2
 80072ba:	4618      	mov	r0, r3
 80072bc:	f000 fe32 	bl	8007f24 <HAL_RCC_ClockConfig>
 80072c0:	4603      	mov	r3, r0
 80072c2:	2b00      	cmp	r3, #0
 80072c4:	d001      	beq.n	80072ca <SystemClock_Config+0x82>
  {
    Error_Handler();
 80072c6:	f000 f804 	bl	80072d2 <Error_Handler>
  }
}
 80072ca:	bf00      	nop
 80072cc:	3740      	adds	r7, #64	@ 0x40
 80072ce:	46bd      	mov	sp, r7
 80072d0:	bd80      	pop	{r7, pc}

080072d2 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80072d2:	b480      	push	{r7}
 80072d4:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80072d6:	b672      	cpsid	i
}
 80072d8:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80072da:	bf00      	nop
 80072dc:	e7fd      	b.n	80072da <Error_Handler+0x8>
	...

080072e0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80072e0:	b480      	push	{r7}
 80072e2:	b085      	sub	sp, #20
 80072e4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 80072e6:	4b15      	ldr	r3, [pc, #84]	@ (800733c <HAL_MspInit+0x5c>)
 80072e8:	699b      	ldr	r3, [r3, #24]
 80072ea:	4a14      	ldr	r2, [pc, #80]	@ (800733c <HAL_MspInit+0x5c>)
 80072ec:	f043 0301 	orr.w	r3, r3, #1
 80072f0:	6193      	str	r3, [r2, #24]
 80072f2:	4b12      	ldr	r3, [pc, #72]	@ (800733c <HAL_MspInit+0x5c>)
 80072f4:	699b      	ldr	r3, [r3, #24]
 80072f6:	f003 0301 	and.w	r3, r3, #1
 80072fa:	60bb      	str	r3, [r7, #8]
 80072fc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 80072fe:	4b0f      	ldr	r3, [pc, #60]	@ (800733c <HAL_MspInit+0x5c>)
 8007300:	69db      	ldr	r3, [r3, #28]
 8007302:	4a0e      	ldr	r2, [pc, #56]	@ (800733c <HAL_MspInit+0x5c>)
 8007304:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007308:	61d3      	str	r3, [r2, #28]
 800730a:	4b0c      	ldr	r3, [pc, #48]	@ (800733c <HAL_MspInit+0x5c>)
 800730c:	69db      	ldr	r3, [r3, #28]
 800730e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007312:	607b      	str	r3, [r7, #4]
 8007314:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8007316:	4b0a      	ldr	r3, [pc, #40]	@ (8007340 <HAL_MspInit+0x60>)
 8007318:	685b      	ldr	r3, [r3, #4]
 800731a:	60fb      	str	r3, [r7, #12]
 800731c:	68fb      	ldr	r3, [r7, #12]
 800731e:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8007322:	60fb      	str	r3, [r7, #12]
 8007324:	68fb      	ldr	r3, [r7, #12]
 8007326:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800732a:	60fb      	str	r3, [r7, #12]
 800732c:	4a04      	ldr	r2, [pc, #16]	@ (8007340 <HAL_MspInit+0x60>)
 800732e:	68fb      	ldr	r3, [r7, #12]
 8007330:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8007332:	bf00      	nop
 8007334:	3714      	adds	r7, #20
 8007336:	46bd      	mov	sp, r7
 8007338:	bc80      	pop	{r7}
 800733a:	4770      	bx	lr
 800733c:	40021000 	.word	0x40021000
 8007340:	40010000 	.word	0x40010000

08007344 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8007344:	b480      	push	{r7}
 8007346:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8007348:	bf00      	nop
 800734a:	e7fd      	b.n	8007348 <NMI_Handler+0x4>

0800734c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800734c:	b480      	push	{r7}
 800734e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8007350:	bf00      	nop
 8007352:	e7fd      	b.n	8007350 <HardFault_Handler+0x4>

08007354 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8007354:	b480      	push	{r7}
 8007356:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8007358:	bf00      	nop
 800735a:	e7fd      	b.n	8007358 <MemManage_Handler+0x4>

0800735c <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800735c:	b480      	push	{r7}
 800735e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8007360:	bf00      	nop
 8007362:	e7fd      	b.n	8007360 <BusFault_Handler+0x4>

08007364 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8007364:	b480      	push	{r7}
 8007366:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8007368:	bf00      	nop
 800736a:	e7fd      	b.n	8007368 <UsageFault_Handler+0x4>

0800736c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800736c:	b480      	push	{r7}
 800736e:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8007370:	bf00      	nop
 8007372:	46bd      	mov	sp, r7
 8007374:	bc80      	pop	{r7}
 8007376:	4770      	bx	lr

08007378 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8007378:	b480      	push	{r7}
 800737a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800737c:	bf00      	nop
 800737e:	46bd      	mov	sp, r7
 8007380:	bc80      	pop	{r7}
 8007382:	4770      	bx	lr

08007384 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8007384:	b480      	push	{r7}
 8007386:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8007388:	bf00      	nop
 800738a:	46bd      	mov	sp, r7
 800738c:	bc80      	pop	{r7}
 800738e:	4770      	bx	lr

08007390 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8007390:	b580      	push	{r7, lr}
 8007392:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8007394:	f000 f874 	bl	8007480 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8007398:	bf00      	nop
 800739a:	bd80      	pop	{r7, pc}

0800739c <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 800739c:	b480      	push	{r7}
 800739e:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80073a0:	bf00      	nop
 80073a2:	46bd      	mov	sp, r7
 80073a4:	bc80      	pop	{r7}
 80073a6:	4770      	bx	lr

080073a8 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80073a8:	480c      	ldr	r0, [pc, #48]	@ (80073dc <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 80073aa:	490d      	ldr	r1, [pc, #52]	@ (80073e0 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 80073ac:	4a0d      	ldr	r2, [pc, #52]	@ (80073e4 <LoopFillZerobss+0x1a>)
  movs r3, #0
 80073ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80073b0:	e002      	b.n	80073b8 <LoopCopyDataInit>

080073b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80073b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80073b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80073b6:	3304      	adds	r3, #4

080073b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80073b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80073ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80073bc:	d3f9      	bcc.n	80073b2 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80073be:	4a0a      	ldr	r2, [pc, #40]	@ (80073e8 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80073c0:	4c0a      	ldr	r4, [pc, #40]	@ (80073ec <LoopFillZerobss+0x22>)
  movs r3, #0
 80073c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80073c4:	e001      	b.n	80073ca <LoopFillZerobss>

080073c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80073c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80073c8:	3204      	adds	r2, #4

080073ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80073ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80073cc:	d3fb      	bcc.n	80073c6 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 80073ce:	f7ff ffe5 	bl	800739c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80073d2:	f000 ff15 	bl	8008200 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80073d6:	f7ff fdf9 	bl	8006fcc <main>
  bx lr
 80073da:	4770      	bx	lr
  ldr r0, =_sdata
 80073dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80073e0:	20000010 	.word	0x20000010
  ldr r2, =_sidata
 80073e4:	0800b244 	.word	0x0800b244
  ldr r2, =_sbss
 80073e8:	20000010 	.word	0x20000010
  ldr r4, =_ebss
 80073ec:	20000040 	.word	0x20000040

080073f0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80073f0:	e7fe      	b.n	80073f0 <ADC1_2_IRQHandler>
	...

080073f4 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80073f4:	b580      	push	{r7, lr}
 80073f6:	af00      	add	r7, sp, #0
    defined(STM32F102x6) || defined(STM32F102xB) || \
    defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) || \
    defined(STM32F105xC) || defined(STM32F107xC)

  /* Prefetch buffer is not available on value line devices */
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80073f8:	4b08      	ldr	r3, [pc, #32]	@ (800741c <HAL_Init+0x28>)
 80073fa:	681b      	ldr	r3, [r3, #0]
 80073fc:	4a07      	ldr	r2, [pc, #28]	@ (800741c <HAL_Init+0x28>)
 80073fe:	f043 0310 	orr.w	r3, r3, #16
 8007402:	6013      	str	r3, [r2, #0]
#endif
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8007404:	2003      	movs	r0, #3
 8007406:	f000 f92b 	bl	8007660 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800740a:	200f      	movs	r0, #15
 800740c:	f000 f808 	bl	8007420 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8007410:	f7ff ff66 	bl	80072e0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8007414:	2300      	movs	r3, #0
}
 8007416:	4618      	mov	r0, r3
 8007418:	bd80      	pop	{r7, pc}
 800741a:	bf00      	nop
 800741c:	40022000 	.word	0x40022000

08007420 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8007420:	b580      	push	{r7, lr}
 8007422:	b082      	sub	sp, #8
 8007424:	af00      	add	r7, sp, #0
 8007426:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8007428:	4b12      	ldr	r3, [pc, #72]	@ (8007474 <HAL_InitTick+0x54>)
 800742a:	681a      	ldr	r2, [r3, #0]
 800742c:	4b12      	ldr	r3, [pc, #72]	@ (8007478 <HAL_InitTick+0x58>)
 800742e:	781b      	ldrb	r3, [r3, #0]
 8007430:	4619      	mov	r1, r3
 8007432:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8007436:	fbb3 f3f1 	udiv	r3, r3, r1
 800743a:	fbb2 f3f3 	udiv	r3, r2, r3
 800743e:	4618      	mov	r0, r3
 8007440:	f000 f935 	bl	80076ae <HAL_SYSTICK_Config>
 8007444:	4603      	mov	r3, r0
 8007446:	2b00      	cmp	r3, #0
 8007448:	d001      	beq.n	800744e <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800744a:	2301      	movs	r3, #1
 800744c:	e00e      	b.n	800746c <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800744e:	687b      	ldr	r3, [r7, #4]
 8007450:	2b0f      	cmp	r3, #15
 8007452:	d80a      	bhi.n	800746a <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8007454:	2200      	movs	r2, #0
 8007456:	6879      	ldr	r1, [r7, #4]
 8007458:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800745c:	f000 f90b 	bl	8007676 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8007460:	4a06      	ldr	r2, [pc, #24]	@ (800747c <HAL_InitTick+0x5c>)
 8007462:	687b      	ldr	r3, [r7, #4]
 8007464:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8007466:	2300      	movs	r3, #0
 8007468:	e000      	b.n	800746c <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800746a:	2301      	movs	r3, #1
}
 800746c:	4618      	mov	r0, r3
 800746e:	3708      	adds	r7, #8
 8007470:	46bd      	mov	sp, r7
 8007472:	bd80      	pop	{r7, pc}
 8007474:	20000004 	.word	0x20000004
 8007478:	2000000c 	.word	0x2000000c
 800747c:	20000008 	.word	0x20000008

08007480 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8007480:	b480      	push	{r7}
 8007482:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8007484:	4b05      	ldr	r3, [pc, #20]	@ (800749c <HAL_IncTick+0x1c>)
 8007486:	781b      	ldrb	r3, [r3, #0]
 8007488:	461a      	mov	r2, r3
 800748a:	4b05      	ldr	r3, [pc, #20]	@ (80074a0 <HAL_IncTick+0x20>)
 800748c:	681b      	ldr	r3, [r3, #0]
 800748e:	4413      	add	r3, r2
 8007490:	4a03      	ldr	r2, [pc, #12]	@ (80074a0 <HAL_IncTick+0x20>)
 8007492:	6013      	str	r3, [r2, #0]
}
 8007494:	bf00      	nop
 8007496:	46bd      	mov	sp, r7
 8007498:	bc80      	pop	{r7}
 800749a:	4770      	bx	lr
 800749c:	2000000c 	.word	0x2000000c
 80074a0:	2000003c 	.word	0x2000003c

080074a4 <HAL_GetTick>:
  * @note  This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80074a4:	b480      	push	{r7}
 80074a6:	af00      	add	r7, sp, #0
  return uwTick;
 80074a8:	4b02      	ldr	r3, [pc, #8]	@ (80074b4 <HAL_GetTick+0x10>)
 80074aa:	681b      	ldr	r3, [r3, #0]
}
 80074ac:	4618      	mov	r0, r3
 80074ae:	46bd      	mov	sp, r7
 80074b0:	bc80      	pop	{r7}
 80074b2:	4770      	bx	lr
 80074b4:	2000003c 	.word	0x2000003c

080074b8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80074b8:	b580      	push	{r7, lr}
 80074ba:	b084      	sub	sp, #16
 80074bc:	af00      	add	r7, sp, #0
 80074be:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80074c0:	f7ff fff0 	bl	80074a4 <HAL_GetTick>
 80074c4:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 80074c6:	687b      	ldr	r3, [r7, #4]
 80074c8:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80074ca:	68fb      	ldr	r3, [r7, #12]
 80074cc:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80074d0:	d005      	beq.n	80074de <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 80074d2:	4b0a      	ldr	r3, [pc, #40]	@ (80074fc <HAL_Delay+0x44>)
 80074d4:	781b      	ldrb	r3, [r3, #0]
 80074d6:	461a      	mov	r2, r3
 80074d8:	68fb      	ldr	r3, [r7, #12]
 80074da:	4413      	add	r3, r2
 80074dc:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80074de:	bf00      	nop
 80074e0:	f7ff ffe0 	bl	80074a4 <HAL_GetTick>
 80074e4:	4602      	mov	r2, r0
 80074e6:	68bb      	ldr	r3, [r7, #8]
 80074e8:	1ad3      	subs	r3, r2, r3
 80074ea:	68fa      	ldr	r2, [r7, #12]
 80074ec:	429a      	cmp	r2, r3
 80074ee:	d8f7      	bhi.n	80074e0 <HAL_Delay+0x28>
  {
  }
}
 80074f0:	bf00      	nop
 80074f2:	bf00      	nop
 80074f4:	3710      	adds	r7, #16
 80074f6:	46bd      	mov	sp, r7
 80074f8:	bd80      	pop	{r7, pc}
 80074fa:	bf00      	nop
 80074fc:	2000000c 	.word	0x2000000c

08007500 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8007500:	b480      	push	{r7}
 8007502:	b085      	sub	sp, #20
 8007504:	af00      	add	r7, sp, #0
 8007506:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8007508:	687b      	ldr	r3, [r7, #4]
 800750a:	f003 0307 	and.w	r3, r3, #7
 800750e:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8007510:	4b0c      	ldr	r3, [pc, #48]	@ (8007544 <__NVIC_SetPriorityGrouping+0x44>)
 8007512:	68db      	ldr	r3, [r3, #12]
 8007514:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007516:	68ba      	ldr	r2, [r7, #8]
 8007518:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800751c:	4013      	ands	r3, r2
 800751e:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 8007520:	68fb      	ldr	r3, [r7, #12]
 8007522:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8007524:	68bb      	ldr	r3, [r7, #8]
 8007526:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8007528:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800752c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007530:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8007532:	4a04      	ldr	r2, [pc, #16]	@ (8007544 <__NVIC_SetPriorityGrouping+0x44>)
 8007534:	68bb      	ldr	r3, [r7, #8]
 8007536:	60d3      	str	r3, [r2, #12]
}
 8007538:	bf00      	nop
 800753a:	3714      	adds	r7, #20
 800753c:	46bd      	mov	sp, r7
 800753e:	bc80      	pop	{r7}
 8007540:	4770      	bx	lr
 8007542:	bf00      	nop
 8007544:	e000ed00 	.word	0xe000ed00

08007548 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8007548:	b480      	push	{r7}
 800754a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800754c:	4b04      	ldr	r3, [pc, #16]	@ (8007560 <__NVIC_GetPriorityGrouping+0x18>)
 800754e:	68db      	ldr	r3, [r3, #12]
 8007550:	0a1b      	lsrs	r3, r3, #8
 8007552:	f003 0307 	and.w	r3, r3, #7
}
 8007556:	4618      	mov	r0, r3
 8007558:	46bd      	mov	sp, r7
 800755a:	bc80      	pop	{r7}
 800755c:	4770      	bx	lr
 800755e:	bf00      	nop
 8007560:	e000ed00 	.word	0xe000ed00

08007564 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8007564:	b480      	push	{r7}
 8007566:	b083      	sub	sp, #12
 8007568:	af00      	add	r7, sp, #0
 800756a:	4603      	mov	r3, r0
 800756c:	6039      	str	r1, [r7, #0]
 800756e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8007570:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007574:	2b00      	cmp	r3, #0
 8007576:	db0a      	blt.n	800758e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007578:	683b      	ldr	r3, [r7, #0]
 800757a:	b2da      	uxtb	r2, r3
 800757c:	490c      	ldr	r1, [pc, #48]	@ (80075b0 <__NVIC_SetPriority+0x4c>)
 800757e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007582:	0112      	lsls	r2, r2, #4
 8007584:	b2d2      	uxtb	r2, r2
 8007586:	440b      	add	r3, r1
 8007588:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800758c:	e00a      	b.n	80075a4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800758e:	683b      	ldr	r3, [r7, #0]
 8007590:	b2da      	uxtb	r2, r3
 8007592:	4908      	ldr	r1, [pc, #32]	@ (80075b4 <__NVIC_SetPriority+0x50>)
 8007594:	79fb      	ldrb	r3, [r7, #7]
 8007596:	f003 030f 	and.w	r3, r3, #15
 800759a:	3b04      	subs	r3, #4
 800759c:	0112      	lsls	r2, r2, #4
 800759e:	b2d2      	uxtb	r2, r2
 80075a0:	440b      	add	r3, r1
 80075a2:	761a      	strb	r2, [r3, #24]
}
 80075a4:	bf00      	nop
 80075a6:	370c      	adds	r7, #12
 80075a8:	46bd      	mov	sp, r7
 80075aa:	bc80      	pop	{r7}
 80075ac:	4770      	bx	lr
 80075ae:	bf00      	nop
 80075b0:	e000e100 	.word	0xe000e100
 80075b4:	e000ed00 	.word	0xe000ed00

080075b8 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80075b8:	b480      	push	{r7}
 80075ba:	b089      	sub	sp, #36	@ 0x24
 80075bc:	af00      	add	r7, sp, #0
 80075be:	60f8      	str	r0, [r7, #12]
 80075c0:	60b9      	str	r1, [r7, #8]
 80075c2:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80075c4:	68fb      	ldr	r3, [r7, #12]
 80075c6:	f003 0307 	and.w	r3, r3, #7
 80075ca:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80075cc:	69fb      	ldr	r3, [r7, #28]
 80075ce:	f1c3 0307 	rsb	r3, r3, #7
 80075d2:	2b04      	cmp	r3, #4
 80075d4:	bf28      	it	cs
 80075d6:	2304      	movcs	r3, #4
 80075d8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80075da:	69fb      	ldr	r3, [r7, #28]
 80075dc:	3304      	adds	r3, #4
 80075de:	2b06      	cmp	r3, #6
 80075e0:	d902      	bls.n	80075e8 <NVIC_EncodePriority+0x30>
 80075e2:	69fb      	ldr	r3, [r7, #28]
 80075e4:	3b03      	subs	r3, #3
 80075e6:	e000      	b.n	80075ea <NVIC_EncodePriority+0x32>
 80075e8:	2300      	movs	r3, #0
 80075ea:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80075ec:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80075f0:	69bb      	ldr	r3, [r7, #24]
 80075f2:	fa02 f303 	lsl.w	r3, r2, r3
 80075f6:	43da      	mvns	r2, r3
 80075f8:	68bb      	ldr	r3, [r7, #8]
 80075fa:	401a      	ands	r2, r3
 80075fc:	697b      	ldr	r3, [r7, #20]
 80075fe:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8007600:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8007604:	697b      	ldr	r3, [r7, #20]
 8007606:	fa01 f303 	lsl.w	r3, r1, r3
 800760a:	43d9      	mvns	r1, r3
 800760c:	687b      	ldr	r3, [r7, #4]
 800760e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007610:	4313      	orrs	r3, r2
         );
}
 8007612:	4618      	mov	r0, r3
 8007614:	3724      	adds	r7, #36	@ 0x24
 8007616:	46bd      	mov	sp, r7
 8007618:	bc80      	pop	{r7}
 800761a:	4770      	bx	lr

0800761c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800761c:	b580      	push	{r7, lr}
 800761e:	b082      	sub	sp, #8
 8007620:	af00      	add	r7, sp, #0
 8007622:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8007624:	687b      	ldr	r3, [r7, #4]
 8007626:	3b01      	subs	r3, #1
 8007628:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800762c:	d301      	bcc.n	8007632 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800762e:	2301      	movs	r3, #1
 8007630:	e00f      	b.n	8007652 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8007632:	4a0a      	ldr	r2, [pc, #40]	@ (800765c <SysTick_Config+0x40>)
 8007634:	687b      	ldr	r3, [r7, #4]
 8007636:	3b01      	subs	r3, #1
 8007638:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800763a:	210f      	movs	r1, #15
 800763c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8007640:	f7ff ff90 	bl	8007564 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8007644:	4b05      	ldr	r3, [pc, #20]	@ (800765c <SysTick_Config+0x40>)
 8007646:	2200      	movs	r2, #0
 8007648:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800764a:	4b04      	ldr	r3, [pc, #16]	@ (800765c <SysTick_Config+0x40>)
 800764c:	2207      	movs	r2, #7
 800764e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8007650:	2300      	movs	r3, #0
}
 8007652:	4618      	mov	r0, r3
 8007654:	3708      	adds	r7, #8
 8007656:	46bd      	mov	sp, r7
 8007658:	bd80      	pop	{r7, pc}
 800765a:	bf00      	nop
 800765c:	e000e010 	.word	0xe000e010

08007660 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8007660:	b580      	push	{r7, lr}
 8007662:	b082      	sub	sp, #8
 8007664:	af00      	add	r7, sp, #0
 8007666:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8007668:	6878      	ldr	r0, [r7, #4]
 800766a:	f7ff ff49 	bl	8007500 <__NVIC_SetPriorityGrouping>
}
 800766e:	bf00      	nop
 8007670:	3708      	adds	r7, #8
 8007672:	46bd      	mov	sp, r7
 8007674:	bd80      	pop	{r7, pc}

08007676 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8007676:	b580      	push	{r7, lr}
 8007678:	b086      	sub	sp, #24
 800767a:	af00      	add	r7, sp, #0
 800767c:	4603      	mov	r3, r0
 800767e:	60b9      	str	r1, [r7, #8]
 8007680:	607a      	str	r2, [r7, #4]
 8007682:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8007684:	2300      	movs	r3, #0
 8007686:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8007688:	f7ff ff5e 	bl	8007548 <__NVIC_GetPriorityGrouping>
 800768c:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 800768e:	687a      	ldr	r2, [r7, #4]
 8007690:	68b9      	ldr	r1, [r7, #8]
 8007692:	6978      	ldr	r0, [r7, #20]
 8007694:	f7ff ff90 	bl	80075b8 <NVIC_EncodePriority>
 8007698:	4602      	mov	r2, r0
 800769a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800769e:	4611      	mov	r1, r2
 80076a0:	4618      	mov	r0, r3
 80076a2:	f7ff ff5f 	bl	8007564 <__NVIC_SetPriority>
}
 80076a6:	bf00      	nop
 80076a8:	3718      	adds	r7, #24
 80076aa:	46bd      	mov	sp, r7
 80076ac:	bd80      	pop	{r7, pc}

080076ae <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80076ae:	b580      	push	{r7, lr}
 80076b0:	b082      	sub	sp, #8
 80076b2:	af00      	add	r7, sp, #0
 80076b4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80076b6:	6878      	ldr	r0, [r7, #4]
 80076b8:	f7ff ffb0 	bl	800761c <SysTick_Config>
 80076bc:	4603      	mov	r3, r0
}
 80076be:	4618      	mov	r0, r3
 80076c0:	3708      	adds	r7, #8
 80076c2:	46bd      	mov	sp, r7
 80076c4:	bd80      	pop	{r7, pc}
	...

080076c8 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80076c8:	b480      	push	{r7}
 80076ca:	b08b      	sub	sp, #44	@ 0x2c
 80076cc:	af00      	add	r7, sp, #0
 80076ce:	6078      	str	r0, [r7, #4]
 80076d0:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 80076d2:	2300      	movs	r3, #0
 80076d4:	627b      	str	r3, [r7, #36]	@ 0x24
  uint32_t ioposition;
  uint32_t iocurrent;
  uint32_t temp;
  uint32_t config = 0x00u;
 80076d6:	2300      	movs	r3, #0
 80076d8:	623b      	str	r3, [r7, #32]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80076da:	e179      	b.n	80079d0 <HAL_GPIO_Init+0x308>
  {
    /* Get the IO position */
    ioposition = (0x01uL << position);
 80076dc:	2201      	movs	r2, #1
 80076de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80076e0:	fa02 f303 	lsl.w	r3, r2, r3
 80076e4:	61fb      	str	r3, [r7, #28]

    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80076e6:	683b      	ldr	r3, [r7, #0]
 80076e8:	681b      	ldr	r3, [r3, #0]
 80076ea:	69fa      	ldr	r2, [r7, #28]
 80076ec:	4013      	ands	r3, r2
 80076ee:	61bb      	str	r3, [r7, #24]

    if (iocurrent == ioposition)
 80076f0:	69ba      	ldr	r2, [r7, #24]
 80076f2:	69fb      	ldr	r3, [r7, #28]
 80076f4:	429a      	cmp	r2, r3
 80076f6:	f040 8168 	bne.w	80079ca <HAL_GPIO_Init+0x302>
    {
      /* Check the Alternate function parameters */
      assert_param(IS_GPIO_AF_INSTANCE(GPIOx));

      /* Based on the required mode, filling config variable with MODEy[1:0] and CNFy[3:2] corresponding bits */
      switch (GPIO_Init->Mode)
 80076fa:	683b      	ldr	r3, [r7, #0]
 80076fc:	685b      	ldr	r3, [r3, #4]
 80076fe:	4a96      	ldr	r2, [pc, #600]	@ (8007958 <HAL_GPIO_Init+0x290>)
 8007700:	4293      	cmp	r3, r2
 8007702:	d05e      	beq.n	80077c2 <HAL_GPIO_Init+0xfa>
 8007704:	4a94      	ldr	r2, [pc, #592]	@ (8007958 <HAL_GPIO_Init+0x290>)
 8007706:	4293      	cmp	r3, r2
 8007708:	d875      	bhi.n	80077f6 <HAL_GPIO_Init+0x12e>
 800770a:	4a94      	ldr	r2, [pc, #592]	@ (800795c <HAL_GPIO_Init+0x294>)
 800770c:	4293      	cmp	r3, r2
 800770e:	d058      	beq.n	80077c2 <HAL_GPIO_Init+0xfa>
 8007710:	4a92      	ldr	r2, [pc, #584]	@ (800795c <HAL_GPIO_Init+0x294>)
 8007712:	4293      	cmp	r3, r2
 8007714:	d86f      	bhi.n	80077f6 <HAL_GPIO_Init+0x12e>
 8007716:	4a92      	ldr	r2, [pc, #584]	@ (8007960 <HAL_GPIO_Init+0x298>)
 8007718:	4293      	cmp	r3, r2
 800771a:	d052      	beq.n	80077c2 <HAL_GPIO_Init+0xfa>
 800771c:	4a90      	ldr	r2, [pc, #576]	@ (8007960 <HAL_GPIO_Init+0x298>)
 800771e:	4293      	cmp	r3, r2
 8007720:	d869      	bhi.n	80077f6 <HAL_GPIO_Init+0x12e>
 8007722:	4a90      	ldr	r2, [pc, #576]	@ (8007964 <HAL_GPIO_Init+0x29c>)
 8007724:	4293      	cmp	r3, r2
 8007726:	d04c      	beq.n	80077c2 <HAL_GPIO_Init+0xfa>
 8007728:	4a8e      	ldr	r2, [pc, #568]	@ (8007964 <HAL_GPIO_Init+0x29c>)
 800772a:	4293      	cmp	r3, r2
 800772c:	d863      	bhi.n	80077f6 <HAL_GPIO_Init+0x12e>
 800772e:	4a8e      	ldr	r2, [pc, #568]	@ (8007968 <HAL_GPIO_Init+0x2a0>)
 8007730:	4293      	cmp	r3, r2
 8007732:	d046      	beq.n	80077c2 <HAL_GPIO_Init+0xfa>
 8007734:	4a8c      	ldr	r2, [pc, #560]	@ (8007968 <HAL_GPIO_Init+0x2a0>)
 8007736:	4293      	cmp	r3, r2
 8007738:	d85d      	bhi.n	80077f6 <HAL_GPIO_Init+0x12e>
 800773a:	2b12      	cmp	r3, #18
 800773c:	d82a      	bhi.n	8007794 <HAL_GPIO_Init+0xcc>
 800773e:	2b12      	cmp	r3, #18
 8007740:	d859      	bhi.n	80077f6 <HAL_GPIO_Init+0x12e>
 8007742:	a201      	add	r2, pc, #4	@ (adr r2, 8007748 <HAL_GPIO_Init+0x80>)
 8007744:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007748:	080077c3 	.word	0x080077c3
 800774c:	0800779d 	.word	0x0800779d
 8007750:	080077af 	.word	0x080077af
 8007754:	080077f1 	.word	0x080077f1
 8007758:	080077f7 	.word	0x080077f7
 800775c:	080077f7 	.word	0x080077f7
 8007760:	080077f7 	.word	0x080077f7
 8007764:	080077f7 	.word	0x080077f7
 8007768:	080077f7 	.word	0x080077f7
 800776c:	080077f7 	.word	0x080077f7
 8007770:	080077f7 	.word	0x080077f7
 8007774:	080077f7 	.word	0x080077f7
 8007778:	080077f7 	.word	0x080077f7
 800777c:	080077f7 	.word	0x080077f7
 8007780:	080077f7 	.word	0x080077f7
 8007784:	080077f7 	.word	0x080077f7
 8007788:	080077f7 	.word	0x080077f7
 800778c:	080077a5 	.word	0x080077a5
 8007790:	080077b9 	.word	0x080077b9
 8007794:	4a75      	ldr	r2, [pc, #468]	@ (800796c <HAL_GPIO_Init+0x2a4>)
 8007796:	4293      	cmp	r3, r2
 8007798:	d013      	beq.n	80077c2 <HAL_GPIO_Init+0xfa>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
          break;

        /* Parameters are checked with assert_param */
        default:
          break;
 800779a:	e02c      	b.n	80077f6 <HAL_GPIO_Init+0x12e>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_PP;
 800779c:	683b      	ldr	r3, [r7, #0]
 800779e:	68db      	ldr	r3, [r3, #12]
 80077a0:	623b      	str	r3, [r7, #32]
          break;
 80077a2:	e029      	b.n	80077f8 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_OD;
 80077a4:	683b      	ldr	r3, [r7, #0]
 80077a6:	68db      	ldr	r3, [r3, #12]
 80077a8:	3304      	adds	r3, #4
 80077aa:	623b      	str	r3, [r7, #32]
          break;
 80077ac:	e024      	b.n	80077f8 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_PP;
 80077ae:	683b      	ldr	r3, [r7, #0]
 80077b0:	68db      	ldr	r3, [r3, #12]
 80077b2:	3308      	adds	r3, #8
 80077b4:	623b      	str	r3, [r7, #32]
          break;
 80077b6:	e01f      	b.n	80077f8 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_OD;
 80077b8:	683b      	ldr	r3, [r7, #0]
 80077ba:	68db      	ldr	r3, [r3, #12]
 80077bc:	330c      	adds	r3, #12
 80077be:	623b      	str	r3, [r7, #32]
          break;
 80077c0:	e01a      	b.n	80077f8 <HAL_GPIO_Init+0x130>
          if (GPIO_Init->Pull == GPIO_NOPULL)
 80077c2:	683b      	ldr	r3, [r7, #0]
 80077c4:	689b      	ldr	r3, [r3, #8]
 80077c6:	2b00      	cmp	r3, #0
 80077c8:	d102      	bne.n	80077d0 <HAL_GPIO_Init+0x108>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_FLOATING;
 80077ca:	2304      	movs	r3, #4
 80077cc:	623b      	str	r3, [r7, #32]
          break;
 80077ce:	e013      	b.n	80077f8 <HAL_GPIO_Init+0x130>
          else if (GPIO_Init->Pull == GPIO_PULLUP)
 80077d0:	683b      	ldr	r3, [r7, #0]
 80077d2:	689b      	ldr	r3, [r3, #8]
 80077d4:	2b01      	cmp	r3, #1
 80077d6:	d105      	bne.n	80077e4 <HAL_GPIO_Init+0x11c>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 80077d8:	2308      	movs	r3, #8
 80077da:	623b      	str	r3, [r7, #32]
            GPIOx->BSRR = ioposition;
 80077dc:	687b      	ldr	r3, [r7, #4]
 80077de:	69fa      	ldr	r2, [r7, #28]
 80077e0:	611a      	str	r2, [r3, #16]
          break;
 80077e2:	e009      	b.n	80077f8 <HAL_GPIO_Init+0x130>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 80077e4:	2308      	movs	r3, #8
 80077e6:	623b      	str	r3, [r7, #32]
            GPIOx->BRR = ioposition;
 80077e8:	687b      	ldr	r3, [r7, #4]
 80077ea:	69fa      	ldr	r2, [r7, #28]
 80077ec:	615a      	str	r2, [r3, #20]
          break;
 80077ee:	e003      	b.n	80077f8 <HAL_GPIO_Init+0x130>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
 80077f0:	2300      	movs	r3, #0
 80077f2:	623b      	str	r3, [r7, #32]
          break;
 80077f4:	e000      	b.n	80077f8 <HAL_GPIO_Init+0x130>
          break;
 80077f6:	bf00      	nop
      }

      /* Check if the current bit belongs to first half or last half of the pin count number
       in order to address CRH or CRL register*/
      configregister = (iocurrent < GPIO_PIN_8) ? &GPIOx->CRL     : &GPIOx->CRH;
 80077f8:	69bb      	ldr	r3, [r7, #24]
 80077fa:	2bff      	cmp	r3, #255	@ 0xff
 80077fc:	d801      	bhi.n	8007802 <HAL_GPIO_Init+0x13a>
 80077fe:	687b      	ldr	r3, [r7, #4]
 8007800:	e001      	b.n	8007806 <HAL_GPIO_Init+0x13e>
 8007802:	687b      	ldr	r3, [r7, #4]
 8007804:	3304      	adds	r3, #4
 8007806:	617b      	str	r3, [r7, #20]
      registeroffset = (iocurrent < GPIO_PIN_8) ? (position << 2u) : ((position - 8u) << 2u);
 8007808:	69bb      	ldr	r3, [r7, #24]
 800780a:	2bff      	cmp	r3, #255	@ 0xff
 800780c:	d802      	bhi.n	8007814 <HAL_GPIO_Init+0x14c>
 800780e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007810:	009b      	lsls	r3, r3, #2
 8007812:	e002      	b.n	800781a <HAL_GPIO_Init+0x152>
 8007814:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007816:	3b08      	subs	r3, #8
 8007818:	009b      	lsls	r3, r3, #2
 800781a:	613b      	str	r3, [r7, #16]

      /* Apply the new configuration of the pin to the register */
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 800781c:	697b      	ldr	r3, [r7, #20]
 800781e:	681a      	ldr	r2, [r3, #0]
 8007820:	210f      	movs	r1, #15
 8007822:	693b      	ldr	r3, [r7, #16]
 8007824:	fa01 f303 	lsl.w	r3, r1, r3
 8007828:	43db      	mvns	r3, r3
 800782a:	401a      	ands	r2, r3
 800782c:	6a39      	ldr	r1, [r7, #32]
 800782e:	693b      	ldr	r3, [r7, #16]
 8007830:	fa01 f303 	lsl.w	r3, r1, r3
 8007834:	431a      	orrs	r2, r3
 8007836:	697b      	ldr	r3, [r7, #20]
 8007838:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800783a:	683b      	ldr	r3, [r7, #0]
 800783c:	685b      	ldr	r3, [r3, #4]
 800783e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007842:	2b00      	cmp	r3, #0
 8007844:	f000 80c1 	beq.w	80079ca <HAL_GPIO_Init+0x302>
      {
        /* Enable AFIO Clock */
        __HAL_RCC_AFIO_CLK_ENABLE();
 8007848:	4b49      	ldr	r3, [pc, #292]	@ (8007970 <HAL_GPIO_Init+0x2a8>)
 800784a:	699b      	ldr	r3, [r3, #24]
 800784c:	4a48      	ldr	r2, [pc, #288]	@ (8007970 <HAL_GPIO_Init+0x2a8>)
 800784e:	f043 0301 	orr.w	r3, r3, #1
 8007852:	6193      	str	r3, [r2, #24]
 8007854:	4b46      	ldr	r3, [pc, #280]	@ (8007970 <HAL_GPIO_Init+0x2a8>)
 8007856:	699b      	ldr	r3, [r3, #24]
 8007858:	f003 0301 	and.w	r3, r3, #1
 800785c:	60bb      	str	r3, [r7, #8]
 800785e:	68bb      	ldr	r3, [r7, #8]
        temp = AFIO->EXTICR[position >> 2u];
 8007860:	4a44      	ldr	r2, [pc, #272]	@ (8007974 <HAL_GPIO_Init+0x2ac>)
 8007862:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007864:	089b      	lsrs	r3, r3, #2
 8007866:	3302      	adds	r3, #2
 8007868:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800786c:	60fb      	str	r3, [r7, #12]
        CLEAR_BIT(temp, (0x0Fu) << (4u * (position & 0x03u)));
 800786e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007870:	f003 0303 	and.w	r3, r3, #3
 8007874:	009b      	lsls	r3, r3, #2
 8007876:	220f      	movs	r2, #15
 8007878:	fa02 f303 	lsl.w	r3, r2, r3
 800787c:	43db      	mvns	r3, r3
 800787e:	68fa      	ldr	r2, [r7, #12]
 8007880:	4013      	ands	r3, r2
 8007882:	60fb      	str	r3, [r7, #12]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4u * (position & 0x03u)));
 8007884:	687b      	ldr	r3, [r7, #4]
 8007886:	4a3c      	ldr	r2, [pc, #240]	@ (8007978 <HAL_GPIO_Init+0x2b0>)
 8007888:	4293      	cmp	r3, r2
 800788a:	d01f      	beq.n	80078cc <HAL_GPIO_Init+0x204>
 800788c:	687b      	ldr	r3, [r7, #4]
 800788e:	4a3b      	ldr	r2, [pc, #236]	@ (800797c <HAL_GPIO_Init+0x2b4>)
 8007890:	4293      	cmp	r3, r2
 8007892:	d019      	beq.n	80078c8 <HAL_GPIO_Init+0x200>
 8007894:	687b      	ldr	r3, [r7, #4]
 8007896:	4a3a      	ldr	r2, [pc, #232]	@ (8007980 <HAL_GPIO_Init+0x2b8>)
 8007898:	4293      	cmp	r3, r2
 800789a:	d013      	beq.n	80078c4 <HAL_GPIO_Init+0x1fc>
 800789c:	687b      	ldr	r3, [r7, #4]
 800789e:	4a39      	ldr	r2, [pc, #228]	@ (8007984 <HAL_GPIO_Init+0x2bc>)
 80078a0:	4293      	cmp	r3, r2
 80078a2:	d00d      	beq.n	80078c0 <HAL_GPIO_Init+0x1f8>
 80078a4:	687b      	ldr	r3, [r7, #4]
 80078a6:	4a38      	ldr	r2, [pc, #224]	@ (8007988 <HAL_GPIO_Init+0x2c0>)
 80078a8:	4293      	cmp	r3, r2
 80078aa:	d007      	beq.n	80078bc <HAL_GPIO_Init+0x1f4>
 80078ac:	687b      	ldr	r3, [r7, #4]
 80078ae:	4a37      	ldr	r2, [pc, #220]	@ (800798c <HAL_GPIO_Init+0x2c4>)
 80078b0:	4293      	cmp	r3, r2
 80078b2:	d101      	bne.n	80078b8 <HAL_GPIO_Init+0x1f0>
 80078b4:	2305      	movs	r3, #5
 80078b6:	e00a      	b.n	80078ce <HAL_GPIO_Init+0x206>
 80078b8:	2306      	movs	r3, #6
 80078ba:	e008      	b.n	80078ce <HAL_GPIO_Init+0x206>
 80078bc:	2304      	movs	r3, #4
 80078be:	e006      	b.n	80078ce <HAL_GPIO_Init+0x206>
 80078c0:	2303      	movs	r3, #3
 80078c2:	e004      	b.n	80078ce <HAL_GPIO_Init+0x206>
 80078c4:	2302      	movs	r3, #2
 80078c6:	e002      	b.n	80078ce <HAL_GPIO_Init+0x206>
 80078c8:	2301      	movs	r3, #1
 80078ca:	e000      	b.n	80078ce <HAL_GPIO_Init+0x206>
 80078cc:	2300      	movs	r3, #0
 80078ce:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80078d0:	f002 0203 	and.w	r2, r2, #3
 80078d4:	0092      	lsls	r2, r2, #2
 80078d6:	4093      	lsls	r3, r2
 80078d8:	68fa      	ldr	r2, [r7, #12]
 80078da:	4313      	orrs	r3, r2
 80078dc:	60fb      	str	r3, [r7, #12]
        AFIO->EXTICR[position >> 2u] = temp;
 80078de:	4925      	ldr	r1, [pc, #148]	@ (8007974 <HAL_GPIO_Init+0x2ac>)
 80078e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80078e2:	089b      	lsrs	r3, r3, #2
 80078e4:	3302      	adds	r3, #2
 80078e6:	68fa      	ldr	r2, [r7, #12]
 80078e8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]


        /* Configure the interrupt mask */
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80078ec:	683b      	ldr	r3, [r7, #0]
 80078ee:	685b      	ldr	r3, [r3, #4]
 80078f0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80078f4:	2b00      	cmp	r3, #0
 80078f6:	d006      	beq.n	8007906 <HAL_GPIO_Init+0x23e>
        {
          SET_BIT(EXTI->IMR, iocurrent);
 80078f8:	4b25      	ldr	r3, [pc, #148]	@ (8007990 <HAL_GPIO_Init+0x2c8>)
 80078fa:	681a      	ldr	r2, [r3, #0]
 80078fc:	4924      	ldr	r1, [pc, #144]	@ (8007990 <HAL_GPIO_Init+0x2c8>)
 80078fe:	69bb      	ldr	r3, [r7, #24]
 8007900:	4313      	orrs	r3, r2
 8007902:	600b      	str	r3, [r1, #0]
 8007904:	e006      	b.n	8007914 <HAL_GPIO_Init+0x24c>
        }
        else
        {
          CLEAR_BIT(EXTI->IMR, iocurrent);
 8007906:	4b22      	ldr	r3, [pc, #136]	@ (8007990 <HAL_GPIO_Init+0x2c8>)
 8007908:	681a      	ldr	r2, [r3, #0]
 800790a:	69bb      	ldr	r3, [r7, #24]
 800790c:	43db      	mvns	r3, r3
 800790e:	4920      	ldr	r1, [pc, #128]	@ (8007990 <HAL_GPIO_Init+0x2c8>)
 8007910:	4013      	ands	r3, r2
 8007912:	600b      	str	r3, [r1, #0]
        }

        /* Configure the event mask */
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8007914:	683b      	ldr	r3, [r7, #0]
 8007916:	685b      	ldr	r3, [r3, #4]
 8007918:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800791c:	2b00      	cmp	r3, #0
 800791e:	d006      	beq.n	800792e <HAL_GPIO_Init+0x266>
        {
          SET_BIT(EXTI->EMR, iocurrent);
 8007920:	4b1b      	ldr	r3, [pc, #108]	@ (8007990 <HAL_GPIO_Init+0x2c8>)
 8007922:	685a      	ldr	r2, [r3, #4]
 8007924:	491a      	ldr	r1, [pc, #104]	@ (8007990 <HAL_GPIO_Init+0x2c8>)
 8007926:	69bb      	ldr	r3, [r7, #24]
 8007928:	4313      	orrs	r3, r2
 800792a:	604b      	str	r3, [r1, #4]
 800792c:	e006      	b.n	800793c <HAL_GPIO_Init+0x274>
        }
        else
        {
          CLEAR_BIT(EXTI->EMR, iocurrent);
 800792e:	4b18      	ldr	r3, [pc, #96]	@ (8007990 <HAL_GPIO_Init+0x2c8>)
 8007930:	685a      	ldr	r2, [r3, #4]
 8007932:	69bb      	ldr	r3, [r7, #24]
 8007934:	43db      	mvns	r3, r3
 8007936:	4916      	ldr	r1, [pc, #88]	@ (8007990 <HAL_GPIO_Init+0x2c8>)
 8007938:	4013      	ands	r3, r2
 800793a:	604b      	str	r3, [r1, #4]
        }

        /* Enable or disable the rising trigger */
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800793c:	683b      	ldr	r3, [r7, #0]
 800793e:	685b      	ldr	r3, [r3, #4]
 8007940:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8007944:	2b00      	cmp	r3, #0
 8007946:	d025      	beq.n	8007994 <HAL_GPIO_Init+0x2cc>
        {
          SET_BIT(EXTI->RTSR, iocurrent);
 8007948:	4b11      	ldr	r3, [pc, #68]	@ (8007990 <HAL_GPIO_Init+0x2c8>)
 800794a:	689a      	ldr	r2, [r3, #8]
 800794c:	4910      	ldr	r1, [pc, #64]	@ (8007990 <HAL_GPIO_Init+0x2c8>)
 800794e:	69bb      	ldr	r3, [r7, #24]
 8007950:	4313      	orrs	r3, r2
 8007952:	608b      	str	r3, [r1, #8]
 8007954:	e025      	b.n	80079a2 <HAL_GPIO_Init+0x2da>
 8007956:	bf00      	nop
 8007958:	10320000 	.word	0x10320000
 800795c:	10310000 	.word	0x10310000
 8007960:	10220000 	.word	0x10220000
 8007964:	10210000 	.word	0x10210000
 8007968:	10120000 	.word	0x10120000
 800796c:	10110000 	.word	0x10110000
 8007970:	40021000 	.word	0x40021000
 8007974:	40010000 	.word	0x40010000
 8007978:	40010800 	.word	0x40010800
 800797c:	40010c00 	.word	0x40010c00
 8007980:	40011000 	.word	0x40011000
 8007984:	40011400 	.word	0x40011400
 8007988:	40011800 	.word	0x40011800
 800798c:	40011c00 	.word	0x40011c00
 8007990:	40010400 	.word	0x40010400
        }
        else
        {
          CLEAR_BIT(EXTI->RTSR, iocurrent);
 8007994:	4b15      	ldr	r3, [pc, #84]	@ (80079ec <HAL_GPIO_Init+0x324>)
 8007996:	689a      	ldr	r2, [r3, #8]
 8007998:	69bb      	ldr	r3, [r7, #24]
 800799a:	43db      	mvns	r3, r3
 800799c:	4913      	ldr	r1, [pc, #76]	@ (80079ec <HAL_GPIO_Init+0x324>)
 800799e:	4013      	ands	r3, r2
 80079a0:	608b      	str	r3, [r1, #8]
        }

        /* Enable or disable the falling trigger */
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80079a2:	683b      	ldr	r3, [r7, #0]
 80079a4:	685b      	ldr	r3, [r3, #4]
 80079a6:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80079aa:	2b00      	cmp	r3, #0
 80079ac:	d006      	beq.n	80079bc <HAL_GPIO_Init+0x2f4>
        {
          SET_BIT(EXTI->FTSR, iocurrent);
 80079ae:	4b0f      	ldr	r3, [pc, #60]	@ (80079ec <HAL_GPIO_Init+0x324>)
 80079b0:	68da      	ldr	r2, [r3, #12]
 80079b2:	490e      	ldr	r1, [pc, #56]	@ (80079ec <HAL_GPIO_Init+0x324>)
 80079b4:	69bb      	ldr	r3, [r7, #24]
 80079b6:	4313      	orrs	r3, r2
 80079b8:	60cb      	str	r3, [r1, #12]
 80079ba:	e006      	b.n	80079ca <HAL_GPIO_Init+0x302>
        }
        else
        {
          CLEAR_BIT(EXTI->FTSR, iocurrent);
 80079bc:	4b0b      	ldr	r3, [pc, #44]	@ (80079ec <HAL_GPIO_Init+0x324>)
 80079be:	68da      	ldr	r2, [r3, #12]
 80079c0:	69bb      	ldr	r3, [r7, #24]
 80079c2:	43db      	mvns	r3, r3
 80079c4:	4909      	ldr	r1, [pc, #36]	@ (80079ec <HAL_GPIO_Init+0x324>)
 80079c6:	4013      	ands	r3, r2
 80079c8:	60cb      	str	r3, [r1, #12]
        }
      }
    }

	position++;
 80079ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80079cc:	3301      	adds	r3, #1
 80079ce:	627b      	str	r3, [r7, #36]	@ 0x24
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80079d0:	683b      	ldr	r3, [r7, #0]
 80079d2:	681a      	ldr	r2, [r3, #0]
 80079d4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80079d6:	fa22 f303 	lsr.w	r3, r2, r3
 80079da:	2b00      	cmp	r3, #0
 80079dc:	f47f ae7e 	bne.w	80076dc <HAL_GPIO_Init+0x14>
  }
}
 80079e0:	bf00      	nop
 80079e2:	bf00      	nop
 80079e4:	372c      	adds	r7, #44	@ 0x2c
 80079e6:	46bd      	mov	sp, r7
 80079e8:	bc80      	pop	{r7}
 80079ea:	4770      	bx	lr
 80079ec:	40010400 	.word	0x40010400

080079f0 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80079f0:	b480      	push	{r7}
 80079f2:	b083      	sub	sp, #12
 80079f4:	af00      	add	r7, sp, #0
 80079f6:	6078      	str	r0, [r7, #4]
 80079f8:	460b      	mov	r3, r1
 80079fa:	807b      	strh	r3, [r7, #2]
 80079fc:	4613      	mov	r3, r2
 80079fe:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8007a00:	787b      	ldrb	r3, [r7, #1]
 8007a02:	2b00      	cmp	r3, #0
 8007a04:	d003      	beq.n	8007a0e <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8007a06:	887a      	ldrh	r2, [r7, #2]
 8007a08:	687b      	ldr	r3, [r7, #4]
 8007a0a:	611a      	str	r2, [r3, #16]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
  }
}
 8007a0c:	e003      	b.n	8007a16 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
 8007a0e:	887b      	ldrh	r3, [r7, #2]
 8007a10:	041a      	lsls	r2, r3, #16
 8007a12:	687b      	ldr	r3, [r7, #4]
 8007a14:	611a      	str	r2, [r3, #16]
}
 8007a16:	bf00      	nop
 8007a18:	370c      	adds	r7, #12
 8007a1a:	46bd      	mov	sp, r7
 8007a1c:	bc80      	pop	{r7}
 8007a1e:	4770      	bx	lr

08007a20 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007a20:	b580      	push	{r7, lr}
 8007a22:	b086      	sub	sp, #24
 8007a24:	af00      	add	r7, sp, #0
 8007a26:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8007a28:	687b      	ldr	r3, [r7, #4]
 8007a2a:	2b00      	cmp	r3, #0
 8007a2c:	d101      	bne.n	8007a32 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8007a2e:	2301      	movs	r3, #1
 8007a30:	e272      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007a32:	687b      	ldr	r3, [r7, #4]
 8007a34:	681b      	ldr	r3, [r3, #0]
 8007a36:	f003 0301 	and.w	r3, r3, #1
 8007a3a:	2b00      	cmp	r3, #0
 8007a3c:	f000 8087 	beq.w	8007b4e <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8007a40:	4b92      	ldr	r3, [pc, #584]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007a42:	685b      	ldr	r3, [r3, #4]
 8007a44:	f003 030c 	and.w	r3, r3, #12
 8007a48:	2b04      	cmp	r3, #4
 8007a4a:	d00c      	beq.n	8007a66 <HAL_RCC_OscConfig+0x46>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8007a4c:	4b8f      	ldr	r3, [pc, #572]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007a4e:	685b      	ldr	r3, [r3, #4]
 8007a50:	f003 030c 	and.w	r3, r3, #12
 8007a54:	2b08      	cmp	r3, #8
 8007a56:	d112      	bne.n	8007a7e <HAL_RCC_OscConfig+0x5e>
 8007a58:	4b8c      	ldr	r3, [pc, #560]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007a5a:	685b      	ldr	r3, [r3, #4]
 8007a5c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8007a60:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007a64:	d10b      	bne.n	8007a7e <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007a66:	4b89      	ldr	r3, [pc, #548]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007a68:	681b      	ldr	r3, [r3, #0]
 8007a6a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007a6e:	2b00      	cmp	r3, #0
 8007a70:	d06c      	beq.n	8007b4c <HAL_RCC_OscConfig+0x12c>
 8007a72:	687b      	ldr	r3, [r7, #4]
 8007a74:	685b      	ldr	r3, [r3, #4]
 8007a76:	2b00      	cmp	r3, #0
 8007a78:	d168      	bne.n	8007b4c <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 8007a7a:	2301      	movs	r3, #1
 8007a7c:	e24c      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007a7e:	687b      	ldr	r3, [r7, #4]
 8007a80:	685b      	ldr	r3, [r3, #4]
 8007a82:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007a86:	d106      	bne.n	8007a96 <HAL_RCC_OscConfig+0x76>
 8007a88:	4b80      	ldr	r3, [pc, #512]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007a8a:	681b      	ldr	r3, [r3, #0]
 8007a8c:	4a7f      	ldr	r2, [pc, #508]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007a8e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007a92:	6013      	str	r3, [r2, #0]
 8007a94:	e02e      	b.n	8007af4 <HAL_RCC_OscConfig+0xd4>
 8007a96:	687b      	ldr	r3, [r7, #4]
 8007a98:	685b      	ldr	r3, [r3, #4]
 8007a9a:	2b00      	cmp	r3, #0
 8007a9c:	d10c      	bne.n	8007ab8 <HAL_RCC_OscConfig+0x98>
 8007a9e:	4b7b      	ldr	r3, [pc, #492]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007aa0:	681b      	ldr	r3, [r3, #0]
 8007aa2:	4a7a      	ldr	r2, [pc, #488]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007aa4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007aa8:	6013      	str	r3, [r2, #0]
 8007aaa:	4b78      	ldr	r3, [pc, #480]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007aac:	681b      	ldr	r3, [r3, #0]
 8007aae:	4a77      	ldr	r2, [pc, #476]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007ab0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8007ab4:	6013      	str	r3, [r2, #0]
 8007ab6:	e01d      	b.n	8007af4 <HAL_RCC_OscConfig+0xd4>
 8007ab8:	687b      	ldr	r3, [r7, #4]
 8007aba:	685b      	ldr	r3, [r3, #4]
 8007abc:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8007ac0:	d10c      	bne.n	8007adc <HAL_RCC_OscConfig+0xbc>
 8007ac2:	4b72      	ldr	r3, [pc, #456]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007ac4:	681b      	ldr	r3, [r3, #0]
 8007ac6:	4a71      	ldr	r2, [pc, #452]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007ac8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8007acc:	6013      	str	r3, [r2, #0]
 8007ace:	4b6f      	ldr	r3, [pc, #444]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007ad0:	681b      	ldr	r3, [r3, #0]
 8007ad2:	4a6e      	ldr	r2, [pc, #440]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007ad4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007ad8:	6013      	str	r3, [r2, #0]
 8007ada:	e00b      	b.n	8007af4 <HAL_RCC_OscConfig+0xd4>
 8007adc:	4b6b      	ldr	r3, [pc, #428]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007ade:	681b      	ldr	r3, [r3, #0]
 8007ae0:	4a6a      	ldr	r2, [pc, #424]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007ae2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007ae6:	6013      	str	r3, [r2, #0]
 8007ae8:	4b68      	ldr	r3, [pc, #416]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007aea:	681b      	ldr	r3, [r3, #0]
 8007aec:	4a67      	ldr	r2, [pc, #412]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007aee:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8007af2:	6013      	str	r3, [r2, #0]


      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8007af4:	687b      	ldr	r3, [r7, #4]
 8007af6:	685b      	ldr	r3, [r3, #4]
 8007af8:	2b00      	cmp	r3, #0
 8007afa:	d013      	beq.n	8007b24 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007afc:	f7ff fcd2 	bl	80074a4 <HAL_GetTick>
 8007b00:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007b02:	e008      	b.n	8007b16 <HAL_RCC_OscConfig+0xf6>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8007b04:	f7ff fcce 	bl	80074a4 <HAL_GetTick>
 8007b08:	4602      	mov	r2, r0
 8007b0a:	693b      	ldr	r3, [r7, #16]
 8007b0c:	1ad3      	subs	r3, r2, r3
 8007b0e:	2b64      	cmp	r3, #100	@ 0x64
 8007b10:	d901      	bls.n	8007b16 <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 8007b12:	2303      	movs	r3, #3
 8007b14:	e200      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007b16:	4b5d      	ldr	r3, [pc, #372]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007b18:	681b      	ldr	r3, [r3, #0]
 8007b1a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007b1e:	2b00      	cmp	r3, #0
 8007b20:	d0f0      	beq.n	8007b04 <HAL_RCC_OscConfig+0xe4>
 8007b22:	e014      	b.n	8007b4e <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007b24:	f7ff fcbe 	bl	80074a4 <HAL_GetTick>
 8007b28:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8007b2a:	e008      	b.n	8007b3e <HAL_RCC_OscConfig+0x11e>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8007b2c:	f7ff fcba 	bl	80074a4 <HAL_GetTick>
 8007b30:	4602      	mov	r2, r0
 8007b32:	693b      	ldr	r3, [r7, #16]
 8007b34:	1ad3      	subs	r3, r2, r3
 8007b36:	2b64      	cmp	r3, #100	@ 0x64
 8007b38:	d901      	bls.n	8007b3e <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 8007b3a:	2303      	movs	r3, #3
 8007b3c:	e1ec      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8007b3e:	4b53      	ldr	r3, [pc, #332]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007b40:	681b      	ldr	r3, [r3, #0]
 8007b42:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007b46:	2b00      	cmp	r3, #0
 8007b48:	d1f0      	bne.n	8007b2c <HAL_RCC_OscConfig+0x10c>
 8007b4a:	e000      	b.n	8007b4e <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007b4c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007b4e:	687b      	ldr	r3, [r7, #4]
 8007b50:	681b      	ldr	r3, [r3, #0]
 8007b52:	f003 0302 	and.w	r3, r3, #2
 8007b56:	2b00      	cmp	r3, #0
 8007b58:	d063      	beq.n	8007c22 <HAL_RCC_OscConfig+0x202>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8007b5a:	4b4c      	ldr	r3, [pc, #304]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007b5c:	685b      	ldr	r3, [r3, #4]
 8007b5e:	f003 030c 	and.w	r3, r3, #12
 8007b62:	2b00      	cmp	r3, #0
 8007b64:	d00b      	beq.n	8007b7e <HAL_RCC_OscConfig+0x15e>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI_DIV2)))
 8007b66:	4b49      	ldr	r3, [pc, #292]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007b68:	685b      	ldr	r3, [r3, #4]
 8007b6a:	f003 030c 	and.w	r3, r3, #12
 8007b6e:	2b08      	cmp	r3, #8
 8007b70:	d11c      	bne.n	8007bac <HAL_RCC_OscConfig+0x18c>
 8007b72:	4b46      	ldr	r3, [pc, #280]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007b74:	685b      	ldr	r3, [r3, #4]
 8007b76:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8007b7a:	2b00      	cmp	r3, #0
 8007b7c:	d116      	bne.n	8007bac <HAL_RCC_OscConfig+0x18c>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007b7e:	4b43      	ldr	r3, [pc, #268]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007b80:	681b      	ldr	r3, [r3, #0]
 8007b82:	f003 0302 	and.w	r3, r3, #2
 8007b86:	2b00      	cmp	r3, #0
 8007b88:	d005      	beq.n	8007b96 <HAL_RCC_OscConfig+0x176>
 8007b8a:	687b      	ldr	r3, [r7, #4]
 8007b8c:	691b      	ldr	r3, [r3, #16]
 8007b8e:	2b01      	cmp	r3, #1
 8007b90:	d001      	beq.n	8007b96 <HAL_RCC_OscConfig+0x176>
      {
        return HAL_ERROR;
 8007b92:	2301      	movs	r3, #1
 8007b94:	e1c0      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007b96:	4b3d      	ldr	r3, [pc, #244]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007b98:	681b      	ldr	r3, [r3, #0]
 8007b9a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	695b      	ldr	r3, [r3, #20]
 8007ba2:	00db      	lsls	r3, r3, #3
 8007ba4:	4939      	ldr	r1, [pc, #228]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007ba6:	4313      	orrs	r3, r2
 8007ba8:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007baa:	e03a      	b.n	8007c22 <HAL_RCC_OscConfig+0x202>
      }
    }
    else
    {
      /* Check the HSI State */
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8007bac:	687b      	ldr	r3, [r7, #4]
 8007bae:	691b      	ldr	r3, [r3, #16]
 8007bb0:	2b00      	cmp	r3, #0
 8007bb2:	d020      	beq.n	8007bf6 <HAL_RCC_OscConfig+0x1d6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8007bb4:	4b36      	ldr	r3, [pc, #216]	@ (8007c90 <HAL_RCC_OscConfig+0x270>)
 8007bb6:	2201      	movs	r2, #1
 8007bb8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007bba:	f7ff fc73 	bl	80074a4 <HAL_GetTick>
 8007bbe:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007bc0:	e008      	b.n	8007bd4 <HAL_RCC_OscConfig+0x1b4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8007bc2:	f7ff fc6f 	bl	80074a4 <HAL_GetTick>
 8007bc6:	4602      	mov	r2, r0
 8007bc8:	693b      	ldr	r3, [r7, #16]
 8007bca:	1ad3      	subs	r3, r2, r3
 8007bcc:	2b02      	cmp	r3, #2
 8007bce:	d901      	bls.n	8007bd4 <HAL_RCC_OscConfig+0x1b4>
          {
            return HAL_TIMEOUT;
 8007bd0:	2303      	movs	r3, #3
 8007bd2:	e1a1      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007bd4:	4b2d      	ldr	r3, [pc, #180]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007bd6:	681b      	ldr	r3, [r3, #0]
 8007bd8:	f003 0302 	and.w	r3, r3, #2
 8007bdc:	2b00      	cmp	r3, #0
 8007bde:	d0f0      	beq.n	8007bc2 <HAL_RCC_OscConfig+0x1a2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007be0:	4b2a      	ldr	r3, [pc, #168]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007be2:	681b      	ldr	r3, [r3, #0]
 8007be4:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	695b      	ldr	r3, [r3, #20]
 8007bec:	00db      	lsls	r3, r3, #3
 8007bee:	4927      	ldr	r1, [pc, #156]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007bf0:	4313      	orrs	r3, r2
 8007bf2:	600b      	str	r3, [r1, #0]
 8007bf4:	e015      	b.n	8007c22 <HAL_RCC_OscConfig+0x202>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8007bf6:	4b26      	ldr	r3, [pc, #152]	@ (8007c90 <HAL_RCC_OscConfig+0x270>)
 8007bf8:	2200      	movs	r2, #0
 8007bfa:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007bfc:	f7ff fc52 	bl	80074a4 <HAL_GetTick>
 8007c00:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007c02:	e008      	b.n	8007c16 <HAL_RCC_OscConfig+0x1f6>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8007c04:	f7ff fc4e 	bl	80074a4 <HAL_GetTick>
 8007c08:	4602      	mov	r2, r0
 8007c0a:	693b      	ldr	r3, [r7, #16]
 8007c0c:	1ad3      	subs	r3, r2, r3
 8007c0e:	2b02      	cmp	r3, #2
 8007c10:	d901      	bls.n	8007c16 <HAL_RCC_OscConfig+0x1f6>
          {
            return HAL_TIMEOUT;
 8007c12:	2303      	movs	r3, #3
 8007c14:	e180      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007c16:	4b1d      	ldr	r3, [pc, #116]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007c18:	681b      	ldr	r3, [r3, #0]
 8007c1a:	f003 0302 	and.w	r3, r3, #2
 8007c1e:	2b00      	cmp	r3, #0
 8007c20:	d1f0      	bne.n	8007c04 <HAL_RCC_OscConfig+0x1e4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007c22:	687b      	ldr	r3, [r7, #4]
 8007c24:	681b      	ldr	r3, [r3, #0]
 8007c26:	f003 0308 	and.w	r3, r3, #8
 8007c2a:	2b00      	cmp	r3, #0
 8007c2c:	d03a      	beq.n	8007ca4 <HAL_RCC_OscConfig+0x284>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8007c2e:	687b      	ldr	r3, [r7, #4]
 8007c30:	699b      	ldr	r3, [r3, #24]
 8007c32:	2b00      	cmp	r3, #0
 8007c34:	d019      	beq.n	8007c6a <HAL_RCC_OscConfig+0x24a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8007c36:	4b17      	ldr	r3, [pc, #92]	@ (8007c94 <HAL_RCC_OscConfig+0x274>)
 8007c38:	2201      	movs	r2, #1
 8007c3a:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8007c3c:	f7ff fc32 	bl	80074a4 <HAL_GetTick>
 8007c40:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007c42:	e008      	b.n	8007c56 <HAL_RCC_OscConfig+0x236>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8007c44:	f7ff fc2e 	bl	80074a4 <HAL_GetTick>
 8007c48:	4602      	mov	r2, r0
 8007c4a:	693b      	ldr	r3, [r7, #16]
 8007c4c:	1ad3      	subs	r3, r2, r3
 8007c4e:	2b02      	cmp	r3, #2
 8007c50:	d901      	bls.n	8007c56 <HAL_RCC_OscConfig+0x236>
        {
          return HAL_TIMEOUT;
 8007c52:	2303      	movs	r3, #3
 8007c54:	e160      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007c56:	4b0d      	ldr	r3, [pc, #52]	@ (8007c8c <HAL_RCC_OscConfig+0x26c>)
 8007c58:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007c5a:	f003 0302 	and.w	r3, r3, #2
 8007c5e:	2b00      	cmp	r3, #0
 8007c60:	d0f0      	beq.n	8007c44 <HAL_RCC_OscConfig+0x224>
        }
      }
      /*  To have a fully stabilized clock in the specified range, a software delay of 1ms
          should be added.*/
      RCC_Delay(1);
 8007c62:	2001      	movs	r0, #1
 8007c64:	f000 faa6 	bl	80081b4 <RCC_Delay>
 8007c68:	e01c      	b.n	8007ca4 <HAL_RCC_OscConfig+0x284>
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8007c6a:	4b0a      	ldr	r3, [pc, #40]	@ (8007c94 <HAL_RCC_OscConfig+0x274>)
 8007c6c:	2200      	movs	r2, #0
 8007c6e:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8007c70:	f7ff fc18 	bl	80074a4 <HAL_GetTick>
 8007c74:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007c76:	e00f      	b.n	8007c98 <HAL_RCC_OscConfig+0x278>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8007c78:	f7ff fc14 	bl	80074a4 <HAL_GetTick>
 8007c7c:	4602      	mov	r2, r0
 8007c7e:	693b      	ldr	r3, [r7, #16]
 8007c80:	1ad3      	subs	r3, r2, r3
 8007c82:	2b02      	cmp	r3, #2
 8007c84:	d908      	bls.n	8007c98 <HAL_RCC_OscConfig+0x278>
        {
          return HAL_TIMEOUT;
 8007c86:	2303      	movs	r3, #3
 8007c88:	e146      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
 8007c8a:	bf00      	nop
 8007c8c:	40021000 	.word	0x40021000
 8007c90:	42420000 	.word	0x42420000
 8007c94:	42420480 	.word	0x42420480
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007c98:	4b92      	ldr	r3, [pc, #584]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007c9a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007c9c:	f003 0302 	and.w	r3, r3, #2
 8007ca0:	2b00      	cmp	r3, #0
 8007ca2:	d1e9      	bne.n	8007c78 <HAL_RCC_OscConfig+0x258>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007ca4:	687b      	ldr	r3, [r7, #4]
 8007ca6:	681b      	ldr	r3, [r3, #0]
 8007ca8:	f003 0304 	and.w	r3, r3, #4
 8007cac:	2b00      	cmp	r3, #0
 8007cae:	f000 80a6 	beq.w	8007dfe <HAL_RCC_OscConfig+0x3de>
  {
    FlagStatus       pwrclkchanged = RESET;
 8007cb2:	2300      	movs	r3, #0
 8007cb4:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007cb6:	4b8b      	ldr	r3, [pc, #556]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007cb8:	69db      	ldr	r3, [r3, #28]
 8007cba:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007cbe:	2b00      	cmp	r3, #0
 8007cc0:	d10d      	bne.n	8007cde <HAL_RCC_OscConfig+0x2be>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8007cc2:	4b88      	ldr	r3, [pc, #544]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007cc4:	69db      	ldr	r3, [r3, #28]
 8007cc6:	4a87      	ldr	r2, [pc, #540]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007cc8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007ccc:	61d3      	str	r3, [r2, #28]
 8007cce:	4b85      	ldr	r3, [pc, #532]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007cd0:	69db      	ldr	r3, [r3, #28]
 8007cd2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007cd6:	60bb      	str	r3, [r7, #8]
 8007cd8:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8007cda:	2301      	movs	r3, #1
 8007cdc:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007cde:	4b82      	ldr	r3, [pc, #520]	@ (8007ee8 <HAL_RCC_OscConfig+0x4c8>)
 8007ce0:	681b      	ldr	r3, [r3, #0]
 8007ce2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007ce6:	2b00      	cmp	r3, #0
 8007ce8:	d118      	bne.n	8007d1c <HAL_RCC_OscConfig+0x2fc>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8007cea:	4b7f      	ldr	r3, [pc, #508]	@ (8007ee8 <HAL_RCC_OscConfig+0x4c8>)
 8007cec:	681b      	ldr	r3, [r3, #0]
 8007cee:	4a7e      	ldr	r2, [pc, #504]	@ (8007ee8 <HAL_RCC_OscConfig+0x4c8>)
 8007cf0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007cf4:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8007cf6:	f7ff fbd5 	bl	80074a4 <HAL_GetTick>
 8007cfa:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007cfc:	e008      	b.n	8007d10 <HAL_RCC_OscConfig+0x2f0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007cfe:	f7ff fbd1 	bl	80074a4 <HAL_GetTick>
 8007d02:	4602      	mov	r2, r0
 8007d04:	693b      	ldr	r3, [r7, #16]
 8007d06:	1ad3      	subs	r3, r2, r3
 8007d08:	2b64      	cmp	r3, #100	@ 0x64
 8007d0a:	d901      	bls.n	8007d10 <HAL_RCC_OscConfig+0x2f0>
        {
          return HAL_TIMEOUT;
 8007d0c:	2303      	movs	r3, #3
 8007d0e:	e103      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007d10:	4b75      	ldr	r3, [pc, #468]	@ (8007ee8 <HAL_RCC_OscConfig+0x4c8>)
 8007d12:	681b      	ldr	r3, [r3, #0]
 8007d14:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007d18:	2b00      	cmp	r3, #0
 8007d1a:	d0f0      	beq.n	8007cfe <HAL_RCC_OscConfig+0x2de>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007d1c:	687b      	ldr	r3, [r7, #4]
 8007d1e:	68db      	ldr	r3, [r3, #12]
 8007d20:	2b01      	cmp	r3, #1
 8007d22:	d106      	bne.n	8007d32 <HAL_RCC_OscConfig+0x312>
 8007d24:	4b6f      	ldr	r3, [pc, #444]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d26:	6a1b      	ldr	r3, [r3, #32]
 8007d28:	4a6e      	ldr	r2, [pc, #440]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d2a:	f043 0301 	orr.w	r3, r3, #1
 8007d2e:	6213      	str	r3, [r2, #32]
 8007d30:	e02d      	b.n	8007d8e <HAL_RCC_OscConfig+0x36e>
 8007d32:	687b      	ldr	r3, [r7, #4]
 8007d34:	68db      	ldr	r3, [r3, #12]
 8007d36:	2b00      	cmp	r3, #0
 8007d38:	d10c      	bne.n	8007d54 <HAL_RCC_OscConfig+0x334>
 8007d3a:	4b6a      	ldr	r3, [pc, #424]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d3c:	6a1b      	ldr	r3, [r3, #32]
 8007d3e:	4a69      	ldr	r2, [pc, #420]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d40:	f023 0301 	bic.w	r3, r3, #1
 8007d44:	6213      	str	r3, [r2, #32]
 8007d46:	4b67      	ldr	r3, [pc, #412]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d48:	6a1b      	ldr	r3, [r3, #32]
 8007d4a:	4a66      	ldr	r2, [pc, #408]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d4c:	f023 0304 	bic.w	r3, r3, #4
 8007d50:	6213      	str	r3, [r2, #32]
 8007d52:	e01c      	b.n	8007d8e <HAL_RCC_OscConfig+0x36e>
 8007d54:	687b      	ldr	r3, [r7, #4]
 8007d56:	68db      	ldr	r3, [r3, #12]
 8007d58:	2b05      	cmp	r3, #5
 8007d5a:	d10c      	bne.n	8007d76 <HAL_RCC_OscConfig+0x356>
 8007d5c:	4b61      	ldr	r3, [pc, #388]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d5e:	6a1b      	ldr	r3, [r3, #32]
 8007d60:	4a60      	ldr	r2, [pc, #384]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d62:	f043 0304 	orr.w	r3, r3, #4
 8007d66:	6213      	str	r3, [r2, #32]
 8007d68:	4b5e      	ldr	r3, [pc, #376]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d6a:	6a1b      	ldr	r3, [r3, #32]
 8007d6c:	4a5d      	ldr	r2, [pc, #372]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d6e:	f043 0301 	orr.w	r3, r3, #1
 8007d72:	6213      	str	r3, [r2, #32]
 8007d74:	e00b      	b.n	8007d8e <HAL_RCC_OscConfig+0x36e>
 8007d76:	4b5b      	ldr	r3, [pc, #364]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d78:	6a1b      	ldr	r3, [r3, #32]
 8007d7a:	4a5a      	ldr	r2, [pc, #360]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d7c:	f023 0301 	bic.w	r3, r3, #1
 8007d80:	6213      	str	r3, [r2, #32]
 8007d82:	4b58      	ldr	r3, [pc, #352]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d84:	6a1b      	ldr	r3, [r3, #32]
 8007d86:	4a57      	ldr	r2, [pc, #348]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007d88:	f023 0304 	bic.w	r3, r3, #4
 8007d8c:	6213      	str	r3, [r2, #32]
    /* Check the LSE State */
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8007d8e:	687b      	ldr	r3, [r7, #4]
 8007d90:	68db      	ldr	r3, [r3, #12]
 8007d92:	2b00      	cmp	r3, #0
 8007d94:	d015      	beq.n	8007dc2 <HAL_RCC_OscConfig+0x3a2>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8007d96:	f7ff fb85 	bl	80074a4 <HAL_GetTick>
 8007d9a:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007d9c:	e00a      	b.n	8007db4 <HAL_RCC_OscConfig+0x394>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007d9e:	f7ff fb81 	bl	80074a4 <HAL_GetTick>
 8007da2:	4602      	mov	r2, r0
 8007da4:	693b      	ldr	r3, [r7, #16]
 8007da6:	1ad3      	subs	r3, r2, r3
 8007da8:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007dac:	4293      	cmp	r3, r2
 8007dae:	d901      	bls.n	8007db4 <HAL_RCC_OscConfig+0x394>
        {
          return HAL_TIMEOUT;
 8007db0:	2303      	movs	r3, #3
 8007db2:	e0b1      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007db4:	4b4b      	ldr	r3, [pc, #300]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007db6:	6a1b      	ldr	r3, [r3, #32]
 8007db8:	f003 0302 	and.w	r3, r3, #2
 8007dbc:	2b00      	cmp	r3, #0
 8007dbe:	d0ee      	beq.n	8007d9e <HAL_RCC_OscConfig+0x37e>
 8007dc0:	e014      	b.n	8007dec <HAL_RCC_OscConfig+0x3cc>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8007dc2:	f7ff fb6f 	bl	80074a4 <HAL_GetTick>
 8007dc6:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007dc8:	e00a      	b.n	8007de0 <HAL_RCC_OscConfig+0x3c0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007dca:	f7ff fb6b 	bl	80074a4 <HAL_GetTick>
 8007dce:	4602      	mov	r2, r0
 8007dd0:	693b      	ldr	r3, [r7, #16]
 8007dd2:	1ad3      	subs	r3, r2, r3
 8007dd4:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007dd8:	4293      	cmp	r3, r2
 8007dda:	d901      	bls.n	8007de0 <HAL_RCC_OscConfig+0x3c0>
        {
          return HAL_TIMEOUT;
 8007ddc:	2303      	movs	r3, #3
 8007dde:	e09b      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007de0:	4b40      	ldr	r3, [pc, #256]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007de2:	6a1b      	ldr	r3, [r3, #32]
 8007de4:	f003 0302 	and.w	r3, r3, #2
 8007de8:	2b00      	cmp	r3, #0
 8007dea:	d1ee      	bne.n	8007dca <HAL_RCC_OscConfig+0x3aa>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if (pwrclkchanged == SET)
 8007dec:	7dfb      	ldrb	r3, [r7, #23]
 8007dee:	2b01      	cmp	r3, #1
 8007df0:	d105      	bne.n	8007dfe <HAL_RCC_OscConfig+0x3de>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8007df2:	4b3c      	ldr	r3, [pc, #240]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007df4:	69db      	ldr	r3, [r3, #28]
 8007df6:	4a3b      	ldr	r2, [pc, #236]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007df8:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007dfc:	61d3      	str	r3, [r2, #28]

#endif /* RCC_CR_PLL2ON */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007dfe:	687b      	ldr	r3, [r7, #4]
 8007e00:	69db      	ldr	r3, [r3, #28]
 8007e02:	2b00      	cmp	r3, #0
 8007e04:	f000 8087 	beq.w	8007f16 <HAL_RCC_OscConfig+0x4f6>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8007e08:	4b36      	ldr	r3, [pc, #216]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007e0a:	685b      	ldr	r3, [r3, #4]
 8007e0c:	f003 030c 	and.w	r3, r3, #12
 8007e10:	2b08      	cmp	r3, #8
 8007e12:	d061      	beq.n	8007ed8 <HAL_RCC_OscConfig+0x4b8>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007e14:	687b      	ldr	r3, [r7, #4]
 8007e16:	69db      	ldr	r3, [r3, #28]
 8007e18:	2b02      	cmp	r3, #2
 8007e1a:	d146      	bne.n	8007eaa <HAL_RCC_OscConfig+0x48a>
        /* Check the parameters */
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8007e1c:	4b33      	ldr	r3, [pc, #204]	@ (8007eec <HAL_RCC_OscConfig+0x4cc>)
 8007e1e:	2200      	movs	r2, #0
 8007e20:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007e22:	f7ff fb3f 	bl	80074a4 <HAL_GetTick>
 8007e26:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8007e28:	e008      	b.n	8007e3c <HAL_RCC_OscConfig+0x41c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007e2a:	f7ff fb3b 	bl	80074a4 <HAL_GetTick>
 8007e2e:	4602      	mov	r2, r0
 8007e30:	693b      	ldr	r3, [r7, #16]
 8007e32:	1ad3      	subs	r3, r2, r3
 8007e34:	2b02      	cmp	r3, #2
 8007e36:	d901      	bls.n	8007e3c <HAL_RCC_OscConfig+0x41c>
          {
            return HAL_TIMEOUT;
 8007e38:	2303      	movs	r3, #3
 8007e3a:	e06d      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8007e3c:	4b29      	ldr	r3, [pc, #164]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007e3e:	681b      	ldr	r3, [r3, #0]
 8007e40:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007e44:	2b00      	cmp	r3, #0
 8007e46:	d1f0      	bne.n	8007e2a <HAL_RCC_OscConfig+0x40a>
          }
        }

        /* Configure the HSE prediv factor --------------------------------*/
        /* It can be written only when the PLL is disabled. Not used in PLL source is different than HSE */
        if (RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 8007e48:	687b      	ldr	r3, [r7, #4]
 8007e4a:	6a1b      	ldr	r3, [r3, #32]
 8007e4c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007e50:	d108      	bne.n	8007e64 <HAL_RCC_OscConfig+0x444>
          /* Set PREDIV1 source */
          SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
#endif /* RCC_CFGR2_PREDIV1SRC */

          /* Set PREDIV1 Value */
          __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 8007e52:	4b24      	ldr	r3, [pc, #144]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007e54:	685b      	ldr	r3, [r3, #4]
 8007e56:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8007e5a:	687b      	ldr	r3, [r7, #4]
 8007e5c:	689b      	ldr	r3, [r3, #8]
 8007e5e:	4921      	ldr	r1, [pc, #132]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007e60:	4313      	orrs	r3, r2
 8007e62:	604b      	str	r3, [r1, #4]
        }

        /* Configure the main PLL clock source and multiplication factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8007e64:	4b1f      	ldr	r3, [pc, #124]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007e66:	685b      	ldr	r3, [r3, #4]
 8007e68:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8007e6c:	687b      	ldr	r3, [r7, #4]
 8007e6e:	6a19      	ldr	r1, [r3, #32]
 8007e70:	687b      	ldr	r3, [r7, #4]
 8007e72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007e74:	430b      	orrs	r3, r1
 8007e76:	491b      	ldr	r1, [pc, #108]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007e78:	4313      	orrs	r3, r2
 8007e7a:	604b      	str	r3, [r1, #4]
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8007e7c:	4b1b      	ldr	r3, [pc, #108]	@ (8007eec <HAL_RCC_OscConfig+0x4cc>)
 8007e7e:	2201      	movs	r2, #1
 8007e80:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007e82:	f7ff fb0f 	bl	80074a4 <HAL_GetTick>
 8007e86:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8007e88:	e008      	b.n	8007e9c <HAL_RCC_OscConfig+0x47c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007e8a:	f7ff fb0b 	bl	80074a4 <HAL_GetTick>
 8007e8e:	4602      	mov	r2, r0
 8007e90:	693b      	ldr	r3, [r7, #16]
 8007e92:	1ad3      	subs	r3, r2, r3
 8007e94:	2b02      	cmp	r3, #2
 8007e96:	d901      	bls.n	8007e9c <HAL_RCC_OscConfig+0x47c>
          {
            return HAL_TIMEOUT;
 8007e98:	2303      	movs	r3, #3
 8007e9a:	e03d      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8007e9c:	4b11      	ldr	r3, [pc, #68]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007e9e:	681b      	ldr	r3, [r3, #0]
 8007ea0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007ea4:	2b00      	cmp	r3, #0
 8007ea6:	d0f0      	beq.n	8007e8a <HAL_RCC_OscConfig+0x46a>
 8007ea8:	e035      	b.n	8007f16 <HAL_RCC_OscConfig+0x4f6>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8007eaa:	4b10      	ldr	r3, [pc, #64]	@ (8007eec <HAL_RCC_OscConfig+0x4cc>)
 8007eac:	2200      	movs	r2, #0
 8007eae:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007eb0:	f7ff faf8 	bl	80074a4 <HAL_GetTick>
 8007eb4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8007eb6:	e008      	b.n	8007eca <HAL_RCC_OscConfig+0x4aa>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007eb8:	f7ff faf4 	bl	80074a4 <HAL_GetTick>
 8007ebc:	4602      	mov	r2, r0
 8007ebe:	693b      	ldr	r3, [r7, #16]
 8007ec0:	1ad3      	subs	r3, r2, r3
 8007ec2:	2b02      	cmp	r3, #2
 8007ec4:	d901      	bls.n	8007eca <HAL_RCC_OscConfig+0x4aa>
          {
            return HAL_TIMEOUT;
 8007ec6:	2303      	movs	r3, #3
 8007ec8:	e026      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8007eca:	4b06      	ldr	r3, [pc, #24]	@ (8007ee4 <HAL_RCC_OscConfig+0x4c4>)
 8007ecc:	681b      	ldr	r3, [r3, #0]
 8007ece:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007ed2:	2b00      	cmp	r3, #0
 8007ed4:	d1f0      	bne.n	8007eb8 <HAL_RCC_OscConfig+0x498>
 8007ed6:	e01e      	b.n	8007f16 <HAL_RCC_OscConfig+0x4f6>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8007ed8:	687b      	ldr	r3, [r7, #4]
 8007eda:	69db      	ldr	r3, [r3, #28]
 8007edc:	2b01      	cmp	r3, #1
 8007ede:	d107      	bne.n	8007ef0 <HAL_RCC_OscConfig+0x4d0>
      {
        return HAL_ERROR;
 8007ee0:	2301      	movs	r3, #1
 8007ee2:	e019      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
 8007ee4:	40021000 	.word	0x40021000
 8007ee8:	40007000 	.word	0x40007000
 8007eec:	42420060 	.word	0x42420060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8007ef0:	4b0b      	ldr	r3, [pc, #44]	@ (8007f20 <HAL_RCC_OscConfig+0x500>)
 8007ef2:	685b      	ldr	r3, [r3, #4]
 8007ef4:	60fb      	str	r3, [r7, #12]
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007ef6:	68fb      	ldr	r3, [r7, #12]
 8007ef8:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8007efc:	687b      	ldr	r3, [r7, #4]
 8007efe:	6a1b      	ldr	r3, [r3, #32]
 8007f00:	429a      	cmp	r2, r3
 8007f02:	d106      	bne.n	8007f12 <HAL_RCC_OscConfig+0x4f2>
            (READ_BIT(pll_config, RCC_CFGR_PLLMULL) != RCC_OscInitStruct->PLL.PLLMUL))
 8007f04:	68fb      	ldr	r3, [r7, #12]
 8007f06:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8007f0a:	687b      	ldr	r3, [r7, #4]
 8007f0c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007f0e:	429a      	cmp	r2, r3
 8007f10:	d001      	beq.n	8007f16 <HAL_RCC_OscConfig+0x4f6>
        {
          return HAL_ERROR;
 8007f12:	2301      	movs	r3, #1
 8007f14:	e000      	b.n	8007f18 <HAL_RCC_OscConfig+0x4f8>
        }
      }
    }
  }

  return HAL_OK;
 8007f16:	2300      	movs	r3, #0
}
 8007f18:	4618      	mov	r0, r3
 8007f1a:	3718      	adds	r7, #24
 8007f1c:	46bd      	mov	sp, r7
 8007f1e:	bd80      	pop	{r7, pc}
 8007f20:	40021000 	.word	0x40021000

08007f24 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8007f24:	b580      	push	{r7, lr}
 8007f26:	b084      	sub	sp, #16
 8007f28:	af00      	add	r7, sp, #0
 8007f2a:	6078      	str	r0, [r7, #4]
 8007f2c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	2b00      	cmp	r3, #0
 8007f32:	d101      	bne.n	8007f38 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8007f34:	2301      	movs	r3, #1
 8007f36:	e0d0      	b.n	80080da <HAL_RCC_ClockConfig+0x1b6>
  must be correctly programmed according to the frequency of the CPU clock
    (HCLK) of the device. */

#if defined(FLASH_ACR_LATENCY)
  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8007f38:	4b6a      	ldr	r3, [pc, #424]	@ (80080e4 <HAL_RCC_ClockConfig+0x1c0>)
 8007f3a:	681b      	ldr	r3, [r3, #0]
 8007f3c:	f003 0307 	and.w	r3, r3, #7
 8007f40:	683a      	ldr	r2, [r7, #0]
 8007f42:	429a      	cmp	r2, r3
 8007f44:	d910      	bls.n	8007f68 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007f46:	4b67      	ldr	r3, [pc, #412]	@ (80080e4 <HAL_RCC_ClockConfig+0x1c0>)
 8007f48:	681b      	ldr	r3, [r3, #0]
 8007f4a:	f023 0207 	bic.w	r2, r3, #7
 8007f4e:	4965      	ldr	r1, [pc, #404]	@ (80080e4 <HAL_RCC_ClockConfig+0x1c0>)
 8007f50:	683b      	ldr	r3, [r7, #0]
 8007f52:	4313      	orrs	r3, r2
 8007f54:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8007f56:	4b63      	ldr	r3, [pc, #396]	@ (80080e4 <HAL_RCC_ClockConfig+0x1c0>)
 8007f58:	681b      	ldr	r3, [r3, #0]
 8007f5a:	f003 0307 	and.w	r3, r3, #7
 8007f5e:	683a      	ldr	r2, [r7, #0]
 8007f60:	429a      	cmp	r2, r3
 8007f62:	d001      	beq.n	8007f68 <HAL_RCC_ClockConfig+0x44>
  {
    return HAL_ERROR;
 8007f64:	2301      	movs	r3, #1
 8007f66:	e0b8      	b.n	80080da <HAL_RCC_ClockConfig+0x1b6>
  }
}

#endif /* FLASH_ACR_LATENCY */
/*-------------------------- HCLK Configuration --------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	681b      	ldr	r3, [r3, #0]
 8007f6c:	f003 0302 	and.w	r3, r3, #2
 8007f70:	2b00      	cmp	r3, #0
 8007f72:	d020      	beq.n	8007fb6 <HAL_RCC_ClockConfig+0x92>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
    a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007f74:	687b      	ldr	r3, [r7, #4]
 8007f76:	681b      	ldr	r3, [r3, #0]
 8007f78:	f003 0304 	and.w	r3, r3, #4
 8007f7c:	2b00      	cmp	r3, #0
 8007f7e:	d005      	beq.n	8007f8c <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007f80:	4b59      	ldr	r3, [pc, #356]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8007f82:	685b      	ldr	r3, [r3, #4]
 8007f84:	4a58      	ldr	r2, [pc, #352]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8007f86:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8007f8a:	6053      	str	r3, [r2, #4]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007f8c:	687b      	ldr	r3, [r7, #4]
 8007f8e:	681b      	ldr	r3, [r3, #0]
 8007f90:	f003 0308 	and.w	r3, r3, #8
 8007f94:	2b00      	cmp	r3, #0
 8007f96:	d005      	beq.n	8007fa4 <HAL_RCC_ClockConfig+0x80>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007f98:	4b53      	ldr	r3, [pc, #332]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8007f9a:	685b      	ldr	r3, [r3, #4]
 8007f9c:	4a52      	ldr	r2, [pc, #328]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8007f9e:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8007fa2:	6053      	str	r3, [r2, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007fa4:	4b50      	ldr	r3, [pc, #320]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8007fa6:	685b      	ldr	r3, [r3, #4]
 8007fa8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8007fac:	687b      	ldr	r3, [r7, #4]
 8007fae:	689b      	ldr	r3, [r3, #8]
 8007fb0:	494d      	ldr	r1, [pc, #308]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8007fb2:	4313      	orrs	r3, r2
 8007fb4:	604b      	str	r3, [r1, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	681b      	ldr	r3, [r3, #0]
 8007fba:	f003 0301 	and.w	r3, r3, #1
 8007fbe:	2b00      	cmp	r3, #0
 8007fc0:	d040      	beq.n	8008044 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007fc2:	687b      	ldr	r3, [r7, #4]
 8007fc4:	685b      	ldr	r3, [r3, #4]
 8007fc6:	2b01      	cmp	r3, #1
 8007fc8:	d107      	bne.n	8007fda <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007fca:	4b47      	ldr	r3, [pc, #284]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8007fcc:	681b      	ldr	r3, [r3, #0]
 8007fce:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007fd2:	2b00      	cmp	r3, #0
 8007fd4:	d115      	bne.n	8008002 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8007fd6:	2301      	movs	r3, #1
 8007fd8:	e07f      	b.n	80080da <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8007fda:	687b      	ldr	r3, [r7, #4]
 8007fdc:	685b      	ldr	r3, [r3, #4]
 8007fde:	2b02      	cmp	r3, #2
 8007fe0:	d107      	bne.n	8007ff2 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007fe2:	4b41      	ldr	r3, [pc, #260]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8007fe4:	681b      	ldr	r3, [r3, #0]
 8007fe6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007fea:	2b00      	cmp	r3, #0
 8007fec:	d109      	bne.n	8008002 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8007fee:	2301      	movs	r3, #1
 8007ff0:	e073      	b.n	80080da <HAL_RCC_ClockConfig+0x1b6>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007ff2:	4b3d      	ldr	r3, [pc, #244]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8007ff4:	681b      	ldr	r3, [r3, #0]
 8007ff6:	f003 0302 	and.w	r3, r3, #2
 8007ffa:	2b00      	cmp	r3, #0
 8007ffc:	d101      	bne.n	8008002 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8007ffe:	2301      	movs	r3, #1
 8008000:	e06b      	b.n	80080da <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8008002:	4b39      	ldr	r3, [pc, #228]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8008004:	685b      	ldr	r3, [r3, #4]
 8008006:	f023 0203 	bic.w	r2, r3, #3
 800800a:	687b      	ldr	r3, [r7, #4]
 800800c:	685b      	ldr	r3, [r3, #4]
 800800e:	4936      	ldr	r1, [pc, #216]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8008010:	4313      	orrs	r3, r2
 8008012:	604b      	str	r3, [r1, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8008014:	f7ff fa46 	bl	80074a4 <HAL_GetTick>
 8008018:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800801a:	e00a      	b.n	8008032 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800801c:	f7ff fa42 	bl	80074a4 <HAL_GetTick>
 8008020:	4602      	mov	r2, r0
 8008022:	68fb      	ldr	r3, [r7, #12]
 8008024:	1ad3      	subs	r3, r2, r3
 8008026:	f241 3288 	movw	r2, #5000	@ 0x1388
 800802a:	4293      	cmp	r3, r2
 800802c:	d901      	bls.n	8008032 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800802e:	2303      	movs	r3, #3
 8008030:	e053      	b.n	80080da <HAL_RCC_ClockConfig+0x1b6>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008032:	4b2d      	ldr	r3, [pc, #180]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8008034:	685b      	ldr	r3, [r3, #4]
 8008036:	f003 020c 	and.w	r2, r3, #12
 800803a:	687b      	ldr	r3, [r7, #4]
 800803c:	685b      	ldr	r3, [r3, #4]
 800803e:	009b      	lsls	r3, r3, #2
 8008040:	429a      	cmp	r2, r3
 8008042:	d1eb      	bne.n	800801c <HAL_RCC_ClockConfig+0xf8>
    }
  }

#if defined(FLASH_ACR_LATENCY)
  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8008044:	4b27      	ldr	r3, [pc, #156]	@ (80080e4 <HAL_RCC_ClockConfig+0x1c0>)
 8008046:	681b      	ldr	r3, [r3, #0]
 8008048:	f003 0307 	and.w	r3, r3, #7
 800804c:	683a      	ldr	r2, [r7, #0]
 800804e:	429a      	cmp	r2, r3
 8008050:	d210      	bcs.n	8008074 <HAL_RCC_ClockConfig+0x150>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008052:	4b24      	ldr	r3, [pc, #144]	@ (80080e4 <HAL_RCC_ClockConfig+0x1c0>)
 8008054:	681b      	ldr	r3, [r3, #0]
 8008056:	f023 0207 	bic.w	r2, r3, #7
 800805a:	4922      	ldr	r1, [pc, #136]	@ (80080e4 <HAL_RCC_ClockConfig+0x1c0>)
 800805c:	683b      	ldr	r3, [r7, #0]
 800805e:	4313      	orrs	r3, r2
 8008060:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8008062:	4b20      	ldr	r3, [pc, #128]	@ (80080e4 <HAL_RCC_ClockConfig+0x1c0>)
 8008064:	681b      	ldr	r3, [r3, #0]
 8008066:	f003 0307 	and.w	r3, r3, #7
 800806a:	683a      	ldr	r2, [r7, #0]
 800806c:	429a      	cmp	r2, r3
 800806e:	d001      	beq.n	8008074 <HAL_RCC_ClockConfig+0x150>
  {
    return HAL_ERROR;
 8008070:	2301      	movs	r3, #1
 8008072:	e032      	b.n	80080da <HAL_RCC_ClockConfig+0x1b6>
  }
}
#endif /* FLASH_ACR_LATENCY */

/*-------------------------- PCLK1 Configuration ---------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	681b      	ldr	r3, [r3, #0]
 8008078:	f003 0304 	and.w	r3, r3, #4
 800807c:	2b00      	cmp	r3, #0
 800807e:	d008      	beq.n	8008092 <HAL_RCC_ClockConfig+0x16e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8008080:	4b19      	ldr	r3, [pc, #100]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 8008082:	685b      	ldr	r3, [r3, #4]
 8008084:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8008088:	687b      	ldr	r3, [r7, #4]
 800808a:	68db      	ldr	r3, [r3, #12]
 800808c:	4916      	ldr	r1, [pc, #88]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 800808e:	4313      	orrs	r3, r2
 8008090:	604b      	str	r3, [r1, #4]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8008092:	687b      	ldr	r3, [r7, #4]
 8008094:	681b      	ldr	r3, [r3, #0]
 8008096:	f003 0308 	and.w	r3, r3, #8
 800809a:	2b00      	cmp	r3, #0
 800809c:	d009      	beq.n	80080b2 <HAL_RCC_ClockConfig+0x18e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 800809e:	4b12      	ldr	r3, [pc, #72]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 80080a0:	685b      	ldr	r3, [r3, #4]
 80080a2:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 80080a6:	687b      	ldr	r3, [r7, #4]
 80080a8:	691b      	ldr	r3, [r3, #16]
 80080aa:	00db      	lsls	r3, r3, #3
 80080ac:	490e      	ldr	r1, [pc, #56]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 80080ae:	4313      	orrs	r3, r2
 80080b0:	604b      	str	r3, [r1, #4]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80080b2:	f000 f821 	bl	80080f8 <HAL_RCC_GetSysClockFreq>
 80080b6:	4602      	mov	r2, r0
 80080b8:	4b0b      	ldr	r3, [pc, #44]	@ (80080e8 <HAL_RCC_ClockConfig+0x1c4>)
 80080ba:	685b      	ldr	r3, [r3, #4]
 80080bc:	091b      	lsrs	r3, r3, #4
 80080be:	f003 030f 	and.w	r3, r3, #15
 80080c2:	490a      	ldr	r1, [pc, #40]	@ (80080ec <HAL_RCC_ClockConfig+0x1c8>)
 80080c4:	5ccb      	ldrb	r3, [r1, r3]
 80080c6:	fa22 f303 	lsr.w	r3, r2, r3
 80080ca:	4a09      	ldr	r2, [pc, #36]	@ (80080f0 <HAL_RCC_ClockConfig+0x1cc>)
 80080cc:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 80080ce:	4b09      	ldr	r3, [pc, #36]	@ (80080f4 <HAL_RCC_ClockConfig+0x1d0>)
 80080d0:	681b      	ldr	r3, [r3, #0]
 80080d2:	4618      	mov	r0, r3
 80080d4:	f7ff f9a4 	bl	8007420 <HAL_InitTick>

  return HAL_OK;
 80080d8:	2300      	movs	r3, #0
}
 80080da:	4618      	mov	r0, r3
 80080dc:	3710      	adds	r7, #16
 80080de:	46bd      	mov	sp, r7
 80080e0:	bd80      	pop	{r7, pc}
 80080e2:	bf00      	nop
 80080e4:	40022000 	.word	0x40022000
 80080e8:	40021000 	.word	0x40021000
 80080ec:	0800b22c 	.word	0x0800b22c
 80080f0:	20000004 	.word	0x20000004
 80080f4:	20000008 	.word	0x20000008

080080f8 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80080f8:	b490      	push	{r4, r7}
 80080fa:	b08a      	sub	sp, #40	@ 0x28
 80080fc:	af00      	add	r7, sp, #0
#if defined(RCC_CFGR2_PREDIV1SRC)
  const uint8_t aPLLMULFactorTable[14] = {0, 0, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 13};
  const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
#else
  const uint8_t aPLLMULFactorTable[16] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16};
 80080fe:	4b29      	ldr	r3, [pc, #164]	@ (80081a4 <HAL_RCC_GetSysClockFreq+0xac>)
 8008100:	1d3c      	adds	r4, r7, #4
 8008102:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8008104:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
#if defined(RCC_CFGR2_PREDIV1)
  const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
#else
  const uint8_t aPredivFactorTable[2] = {1, 2};
 8008108:	f240 2301 	movw	r3, #513	@ 0x201
 800810c:	803b      	strh	r3, [r7, #0]
#endif /*RCC_CFGR2_PREDIV1*/

#endif
  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 800810e:	2300      	movs	r3, #0
 8008110:	61fb      	str	r3, [r7, #28]
 8008112:	2300      	movs	r3, #0
 8008114:	61bb      	str	r3, [r7, #24]
 8008116:	2300      	movs	r3, #0
 8008118:	627b      	str	r3, [r7, #36]	@ 0x24
 800811a:	2300      	movs	r3, #0
 800811c:	617b      	str	r3, [r7, #20]
  uint32_t sysclockfreq = 0U;
 800811e:	2300      	movs	r3, #0
 8008120:	623b      	str	r3, [r7, #32]
#if defined(RCC_CFGR2_PREDIV1SRC)
  uint32_t prediv2 = 0U, pll2mul = 0U;
#endif /*RCC_CFGR2_PREDIV1SRC*/

  tmpreg = RCC->CFGR;
 8008122:	4b21      	ldr	r3, [pc, #132]	@ (80081a8 <HAL_RCC_GetSysClockFreq+0xb0>)
 8008124:	685b      	ldr	r3, [r3, #4]
 8008126:	61fb      	str	r3, [r7, #28]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8008128:	69fb      	ldr	r3, [r7, #28]
 800812a:	f003 030c 	and.w	r3, r3, #12
 800812e:	2b04      	cmp	r3, #4
 8008130:	d002      	beq.n	8008138 <HAL_RCC_GetSysClockFreq+0x40>
 8008132:	2b08      	cmp	r3, #8
 8008134:	d003      	beq.n	800813e <HAL_RCC_GetSysClockFreq+0x46>
 8008136:	e02b      	b.n	8008190 <HAL_RCC_GetSysClockFreq+0x98>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8008138:	4b1c      	ldr	r3, [pc, #112]	@ (80081ac <HAL_RCC_GetSysClockFreq+0xb4>)
 800813a:	623b      	str	r3, [r7, #32]
      break;
 800813c:	e02b      	b.n	8008196 <HAL_RCC_GetSysClockFreq+0x9e>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 800813e:	69fb      	ldr	r3, [r7, #28]
 8008140:	0c9b      	lsrs	r3, r3, #18
 8008142:	f003 030f 	and.w	r3, r3, #15
 8008146:	3328      	adds	r3, #40	@ 0x28
 8008148:	443b      	add	r3, r7
 800814a:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 800814e:	617b      	str	r3, [r7, #20]
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 8008150:	69fb      	ldr	r3, [r7, #28]
 8008152:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8008156:	2b00      	cmp	r3, #0
 8008158:	d012      	beq.n	8008180 <HAL_RCC_GetSysClockFreq+0x88>
      {
#if defined(RCC_CFGR2_PREDIV1)
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1_Pos];
#else
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 800815a:	4b13      	ldr	r3, [pc, #76]	@ (80081a8 <HAL_RCC_GetSysClockFreq+0xb0>)
 800815c:	685b      	ldr	r3, [r3, #4]
 800815e:	0c5b      	lsrs	r3, r3, #17
 8008160:	f003 0301 	and.w	r3, r3, #1
 8008164:	3328      	adds	r3, #40	@ 0x28
 8008166:	443b      	add	r3, r7
 8008168:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 800816c:	61bb      	str	r3, [r7, #24]
        {
          pllclk = pllclk / 2;
        }
#else
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 800816e:	697b      	ldr	r3, [r7, #20]
 8008170:	4a0e      	ldr	r2, [pc, #56]	@ (80081ac <HAL_RCC_GetSysClockFreq+0xb4>)
 8008172:	fb03 f202 	mul.w	r2, r3, r2
 8008176:	69bb      	ldr	r3, [r7, #24]
 8008178:	fbb2 f3f3 	udiv	r3, r2, r3
 800817c:	627b      	str	r3, [r7, #36]	@ 0x24
 800817e:	e004      	b.n	800818a <HAL_RCC_GetSysClockFreq+0x92>
#endif /*RCC_CFGR2_PREDIV1SRC*/
      }
      else
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 8008180:	697b      	ldr	r3, [r7, #20]
 8008182:	4a0b      	ldr	r2, [pc, #44]	@ (80081b0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8008184:	fb02 f303 	mul.w	r3, r2, r3
 8008188:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      sysclockfreq = pllclk;
 800818a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800818c:	623b      	str	r3, [r7, #32]
      break;
 800818e:	e002      	b.n	8008196 <HAL_RCC_GetSysClockFreq+0x9e>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8008190:	4b06      	ldr	r3, [pc, #24]	@ (80081ac <HAL_RCC_GetSysClockFreq+0xb4>)
 8008192:	623b      	str	r3, [r7, #32]
      break;
 8008194:	bf00      	nop
    }
  }
  return sysclockfreq;
 8008196:	6a3b      	ldr	r3, [r7, #32]
}
 8008198:	4618      	mov	r0, r3
 800819a:	3728      	adds	r7, #40	@ 0x28
 800819c:	46bd      	mov	sp, r7
 800819e:	bc90      	pop	{r4, r7}
 80081a0:	4770      	bx	lr
 80081a2:	bf00      	nop
 80081a4:	0800829c 	.word	0x0800829c
 80081a8:	40021000 	.word	0x40021000
 80081ac:	007a1200 	.word	0x007a1200
 80081b0:	003d0900 	.word	0x003d0900

080081b4 <RCC_Delay>:
  * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
  * @param  mdelay: specifies the delay time length, in milliseconds.
  * @retval None
  */
static void RCC_Delay(uint32_t mdelay)
{
 80081b4:	b480      	push	{r7}
 80081b6:	b085      	sub	sp, #20
 80081b8:	af00      	add	r7, sp, #0
 80081ba:	6078      	str	r0, [r7, #4]
  __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 80081bc:	4b0a      	ldr	r3, [pc, #40]	@ (80081e8 <RCC_Delay+0x34>)
 80081be:	681b      	ldr	r3, [r3, #0]
 80081c0:	4a0a      	ldr	r2, [pc, #40]	@ (80081ec <RCC_Delay+0x38>)
 80081c2:	fba2 2303 	umull	r2, r3, r2, r3
 80081c6:	0a5b      	lsrs	r3, r3, #9
 80081c8:	687a      	ldr	r2, [r7, #4]
 80081ca:	fb02 f303 	mul.w	r3, r2, r3
 80081ce:	60fb      	str	r3, [r7, #12]
  do
  {
    __NOP();
 80081d0:	bf00      	nop
  }
  while (Delay --);
 80081d2:	68fb      	ldr	r3, [r7, #12]
 80081d4:	1e5a      	subs	r2, r3, #1
 80081d6:	60fa      	str	r2, [r7, #12]
 80081d8:	2b00      	cmp	r3, #0
 80081da:	d1f9      	bne.n	80081d0 <RCC_Delay+0x1c>
}
 80081dc:	bf00      	nop
 80081de:	bf00      	nop
 80081e0:	3714      	adds	r7, #20
 80081e2:	46bd      	mov	sp, r7
 80081e4:	bc80      	pop	{r7}
 80081e6:	4770      	bx	lr
 80081e8:	20000004 	.word	0x20000004
 80081ec:	10624dd3 	.word	0x10624dd3

080081f0 <memset>:
 80081f0:	4603      	mov	r3, r0
 80081f2:	4402      	add	r2, r0
 80081f4:	4293      	cmp	r3, r2
 80081f6:	d100      	bne.n	80081fa <memset+0xa>
 80081f8:	4770      	bx	lr
 80081fa:	f803 1b01 	strb.w	r1, [r3], #1
 80081fe:	e7f9      	b.n	80081f4 <memset+0x4>

08008200 <__libc_init_array>:
 8008200:	b570      	push	{r4, r5, r6, lr}
 8008202:	2600      	movs	r6, #0
 8008204:	4d0c      	ldr	r5, [pc, #48]	@ (8008238 <__libc_init_array+0x38>)
 8008206:	4c0d      	ldr	r4, [pc, #52]	@ (800823c <__libc_init_array+0x3c>)
 8008208:	1b64      	subs	r4, r4, r5
 800820a:	10a4      	asrs	r4, r4, #2
 800820c:	42a6      	cmp	r6, r4
 800820e:	d109      	bne.n	8008224 <__libc_init_array+0x24>
 8008210:	f000 f81a 	bl	8008248 <_init>
 8008214:	2600      	movs	r6, #0
 8008216:	4d0a      	ldr	r5, [pc, #40]	@ (8008240 <__libc_init_array+0x40>)
 8008218:	4c0a      	ldr	r4, [pc, #40]	@ (8008244 <__libc_init_array+0x44>)
 800821a:	1b64      	subs	r4, r4, r5
 800821c:	10a4      	asrs	r4, r4, #2
 800821e:	42a6      	cmp	r6, r4
 8008220:	d105      	bne.n	800822e <__libc_init_array+0x2e>
 8008222:	bd70      	pop	{r4, r5, r6, pc}
 8008224:	f855 3b04 	ldr.w	r3, [r5], #4
 8008228:	4798      	blx	r3
 800822a:	3601      	adds	r6, #1
 800822c:	e7ee      	b.n	800820c <__libc_init_array+0xc>
 800822e:	f855 3b04 	ldr.w	r3, [r5], #4
 8008232:	4798      	blx	r3
 8008234:	3601      	adds	r6, #1
 8008236:	e7f2      	b.n	800821e <__libc_init_array+0x1e>
 8008238:	0800b23c 	.word	0x0800b23c
 800823c:	0800b23c 	.word	0x0800b23c
 8008240:	0800b23c 	.word	0x0800b23c
 8008244:	0800b240 	.word	0x0800b240

08008248 <_init>:
 8008248:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800824a:	bf00      	nop
 800824c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800824e:	bc08      	pop	{r3}
 8008250:	469e      	mov	lr, r3
 8008252:	4770      	bx	lr

08008254 <_fini>:
 8008254:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008256:	bf00      	nop
 8008258:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800825a:	bc08      	pop	{r3}
 800825c:	469e      	mov	lr, r3
 800825e:	4770      	bx	lr
